{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "WebTokenService": {
        "id": "WebTokenService",
        "path": "WebTokenService",
        "children": {
          "Zone": {
            "id": "Zone",
            "path": "WebTokenService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebTokenService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebTokenService/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "TokenServiceLambda": {
            "id": "TokenServiceLambda",
            "path": "WebTokenService/TokenServiceLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebTokenService/TokenServiceLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebTokenService/TokenServiceLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/TokenServiceLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebTokenService/TokenServiceLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/TokenServiceLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/bots"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "TokenServiceLambdaServiceRoleDefaultPolicy87F48249",
                            "roles": [
                              {
                                "Ref": "TokenServiceLambdaServiceRoleBC560DEB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebTokenService/TokenServiceLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebTokenService/TokenServiceLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebTokenService/TokenServiceLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/TokenServiceLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "33a7205d01b43041b066f0ccc75637a84eec3201874280c0fb001d01e580ac42.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "TokenServiceLambdaServiceRoleBC560DEB",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "accessTokenExpirationMinutes": "60",
                        "refreshTokenExpirationDays": "365",
                        "AllowUsers": "",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "WebTokenService-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebTokenService/TokenServiceLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/TokenServiceLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebTokenService/TokenServiceLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "WebTokenService-GWAPI": {
            "id": "WebTokenService-GWAPI",
            "path": "WebTokenService/WebTokenService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/WebTokenService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebTokenService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.78.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebTokenService/WebTokenService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebTokenServiceGWAPICloudWatchRole2C04FD27",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.78.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebTokenService/WebTokenService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebTokenServiceGWAPIAFE5A254"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.78.0"
                }
              },
              "DeploymentStage.GetToken": {
                "id": "DeploymentStage.GetToken",
                "path": "WebTokenService/WebTokenService-GWAPI/DeploymentStage.GetToken",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/DeploymentStage.GetToken/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebTokenServiceGWAPIAFE5A254"
                        },
                        "deploymentId": {
                          "Ref": "WebTokenServiceGWAPIDeployment69CE11EB529ab5022852473b74f6dd36d10b3e06"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "GetToken"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.78.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebTokenService/WebTokenService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebTokenService/WebTokenService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.78.0"
                    }
                  },
                  "me": {
                    "id": "me",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/me",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/me/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "me",
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/me/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPImeEE3FC695"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET",
                        "children": {
                          "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me": {
                            "id": "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                                      },
                                      "/GET/me"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me": {
                            "id": "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/test-invoke-stage/GET/me"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPImeEE3FC695"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "getToken": {
                    "id": "getToken",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "getToken",
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIgetTokenEA421B7E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST",
                        "children": {
                          "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken": {
                            "id": "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                                      },
                                      "/POST/getToken"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken": {
                            "id": "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/test-invoke-stage/POST/getToken"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "POST",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIgetTokenEA421B7E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "logOut": {
                    "id": "logOut",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "logOut",
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIlogOut3A11217E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET",
                        "children": {
                          "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut": {
                            "id": "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                                      },
                                      "/GET/logOut"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut": {
                            "id": "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/test-invoke-stage/GET/logOut"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIlogOut3A11217E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.78.0"
                }
              },
              "WebTokenService-GWAPI-UsagePlan": {
                "id": "WebTokenService-GWAPI-UsagePlan",
                "path": "WebTokenService/WebTokenService-GWAPI/WebTokenService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/WebTokenService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            },
                            "stage": {
                              "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 2,
                          "rateLimit": 100
                        },
                        "usagePlanName": "WebTokenService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.78.0"
                }
              },
              "WebTokenServiceGW-SubDomain": {
                "id": "WebTokenServiceGW-SubDomain",
                "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "auth.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.78.0"
                    }
                  },
                  "Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9": {
                    "id": "Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9",
                    "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C"
                            },
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            },
                            "stage": {
                              "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.LambdaRestApi",
              "version": "2.78.0"
            }
          },
          "TokenServiceAPIGWARecord": {
            "id": "TokenServiceAPIGWARecord",
            "path": "WebTokenService/TokenServiceAPIGWARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/TokenServiceAPIGWARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "auth.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.78.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebTokenService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebTokenService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.78.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.78.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.78.0"
            }
          },
          "WebTokenService-GWAPI-tokenApi": {
            "id": "WebTokenService-GWAPI-tokenApi",
            "path": "WebTokenService/WebTokenService-GWAPI-tokenApi",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebTokenService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebTokenService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebTokenService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebTokenService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebPublicPages": {
        "id": "WebPublicPages",
        "path": "WebPublicPages",
        "children": {
          "imported-webTable": {
            "id": "imported-webTable",
            "path": "WebPublicPages/imported-webTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebPublicPages/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "WebPublicPages/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebPublicPages/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "WebPublicPages-GWAPI": {
            "id": "WebPublicPages-GWAPI",
            "path": "WebPublicPages/WebPublicPages-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebPublicPages-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.78.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebPublicPages/WebPublicPages-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebPublicPagesGWAPICloudWatchRoleBDCD59DD",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.78.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebPublicPagesGWAPI914E312C"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.78.0"
                }
              },
              "DeploymentStage.pagesAPI": {
                "id": "DeploymentStage.pagesAPI",
                "path": "WebPublicPages/WebPublicPages-GWAPI/DeploymentStage.pagesAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/DeploymentStage.pagesAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebPublicPagesGWAPI914E312C"
                        },
                        "deploymentId": {
                          "Ref": "WebPublicPagesGWAPIDeployment14CEB655312905fefaed581f1c99ea90e1e069ea"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "pagesAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.78.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.78.0"
                    }
                  },
                  "help-center": {
                    "id": "help-center",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "help-center",
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "landing": {
                        "id": "landing",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "pathPart": "landing",
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterlanding02E546B4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing": {
                                "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCLandingLambda7205BD53",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                          },
                                          "/GET/help-center/landing"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing": {
                                "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCLandingLambda7205BD53",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/test-invoke-stage/GET/help-center/landing"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterlanding02E546B4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCLandingLambda7205BD53",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "subcategory": {
                        "id": "subcategory",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "pathPart": "subcategory",
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcentersubcategoryD49C0FB0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory": {
                                "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCsubcategoryLambdaDF64526C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                          },
                                          "/GET/help-center/subcategory"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory": {
                                "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCsubcategoryLambdaDF64526C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/test-invoke-stage/GET/help-center/subcategory"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcentersubcategoryD49C0FB0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCsubcategoryLambdaDF64526C",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "article": {
                        "id": "article",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "pathPart": "article",
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterarticleFAA8084E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article": {
                                "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCArticleLambda3857DD83",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                          },
                                          "/GET/help-center/article"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article": {
                                "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCArticleLambda3857DD83",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/test-invoke-stage/GET/help-center/article"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterarticleFAA8084E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCArticleLambda3857DD83",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "content": {
                    "id": "content",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "content",
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIcontentC4B537BE"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET",
                        "children": {
                          "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content": {
                            "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetWebPageContentLambdaA5F8923E",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                      },
                                      "/GET/content"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content": {
                            "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetWebPageContentLambdaA5F8923E",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/test-invoke-stage/GET/content"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIcontentC4B537BE"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "GetWebPageContentLambdaA5F8923E",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "bot-landing": {
                    "id": "bot-landing",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "bot-landing",
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIbotlanding68916FE1"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET",
                        "children": {
                          "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing": {
                            "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetSubdomainLambdaE4966976",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                      },
                                      "/GET/bot-landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing": {
                            "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetSubdomainLambdaE4966976",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/test-invoke-stage/GET/bot-landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIbotlanding68916FE1"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "GetSubdomainLambdaE4966976",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.78.0"
                }
              },
              "WebPublicPages-GWAPI-UsagePlan": {
                "id": "WebPublicPages-GWAPI-UsagePlan",
                "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            },
                            "stage": {
                              "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 2,
                          "rateLimit": 100
                        },
                        "usagePlanName": "WebPublicPages-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.78.0"
                }
              },
              "WebPublicPages-GW-SubDomain": {
                "id": "WebPublicPages-GW-SubDomain",
                "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "public-pages.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.78.0"
                    }
                  },
                  "Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD": {
                    "id": "Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain/Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain/Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebPublicPagesGWAPIWebPublicPagesGWSubDomainA8FAC5E9"
                            },
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            },
                            "stage": {
                              "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.78.0"
            }
          },
          "WebPublicPages-ARecord": {
            "id": "WebPublicPages-ARecord",
            "path": "WebPublicPages/WebPublicPages-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/WebPublicPages-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "public-pages.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebPublicPagesGWAPIWebPublicPagesGWSubDomainA8FAC5E9",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebPublicPagesGWAPIWebPublicPagesGWSubDomainA8FAC5E9",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.78.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebPublicPages/WebPublicPages-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebPublicPages/WebPublicPages-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.78.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.78.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.78.0"
            }
          },
          "GetHCLandingLambda": {
            "id": "GetHCLandingLambda",
            "path": "WebPublicPages/GetHCLandingLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetHCLandingLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetHCLandingLambdaServiceRoleDefaultPolicy885F4CFB",
                            "roles": [
                              {
                                "Ref": "GetHCLandingLambdaServiceRole49B6A35F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetHCLandingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetHCLandingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetHCLandingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetHCLandingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ce97f06579a7ba86d47e78edca8738365424abdefc12445024a0b659fd7a4f67.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetHCLandingLambdaServiceRole49B6A35F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Landing-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetHCLandingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCLandingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetHCLandingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "GetHCsubcategoryLambda": {
            "id": "GetHCsubcategoryLambda",
            "path": "WebPublicPages/GetHCsubcategoryLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetHCsubcategoryLambdaServiceRoleDefaultPolicyC6ACB76B",
                            "roles": [
                              {
                                "Ref": "GetHCsubcategoryLambdaServiceRole5D0A48C2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetHCsubcategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetHCsubcategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c5c63014b64ea6d7484640854788abe725b828349b09204baaf2752a1ce794ba.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetHCsubcategoryLambdaServiceRole5D0A48C2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Subcategory-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetHCsubcategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetHCsubcategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetHCArticleLambda": {
            "id": "GetHCArticleLambda",
            "path": "WebPublicPages/GetHCArticleLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetHCArticleLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetHCArticleLambdaServiceRoleDefaultPolicy6EADEE79",
                            "roles": [
                              {
                                "Ref": "GetHCArticleLambdaServiceRoleE865A3F8"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetHCArticleLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetHCArticleLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetHCArticleLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetHCArticleLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0bc6532f676e2cb6f533f58ed0f97d3410f35c1c7637a8f67749f412bb1c9033.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetHCArticleLambdaServiceRoleE865A3F8",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Article-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetHCArticleLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCArticleLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetHCArticleLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetWebPageContentLambda": {
            "id": "GetWebPageContentLambda",
            "path": "WebPublicPages/GetWebPageContentLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetWebPageContentLambdaServiceRoleDefaultPolicy3CD79D99",
                            "roles": [
                              {
                                "Ref": "GetWebPageContentLambdaServiceRoleCFFC41DD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetWebPageContentLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetWebPageContentLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetWebPageContentLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetWebPageContentLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9eeeba8b2304a6b1a0a5ea7d6ecb5240a1261d8d143555cb871036aa83a52a9a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetWebPageContentLambdaServiceRoleCFFC41DD",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Content-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetWebPageContentLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetWebPageContentLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetWebPageContentLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetSubdomainLambda": {
            "id": "GetSubdomainLambda",
            "path": "WebPublicPages/GetSubdomainLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetSubdomainLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetSubdomainLambdaServiceRoleDefaultPolicyA7F93036",
                            "roles": [
                              {
                                "Ref": "GetSubdomainLambdaServiceRole079F22B3"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetSubdomainLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetSubdomainLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetSubdomainLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetSubdomainLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "20e0265154e2106d743d553fc8648ee75e37e570fc19f5205c723d81bab4510a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetSubdomainLambdaServiceRole079F22B3",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetSubdomainLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetSubdomainLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetSubdomainLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebPublicPages/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebPublicPages/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebPublicPages/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebPublicPages/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServiceMain": {
        "id": "WebRestServiceMain",
        "path": "WebRestServiceMain",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceMain/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "imported-deleteBotDataQueue-forCreateBotsLambdas": {
            "id": "imported-deleteBotDataQueue-forCreateBotsLambdas",
            "path": "WebRestServiceMain/imported-deleteBotDataQueue-forCreateBotsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-deleteBotDataQueueDLQ-forCreateBotsLambdas": {
            "id": "imported-deleteBotDataQueueDLQ-forCreateBotsLambdas",
            "path": "WebRestServiceMain/imported-deleteBotDataQueueDLQ-forCreateBotsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "ListBotsLambda": {
            "id": "ListBotsLambda",
            "path": "WebRestServiceMain/ListBotsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListBotsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
                            "roles": [
                              {
                                "Ref": "ListBotsLambdaServiceRoleA6E24787"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListBotsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListBotsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListBotsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListBotsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "280a7799df66ef99434a844c06e18cd22f93bf5ebe4e873275d8c65e3d4647f1.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListBotsLambdaServiceRoleA6E24787",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListBotsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListBotsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "GetBotLambda": {
            "id": "GetBotLambda",
            "path": "WebRestServiceMain/GetBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetBotLambdaServiceRoleDefaultPolicy4267B667",
                            "roles": [
                              {
                                "Ref": "GetBotLambdaServiceRoleC26C83F1"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a2c4152801cc5a495b6334bfb3a8e5de981f53d138d4d0cef0e3c90faf3903ea.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetBotLambdaServiceRoleC26C83F1",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddBotLambda": {
            "id": "AddBotLambda",
            "path": "WebRestServiceMain/AddBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/AddBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/AddBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/AddBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/AddBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddBotLambdaServiceRoleDefaultPolicy840C6C96",
                            "roles": [
                              {
                                "Ref": "AddBotLambdaServiceRole3893B7F5"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d703a38f883e708e5590e4b2c5e377a27b806882c70c1190fb4c94a05edf027c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddBotLambdaServiceRole3893B7F5",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "RegisterBotLambda": {
            "id": "RegisterBotLambda",
            "path": "WebRestServiceMain/RegisterBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "RegisterBotLambdaServiceRoleDefaultPolicy08459592",
                            "roles": [
                              {
                                "Ref": "RegisterBotLambdaServiceRole6F8C4E1E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/RegisterBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/RegisterBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/RegisterBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/RegisterBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3c17907711592613cc06a563653c0ab046a32b3921d906185bf6c79c028a9fb0.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "RegisterBotLambdaServiceRole6F8C4E1E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Register-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/RegisterBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/RegisterBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/RegisterBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "UnRegisterBotLambda": {
            "id": "UnRegisterBotLambda",
            "path": "WebRestServiceMain/UnRegisterBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "UnRegisterBotLambdaServiceRoleDefaultPolicyF9271B9B",
                            "roles": [
                              {
                                "Ref": "UnRegisterBotLambdaServiceRole2048DD2D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/UnRegisterBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/UnRegisterBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "042df58b43697dc31d336ebe84716f137a99412ea1a09aa511482c5f9c226728.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "UnRegisterBotLambdaServiceRole2048DD2D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-UnRegister-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/UnRegisterBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/UnRegisterBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditBotLambda": {
            "id": "EditBotLambda",
            "path": "WebRestServiceMain/EditBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditBotLambdaServiceRoleDefaultPolicyD972E5A3",
                            "roles": [
                              {
                                "Ref": "EditBotLambdaServiceRole67F2A33A"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "bb82e445948e5514d3aedca6d5faa34ca489e2100046f3fcd2290680bd3013ed.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditBotLambdaServiceRole67F2A33A",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteBotLambda": {
            "id": "DeleteBotLambda",
            "path": "WebRestServiceMain/DeleteBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteBotLambdaServiceRoleDefaultPolicyD016D023",
                            "roles": [
                              {
                                "Ref": "DeleteBotLambdaServiceRoleEE3D337F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0419865ff064981e45efe846d0ac800173c29304ea2775949a0903796246c1ff.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteBotLambdaServiceRoleEE3D337F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteBotDataLambda": {
            "id": "DeleteBotDataLambda",
            "path": "WebRestServiceMain/DeleteBotDataLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteBotDataLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteBotDataLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:bot-deleteBotQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:bot-deleteBotQueueDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteBotDataLambdaServiceRoleDefaultPolicy1F5512C8",
                            "roles": [
                              {
                                "Ref": "DeleteBotDataLambdaServiceRole521DE6F2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteBotDataLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteBotDataLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "256742642a802d32caf398a2884e8b622e8f612c2b9ebeef8c0fb18f6cf3c559.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteBotDataLambdaServiceRole521DE6F2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "deleteBotDataQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/bot-deleteBotQueue.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-DeleteData-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteBotDataLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteBotDataLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueforCreateBotsLambdasCF7E4BD3": {
                "id": "SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueforCreateBotsLambdasCF7E4BD3",
                "path": "WebRestServiceMain/DeleteBotDataLambda/SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueforCreateBotsLambdasCF7E4BD3",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueforCreateBotsLambdasCF7E4BD3/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "DeleteBotDataLambda16385280"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:bot-deleteBotQueue.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueDLQforCreateBotsLambdas045D3216": {
                "id": "SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueDLQforCreateBotsLambdas045D3216",
                "path": "WebRestServiceMain/DeleteBotDataLambda/SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueDLQforCreateBotsLambdas045D3216",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotDataLambda/SqsEventSource:WebRestServiceMainimporteddeleteBotDataQueueDLQforCreateBotsLambdas045D3216/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "DeleteBotDataLambda16385280"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:bot-deleteBotQueueDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListBotCommandsLambda": {
            "id": "ListBotCommandsLambda",
            "path": "WebRestServiceMain/ListBotCommandsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListBotCommandsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListBotCommandsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListBotCommandsLambdaServiceRoleDefaultPolicyBDFD9244",
                            "roles": [
                              {
                                "Ref": "ListBotCommandsLambdaServiceRole78E1ADFC"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListBotCommandsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListBotCommandsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "6d4d4a4c17ab808dbb41eacfea95fc1924be521f938614081a44a246a7672139.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListBotCommandsLambdaServiceRole78E1ADFC",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListBotCommandsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListBotCommandsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetBotCommandLambda": {
            "id": "GetBotCommandLambda",
            "path": "WebRestServiceMain/GetBotCommandLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetBotCommandLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetBotCommandLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotCommandLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetBotCommandLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetBotCommandLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetBotCommandLambdaServiceRoleDefaultPolicy0126F8FA",
                            "roles": [
                              {
                                "Ref": "GetBotCommandLambdaServiceRole878ED2B2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetBotCommandLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetBotCommandLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetBotCommandLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetBotCommandLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9aaa08d72120b5f7a427914eb0febc9c2816ca9cc43facaff7ab2cef7d378799.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetBotCommandLambdaServiceRole878ED2B2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetBotCommandLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotCommandLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetBotCommandLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddBotCommandLambda": {
            "id": "AddBotCommandLambda",
            "path": "WebRestServiceMain/AddBotCommandLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/AddBotCommandLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/AddBotCommandLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotCommandLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/AddBotCommandLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/AddBotCommandLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddBotCommandLambdaServiceRoleDefaultPolicy1D8814DD",
                            "roles": [
                              {
                                "Ref": "AddBotCommandLambdaServiceRoleA61B8767"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddBotCommandLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddBotCommandLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddBotCommandLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddBotCommandLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "92367e2f617ef460d9cba7959e46ef5f0b5e9e864dc3e4206e11054b20697290.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddBotCommandLambdaServiceRoleA61B8767",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddBotCommandLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotCommandLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddBotCommandLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditBotCommandLambda": {
            "id": "EditBotCommandLambda",
            "path": "WebRestServiceMain/EditBotCommandLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditBotCommandLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditBotCommandLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotCommandLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditBotCommandLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditBotCommandLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditBotCommandLambdaServiceRoleDefaultPolicyDA8B5E6D",
                            "roles": [
                              {
                                "Ref": "EditBotCommandLambdaServiceRoleB7D76F04"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditBotCommandLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditBotCommandLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditBotCommandLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditBotCommandLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a40f8833a41c744bd0f622e790bf3429e9caf4525e96db071435fdd44a6c73d1.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditBotCommandLambdaServiceRoleB7D76F04",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditBotCommandLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotCommandLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditBotCommandLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteBotCommandLambda": {
            "id": "DeleteBotCommandLambda",
            "path": "WebRestServiceMain/DeleteBotCommandLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteBotCommandLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteBotCommandLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotCommandLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteBotCommandLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteBotCommandLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteBotCommandLambdaServiceRoleDefaultPolicy5E4DA8F2",
                            "roles": [
                              {
                                "Ref": "DeleteBotCommandLambdaServiceRole002A2227"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteBotCommandLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteBotCommandLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteBotCommandLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteBotCommandLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a7827ae7e6407edc00168007d644e5e63d4bcdc4e50e052c2e4a6c9e0985dd32.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteBotCommandLambdaServiceRole002A2227",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteBotCommandLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotCommandLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteBotCommandLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListChannelsLambda": {
            "id": "ListChannelsLambda",
            "path": "WebRestServiceMain/ListChannelsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListChannelsLambdaServiceRoleDefaultPolicy13606B0F",
                            "roles": [
                              {
                                "Ref": "ListChannelsLambdaServiceRoleC005ABDC"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListChannelsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListChannelsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListChannelsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListChannelsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e80b6b5e0eef1ea559d78ede6522166a5d3e937556de33cb183280bbdc2617b7.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListChannelsLambdaServiceRoleC005ABDC",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListChannelsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListChannelsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListChannelsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetChannelLambda": {
            "id": "GetChannelLambda",
            "path": "WebRestServiceMain/GetChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetChannelLambdaServiceRoleDefaultPolicyBE981215",
                            "roles": [
                              {
                                "Ref": "GetChannelLambdaServiceRoleE14FCB20"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "db7cc033513d1c6f2e517b29b1e7c47a3466ae5594768ea3458be3ef6d9831d2.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetChannelLambdaServiceRoleE14FCB20",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditChannelLambda": {
            "id": "EditChannelLambda",
            "path": "WebRestServiceMain/EditChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditChannelLambdaServiceRoleDefaultPolicy1C60F4EE",
                            "roles": [
                              {
                                "Ref": "EditChannelLambdaServiceRole1EA00B2F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3dc360f3974a6d8645bea7abcb73e73dd01b5dd22e0bde2262ca4aa97df6caa2.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditChannelLambdaServiceRole1EA00B2F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteChannelLambda": {
            "id": "DeleteChannelLambda",
            "path": "WebRestServiceMain/DeleteChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteChannelLambdaServiceRoleDefaultPolicyA8327749",
                            "roles": [
                              {
                                "Ref": "DeleteChannelLambdaServiceRoleE75213EF"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "6fe8b9aeb4699b8e1167affe6788de499cada500e20976384c8229f11ae687d6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteChannelLambdaServiceRoleE75213EF",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "imported-migrateChannelFirstQueue-CreateChannelsLambdas": {
            "id": "imported-migrateChannelFirstQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelFirstQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-migrateChannelFirstQueueDLQ-CreateChannelsLambdas": {
            "id": "imported-migrateChannelFirstQueueDLQ-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelFirstQueueDLQ-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-migrateChannelSecondQueue-CreateChannelsLambdas": {
            "id": "imported-migrateChannelSecondQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelSecondQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-migrateChannelSecondQueueDLQ-CreateChannelsLambdas": {
            "id": "imported-migrateChannelSecondQueueDLQ-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelSecondQueueDLQ-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-schedulerSendQueue-CreateChannelsLambdas": {
            "id": "imported-schedulerSendQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-schedulerSendQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-CreateChannelsLambdas": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-SubscribeToSubscriptionPlanQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToContentPlanQueue-CreateChannelsLambdas": {
            "id": "imported-SubscribeToContentPlanQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-SubscribeToContentPlanQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "MigrateChannelFirstStage": {
            "id": "MigrateChannelFirstStage",
            "path": "WebRestServiceMain/MigrateChannelFirstStage",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/MigrateChannelFirstStage/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStage.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStagDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "MigrateChannelFirstStageServiceRoleDefaultPolicy356E47CC",
                            "roles": [
                              {
                                "Ref": "MigrateChannelFirstStageServiceRole7D7EA711"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ae4dc31542f16070e462e1586dee1444aa59008e79ad1e9ccfcad307679c6797.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "MigrateChannelFirstStageServiceRole7D7EA711",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "migrateChannelSecondQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/migrateChannel-secondStage.fifo"
                            ]
                          ]
                        },
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "API_ID": "28013806",
                        "API_HASH": "ffe7611fbfc7f8d4a94ecd725931706a",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Migrate-first",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelFirstStage52C460E9"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStage.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelFirstStage52C460E9"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStagDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "MigrateChannelSecondStage": {
            "id": "MigrateChannelSecondStage",
            "path": "WebRestServiceMain/MigrateChannelSecondStage",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/MigrateChannelSecondStage/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStagDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "MigrateChannelSecondStageServiceRoleDefaultPolicyD9047194",
                            "roles": [
                              {
                                "Ref": "MigrateChannelSecondStageServiceRole7B523434"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "253c8f6f2a79cf16e6c982fb79615282626e496cc244fe72a42961e2cc8f6876.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "MigrateChannelSecondStageServiceRole7B523434",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "API_ID": "28013806",
                        "API_HASH": "ffe7611fbfc7f8d4a94ecd725931706a",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Migrate-second",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelSecondStage44CFF078"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelSecondStage44CFF078"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStagDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListMeetingsLambda": {
            "id": "ListMeetingsLambda",
            "path": "WebRestServiceMain/ListMeetingsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListMeetingsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListMeetingsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListMeetingsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListMeetingsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListMeetingsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListMeetingsLambdaServiceRoleDefaultPolicy315B0FF1",
                            "roles": [
                              {
                                "Ref": "ListMeetingsLambdaServiceRole693D91AA"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListMeetingsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListMeetingsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListMeetingsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListMeetingsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d85a662b8f8a4f2cc54e6b0290a3470754c7bc91d52bad19d9a9bce7b5473aea.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListMeetingsLambdaServiceRole693D91AA",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListMeetingsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListMeetingsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListMeetingsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetMeetingLambda": {
            "id": "GetMeetingLambda",
            "path": "WebRestServiceMain/GetMeetingLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetMeetingLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetMeetingLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetMeetingLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetMeetingLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetMeetingLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetMeetingLambdaServiceRoleDefaultPolicyC63BAFB3",
                            "roles": [
                              {
                                "Ref": "GetMeetingLambdaServiceRole40776C5C"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "45d3f670f4e4bfafb6f6ad6af03b4b58a1a6116770cff3447059aeb437d0bb51.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetMeetingLambdaServiceRole40776C5C",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddMeetingLambda": {
            "id": "AddMeetingLambda",
            "path": "WebRestServiceMain/AddMeetingLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/AddMeetingLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/AddMeetingLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddMeetingLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/AddMeetingLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/AddMeetingLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddMeetingLambdaServiceRoleDefaultPolicyE81B42AD",
                            "roles": [
                              {
                                "Ref": "AddMeetingLambdaServiceRoleD1E445C7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "62f972733e86bf21979ba2d2ec1f63d013d6385b144051e7570c3ff33dafc5be.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddMeetingLambdaServiceRoleD1E445C7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditMeetingLambda": {
            "id": "EditMeetingLambda",
            "path": "WebRestServiceMain/EditMeetingLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditMeetingLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditMeetingLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditMeetingLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditMeetingLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditMeetingLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditMeetingLambdaServiceRoleDefaultPolicy73ED71CC",
                            "roles": [
                              {
                                "Ref": "EditMeetingLambdaServiceRole29920C04"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "16d8f9e80de52795aa83af432460b8c67a2f5ea9b5ce34e8b82ed68c673b798c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditMeetingLambdaServiceRole29920C04",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteMeetingLambda": {
            "id": "DeleteMeetingLambda",
            "path": "WebRestServiceMain/DeleteMeetingLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteMeetingLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteMeetingLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteMeetingLambdaServiceRoleDefaultPolicy0442AFB0",
                            "roles": [
                              {
                                "Ref": "DeleteMeetingLambdaServiceRole7F3C7EC2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0f00cb89c8ba0cfde38f29188c53422d25abe3396f60a06347d45bcbd04795d3.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteMeetingLambdaServiceRole7F3C7EC2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListPaymentOptionsLambda": {
            "id": "ListPaymentOptionsLambda",
            "path": "WebRestServiceMain/ListPaymentOptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
                            "roles": [
                              {
                                "Ref": "ListPaymentOptionsLambdaServiceRoleD3A97E58"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1b0d2b6a8638bc63dda35698c4b0ea9e5f3e429d9187f2f82b1751b2db529bec.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListPaymentOptionsLambdaServiceRoleD3A97E58",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetPaymentOptionLambda": {
            "id": "GetPaymentOptionLambda",
            "path": "WebRestServiceMain/GetPaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304",
                            "roles": [
                              {
                                "Ref": "GetPaymentOptionLambdaServiceRoleDC5B8DC2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d74e1e93a21a9013f612540640fa0651f28dd5465b02cc5cad51cb3ae0e860fd.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetPaymentOptionLambdaServiceRoleDC5B8DC2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddPaymentOptionLambda": {
            "id": "AddPaymentOptionLambda",
            "path": "WebRestServiceMain/AddPaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
                            "roles": [
                              {
                                "Ref": "AddPaymentOptionLambdaServiceRole15897195"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "55c606deddfceb52ed47d72b6d1864548a95c9583795ccf3ffe7e9a442aa9344.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddPaymentOptionLambdaServiceRole15897195",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditPaymentOptionLambda": {
            "id": "EditPaymentOptionLambda",
            "path": "WebRestServiceMain/EditPaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
                            "roles": [
                              {
                                "Ref": "EditPaymentOptionLambdaServiceRole73BB83E4"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "169864006b045ae026c4d4c327fdcbd7eefb720dbe1f0a051f11461231ba1f6d.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditPaymentOptionLambdaServiceRole73BB83E4",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeletePaymentOptionLambda": {
            "id": "DeletePaymentOptionLambda",
            "path": "WebRestServiceMain/DeletePaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
                            "roles": [
                              {
                                "Ref": "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2db87ed98efc6189639dceaeea4c9499fecc000e75f1cbea09f81d709d4f1bc6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeletePaymentOptionLambdaServiceRoleB4EBD3CA",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceMain/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceMain/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceMain/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListBotCommandsLambda223B4828\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotCommandsLambda223B4828\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListBotCommandsLambda223B4828\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddBotCommandLambdaA96244AC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddBotCommandLambdaA96244AC\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddBotCommandLambdaA96244AC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotCommandLambdaC92683CD\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotCommandLambdaC92683CD\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetBotCommandLambdaC92683CD\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditBotCommandLambda5F3C4BF1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditBotCommandLambda5F3C4BF1\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditBotCommandLambda5F3C4BF1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteBotCommandLambdaD706781F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteBotCommandLambdaD706781F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteBotCommandLambdaD706781F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListMeetingsLambdaF16F9182\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMeetingsLambdaF16F9182\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListMeetingsLambdaF16F9182\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddMeetingLambda16941AE7\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddMeetingLambda16941AE7\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddMeetingLambda16941AE7\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMeetingLambda5B5F43FB\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMeetingLambda5B5F43FB\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetMeetingLambda5B5F43FB\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditMeetingLambdaF8CDD424\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditMeetingLambdaF8CDD424\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditMeetingLambdaF8CDD424\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteMeetingLambdaADE38392\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteMeetingLambdaADE38392\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteMeetingLambdaADE38392\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceMain/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceMain/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServiceFiles": {
        "id": "WebRestServiceFiles",
        "path": "WebRestServiceFiles",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceFiles/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "ListTelegramFilesLambda": {
            "id": "ListTelegramFilesLambda",
            "path": "WebRestServiceFiles/ListTelegramFilesLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListTelegramFilesLambdaServiceRoleDefaultPolicy3EB5C92E",
                            "roles": [
                              {
                                "Ref": "ListTelegramFilesLambdaServiceRole22F9FFE6"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "eb3fb9436314734fd4150c9fdf8170d065a6dc87d23b7fbb7d619a115e784125.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListTelegramFilesLambdaServiceRole22F9FFE6",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "GetTelegramFileLambda": {
            "id": "GetTelegramFileLambda",
            "path": "WebRestServiceFiles/GetTelegramFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetTelegramFileLambdaServiceRoleDefaultPolicy40949059",
                            "roles": [
                              {
                                "Ref": "GetTelegramFileLambdaServiceRole5FBAAC50"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9e1a65afecfd134d960d503278c2431696b6aa964dea71c6fa24a211b6164e05.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetTelegramFileLambdaServiceRole5FBAAC50",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditTelegramFileLambda": {
            "id": "EditTelegramFileLambda",
            "path": "WebRestServiceFiles/EditTelegramFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditTelegramFileLambdaServiceRoleDefaultPolicy5D68D209",
                            "roles": [
                              {
                                "Ref": "EditTelegramFileLambdaServiceRoleE659C8E7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f6fe0f11db5663f86449c05bbb45e5110acfe4d51db64d62a0cf7be941e80dc9.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditTelegramFileLambdaServiceRoleE659C8E7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteTelegramFileLambda": {
            "id": "DeleteTelegramFileLambda",
            "path": "WebRestServiceFiles/DeleteTelegramFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteTelegramFileLambdaServiceRoleDefaultPolicy729E6FFE",
                            "roles": [
                              {
                                "Ref": "DeleteTelegramFileLambdaServiceRoleAA4962F9"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "475223ee9fea93518458e994a8849a20a3b15d7db445fa6fb7512ae0d0513f36.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteTelegramFileLambdaServiceRoleAA4962F9",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetGetPresignedUrlLambda": {
            "id": "GetGetPresignedUrlLambda",
            "path": "WebRestServiceFiles/GetGetPresignedUrlLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetGetPresignedUrlLambdaServiceRoleDefaultPolicy8389685E",
                            "roles": [
                              {
                                "Ref": "GetGetPresignedUrlLambdaServiceRole6568E3BF"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "40e7033fe59b600960b7fb1b8bb3a969f102fe243557ef2a2f06d103bc3b2e8c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetGetPresignedUrlLambdaServiceRole6568E3BF",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-GetPresignedUrl-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceFiles/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceFiles/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceFiles/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceFiles/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceFiles/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServiceMessagesAndPayments": {
        "id": "WebRestServiceMessagesAndPayments",
        "path": "WebRestServiceMessagesAndPayments",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceMessagesAndPayments/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "SendTestMessageLambda": {
            "id": "SendTestMessageLambda",
            "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendTestMessageLambdaServiceRoleDefaultPolicy824468AA",
                            "roles": [
                              {
                                "Ref": "SendTestMessageLambdaServiceRole14BB4964"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b181be3314e6885a4c131ec2837784b0fe502e129f32fe8058b6b6b7ab205a85.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendTestMessageLambdaServiceRole14BB4964",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendTestMessage-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "SendTestFileLambda": {
            "id": "SendTestFileLambda",
            "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendTestFileLambdaServiceRoleDefaultPolicy33D777A7",
                            "roles": [
                              {
                                "Ref": "SendTestFileLambdaServiceRole6E94BD46"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "21f80d2c972baed0dde74a0c34c77757036ccef1e3576311ff09142ad6599beb.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendTestFileLambdaServiceRole6E94BD46",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendTestFile-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SendDirectMessageFromAdminLambda": {
            "id": "SendDirectMessageFromAdminLambda",
            "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendDirectMessageFromAdminLambdaServiceRoleDefaultPolicyBEF79DC0",
                            "roles": [
                              {
                                "Ref": "SendDirectMessageFromAdminLambdaServiceRole193A9829"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "bbe7aec8583f202f639e8c9236e72260ab665926eba19684026c8ee9d8510e5f.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendDirectMessageFromAdminLambdaServiceRole193A9829",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendDirectMessageFromAdmin-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListBotPaymentsLambda": {
            "id": "ListBotPaymentsLambda",
            "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListBotPaymentsLambdaServiceRoleDefaultPolicy7CC6BD9D",
                            "roles": [
                              {
                                "Ref": "ListBotPaymentsLambdaServiceRole3F198125"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "96ded979bfb5df6f4c3f4aaee081200481f0adde2abda7a4174809f5c1c56c08.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListBotPaymentsLambdaServiceRole3F198125",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotPayments-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "imported-SendMessageSchedulerQueueFirstDLQ-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueFirstDLQ-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueFirstDLQ-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SendMessageSchedulerQueueFirst-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueFirst-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueFirst-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SendMessageSchedulerQueueSecondDLQ-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueSecondDLQ-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueSecondDLQ-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SendMessageSchedulerQueueSecond-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueSecond-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueSecond-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "SendMessage-Scheduller-First-Stage": {
            "id": "SendMessage-Scheduller-First-Stage",
            "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessageSchedullerFirstStageServiceRoleDefaultPolicyBB62FB3C",
                            "roles": [
                              {
                                "Ref": "SendMessageSchedullerFirstStageServiceRole398BD03F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "95a778a27f6049a7bd87ba0e6050fa193ed57ddd459352b3f168cca0ed743130.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessageSchedullerFirstStageServiceRole398BD03F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueFirstURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-First-Queue.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "SendMessage-Scheduller-First-Stage",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SendMessage-Scheduller-Second-Stage": {
            "id": "SendMessage-Scheduller-Second-Stage",
            "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-QueueDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessageSchedullerSecondStageServiceRoleDefaultPolicy06851C85",
                            "roles": [
                              {
                                "Ref": "SendMessageSchedullerSecondStageServiceRoleD3D8EC4E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "263c5c2f492ba5306e84a8ee77c54d8f64fb9ce5090b56e6ced42afb4b5c65f4.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessageSchedullerSecondStageServiceRoleD3D8EC4E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueFirstURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-First-Queue.fifo"
                            ]
                          ]
                        },
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "SendMessage-Scheduller-Second-Stage",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSchedullerSecondStageF93D5734"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSchedullerSecondStageF93D5734"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-QueueDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SendMessageSender": {
            "id": "SendMessageSender",
            "path": "WebRestServiceMessagesAndPayments/SendMessageSender",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-QueueDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessageSenderServiceRoleDefaultPolicy3CB84014",
                            "roles": [
                              {
                                "Ref": "SendMessageSenderServiceRole1250F146"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "41f4a10f9c1bfc94b8f96143e564c30d19ae1f8b93d347de0aa1bce1c655b44d.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessageSenderServiceRole1250F146",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "scheduler-SendMessageSender-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSender0498CBC5"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSender0498CBC5"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-QueueDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "imported-schedulerSendQueueForPaymentProcessor": {
            "id": "imported-schedulerSendQueueForPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-schedulerSendQueueForPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PaymentProcessorQueue": {
            "id": "imported-PaymentProcessorQueue",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PaymentProcessorQueueDQL": {
            "id": "imported-PaymentProcessorQueueDQL",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorQueueDQL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PaymentProcessorConfirmationQueue": {
            "id": "imported-PaymentProcessorConfirmationQueue",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorConfirmationQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PaymentProcessorConfirmationQueueDQL": {
            "id": "imported-PaymentProcessorConfirmationQueueDQL",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorConfirmationQueueDQL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToContentPlanQueue-forPaymentProcessor": {
            "id": "imported-SubscribeToContentPlanQueue-forPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueue-forPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "paymentProcessorIncomingRequests": {
            "id": "paymentProcessorIncomingRequests",
            "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "paymentProcessorIncomingRequestsServiceRoleDefaultPolicyDDCB4396",
                            "roles": [
                              {
                                "Ref": "paymentProcessorIncomingRequestsServiceRole555A208F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "aeed4927019b032f7db8676e580ea6c2c3ebbc6629b729a32e8c7a4b76c310ab.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "paymentProcessorIncomingRequestsServiceRole555A208F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-incomingRequests",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorIncomingRequests676308B6"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorIncomingRequests676308B6"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "paymentProcessorConfirmationRequests": {
            "id": "paymentProcessorConfirmationRequests",
            "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "paymentProcessorConfirmationRequestsServiceRoleDefaultPolicyB58C561D",
                            "roles": [
                              {
                                "Ref": "paymentProcessorConfirmationRequestsServiceRole2AE57561"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "6ca88936bdd7109d9bf46adb365f98257f7cc527b97ad9f69831347bc1f19372.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "paymentProcessorConfirmationRequestsServiceRole2AE57561",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-IncomingPaymentConfirmation",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "imported-expireSubscriptionQueue-ForCreateSubscriptionProcessor": {
            "id": "imported-expireSubscriptionQueue-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-expireSubscriptionQueue-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-expireSubscriptionQueueDLQ-ForCreateSubscriptionProcessor": {
            "id": "imported-expireSubscriptionQueueDLQ-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-expireSubscriptionQueueDLQ-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SendMessageSchedulerQueueSecondForCreateSubscriptionProcessor": {
            "id": "imported-SendMessageSchedulerQueueSecondForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueSecondForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PostScheduler-AddScheduledPostQueue-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-AddScheduledPostQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-AddScheduledPostQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PostScheduler-AddScheduledPostQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-AddScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-AddScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PostScheduler-DeleteScheduledPostQueue-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-DeleteScheduledPostQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-DeleteScheduledPostQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-PostScheduler-DeleteScheduledPostQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-DeleteScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-DeleteScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "SubscriptionProcessorAddScheduledPostLambda": {
            "id": "SubscriptionProcessorAddScheduledPostLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-AddPost.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-AddPost-DLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscriptionProcessorAddScheduledPostLambdaServiceRoleDefaultPolicy6CC475FB",
                            "roles": [
                              {
                                "Ref": "SubscriptionProcessorAddScheduledPostLambdaServiceRoleF0078277"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b5b6d840b9c741d01b8694a637d54309852268658d6edf0424434c96e34988e0.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscriptionProcessorAddScheduledPostLambdaServiceRoleF0078277",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Scheduler-Add-New-Post",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "memorySize": 256,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorAddScheduledPostLambdaF6BF117F"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-AddPost.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorAddScheduledPostLambdaF6BF117F"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-AddPost-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SubscriptionProcessorDeleteScheduledPostLambda": {
            "id": "SubscriptionProcessorDeleteScheduledPostLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-DeletePost.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-DeletePost-DLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscriptionProcessorDeleteScheduledPostLambdaServiceRoleDefaultPolicy77F5D3BC",
                            "roles": [
                              {
                                "Ref": "SubscriptionProcessorDeleteScheduledPostLambdaServiceRoleE5DEA2F8"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e2d0ad23ae33a11bbb2d30c34894151f24638e5cf46b3e57b402c6eb2ae3bb7b.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscriptionProcessorDeleteScheduledPostLambdaServiceRoleE5DEA2F8",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "SendMessageSchedulerQueueSecond": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Scheduler-Delete-Post",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "memorySize": 256,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorDeleteScheduledPostLambda088484ED"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-DeletePost.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorDeleteScheduledPostLambda088484ED"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-DeletePost-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SubscriptionProcessorLambdaContentPlanLambda": {
            "id": "SubscriptionProcessorLambdaContentPlanLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan-DLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscriptionProcessorLambdaContentPlanLambdaServiceRoleDefaultPolicyB03C6E14",
                            "roles": [
                              {
                                "Ref": "SubscriptionProcessorLambdaContentPlanLambdaServiceRoleADE5C715"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7b5aafee7d5a02e982239b31cf90154793c5f6aa28a572c928a74518cb1906b7.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscriptionProcessorLambdaContentPlanLambdaServiceRoleADE5C715",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Subscribe-User-To-ContentPlan",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorLambdaContentPlanLambda730D0AC1"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorLambdaContentPlanLambda730D0AC1"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SubscriptionProcessorSubscriptionPlanLambda": {
            "id": "SubscriptionProcessorSubscriptionPlanLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan-DLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscriptionProcessorSubscriptionPlanLambdaServiceRoleDefaultPolicy7FEB4C15",
                            "roles": [
                              {
                                "Ref": "SubscriptionProcessorSubscriptionPlanLambdaServiceRole4F1CFE60"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7afee0ad3e880beabeae8f5c5832b30a6397555583b82c8a9967a96b64e9390c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscriptionProcessorSubscriptionPlanLambdaServiceRole4F1CFE60",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Subscribe-User-To-SubscriptionPlan",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorSubscriptionPlanLambda0FF2E2A5"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorSubscriptionPlanLambda0FF2E2A5"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "expiteChannelSubscriptionLambda": {
            "id": "expiteChannelSubscriptionLambda",
            "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-expireSubscriptionQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "expiteChannelSubscriptionLambdaServiceRoleDefaultPolicy351185E1",
                            "roles": [
                              {
                                "Ref": "expiteChannelSubscriptionLambdaServiceRole117F74C9"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a8d01600b16f23fdfea0307a1a3db8d46066144fa830d1fb2a5304970b914946.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "expiteChannelSubscriptionLambdaServiceRole117F74C9",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "expireSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-expireSubscriptionQueue.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-ChannelSubsriptions",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "oneHourExpireChannelSubscription": {
            "id": "oneHourExpireChannelSubscription",
            "path": "WebRestServiceMessagesAndPayments/oneHourExpireChannelSubscription",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireChannelSubscription/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourExpireChannelSubscription",
                    "scheduleExpression": "rate(1 hour)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "expiteChannelSubscriptionLambdaD1828D3B",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"Hello Lambda\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.78.0"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteChannelSubscriptionLambdaDB66E155": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteChannelSubscriptionLambdaDB66E155",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireChannelSubscription/AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteChannelSubscriptionLambdaDB66E155",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "expiteChannelSubscriptionLambdaD1828D3B",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourExpireChannelSubscription86B3FE7B",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.78.0"
            }
          },
          "expiteBotSubscriptionLambda": {
            "id": "expiteBotSubscriptionLambda",
            "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-expireSubscriptionQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "expiteBotSubscriptionLambdaServiceRoleDefaultPolicy7D9ABC1D",
                            "roles": [
                              {
                                "Ref": "expiteBotSubscriptionLambdaServiceRoleED39AA8E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b8ecb13c18f7bd053acf194eb12da5150a3ef37492dd7500bfb22aac9b621a6f.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "expiteBotSubscriptionLambdaServiceRoleED39AA8E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "expireSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-expireSubscriptionQueue.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-BotSubscriptions",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "oneHourExpireBotSubscription": {
            "id": "oneHourExpireBotSubscription",
            "path": "WebRestServiceMessagesAndPayments/oneHourExpireBotSubscription",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireBotSubscription/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourExpireBotSubscription",
                    "scheduleExpression": "rate(1 hour)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "expiteBotSubscriptionLambda017B3373",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"Hello Lambda\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.78.0"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteBotSubscriptionLambda6DB1C1F4": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteBotSubscriptionLambda6DB1C1F4",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireBotSubscription/AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteBotSubscriptionLambda6DB1C1F4",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "expiteBotSubscriptionLambda017B3373",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourExpireBotSubscription0FE5D6A1",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.78.0"
            }
          },
          "ZuzonaSubscriptionCleanUpProcessor": {
            "id": "ZuzonaSubscriptionCleanUpProcessor",
            "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ZuzonaSubscriptionCleanUpProcessorServiceRoleDefaultPolicy24706F2E",
                            "roles": [
                              {
                                "Ref": "ZuzonaSubscriptionCleanUpProcessorServiceRole3550F7A2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ddc0dd396a53193ea8eb4455636ee3dafc29be492a85603c4bfa3cabaf50cac0.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ZuzonaSubscriptionCleanUpProcessorServiceRole3550F7A2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Cleanup-Zuzona",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "oneHourCleanupZuzona": {
            "id": "oneHourCleanupZuzona",
            "path": "WebRestServiceMessagesAndPayments/oneHourCleanupZuzona",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupZuzona/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourCleanupZuzona",
                    "scheduleExpression": "rate(1 day)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "ZuzonaSubscriptionCleanUpProcessor132C370C",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"oneHourCleanupZuzona\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.78.0"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsZuzonaSubscriptionCleanUpProcessorF5181F35": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsZuzonaSubscriptionCleanUpProcessorF5181F35",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupZuzona/AllowEventRuleWebRestServiceMessagesAndPaymentsZuzonaSubscriptionCleanUpProcessorF5181F35",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "ZuzonaSubscriptionCleanUpProcessor132C370C",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourCleanupZuzona98A62E54",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.78.0"
            }
          },
          "expireUserSubscriptionItem": {
            "id": "expireUserSubscriptionItem",
            "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-expireSubscriptionQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-expireSubscriptionQueueDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "expireUserSubscriptionItemServiceRoleDefaultPolicyA55B70C4",
                            "roles": [
                              {
                                "Ref": "expireUserSubscriptionItemServiceRole59BAF593"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a39c506d4714103b225d33bf4a90778bf00fc7d44528c6903f1f3c91aeca1cd8.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "expireUserSubscriptionItemServiceRole59BAF593",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-expireUserSubscriptionItem",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "expireUserSubscriptionItem6039491A"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-expireSubscriptionQueue.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "expireUserSubscriptionItem6039491A"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-expireSubscriptionQueueDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceMessagesAndPayments/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceMessagesAndPayments/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceMessagesAndPayments/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SendDirectMessageFromAdminLambda39C70282\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendDirectMessageFromAdminLambda39C70282\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendDirectMessageFromAdminLambda39C70282\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListBotPaymentsLambda8AE1421E\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotPaymentsLambda8AE1421E\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"ListBotPaymentsLambda8AE1421E\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceMessagesAndPayments/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceMessagesAndPayments/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServicePlansAndPosts": {
        "id": "WebRestServicePlansAndPosts",
        "path": "WebRestServicePlansAndPosts",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServicePlansAndPosts/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "imported-AddScheduledPostQueue-CreateContentPlanPostsLambdas": {
            "id": "imported-AddScheduledPostQueue-CreateContentPlanPostsLambdas",
            "path": "WebRestServicePlansAndPosts/imported-AddScheduledPostQueue-CreateContentPlanPostsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas": {
            "id": "imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas",
            "path": "WebRestServicePlansAndPosts/imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.78.0"
            }
          },
          "ListContentPlanPostsLambda": {
            "id": "ListContentPlanPostsLambda",
            "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListContentPlanPostsLambdaServiceRoleDefaultPolicyBC01FCAC",
                            "roles": [
                              {
                                "Ref": "ListContentPlanPostsLambdaServiceRole979D40F7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "34f777e7ec7eb26e37ab9491f832f0cd78f52d43890dc1fc81b4fc731515d2eb.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListContentPlanPostsLambdaServiceRole979D40F7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "GetContentPlanPostLambda": {
            "id": "GetContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetContentPlanPostLambdaServiceRoleDefaultPolicyE38B6BCA",
                            "roles": [
                              {
                                "Ref": "GetContentPlanPostLambdaServiceRoleC014D555"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b050fc3e1bca5bad3c3447ced403a8279172bbb6f931c5f19a470760f0d915bb.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetContentPlanPostLambdaServiceRoleC014D555",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddContentPlanPostLambda": {
            "id": "AddContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-AddPost.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-DeletePost.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddContentPlanPostLambdaServiceRoleDefaultPolicy98C48D3B",
                            "roles": [
                              {
                                "Ref": "AddContentPlanPostLambdaServiceRoleC11A91BA"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "bf6ca7d81f8f7d0487c84fab45cbcc38200a447f33ec1b3cef1193bf375347f5.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddContentPlanPostLambdaServiceRoleC11A91BA",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AddScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-Scheduler-AddPost.fifo"
                            ]
                          ]
                        },
                        "DeleteScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-Scheduler-DeletePost.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditContentPlanPostLambda": {
            "id": "EditContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditContentPlanPostLambdaServiceRoleDefaultPolicyE3B51AAF",
                            "roles": [
                              {
                                "Ref": "EditContentPlanPostLambdaServiceRole9D24083D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f13610782a3fb0451246f105de2b5f9bb8ce8e9365964300696bcff4f432ee21.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditContentPlanPostLambdaServiceRole9D24083D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteContentPlanPostLambda": {
            "id": "DeleteContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-AddPost.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-Scheduler-DeletePost.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteContentPlanPostLambdaServiceRoleDefaultPolicyE309B8E0",
                            "roles": [
                              {
                                "Ref": "DeleteContentPlanPostLambdaServiceRole889FFD78"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e637953077c89015ae5b941fc09e503e83b0276dd9fee5c0a3c504058f9c31be.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteContentPlanPostLambdaServiceRole889FFD78",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AddScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-Scheduler-AddPost.fifo"
                            ]
                          ]
                        },
                        "DeleteScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-Scheduler-DeletePost.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListContentPlansLambda": {
            "id": "ListContentPlansLambda",
            "path": "WebRestServicePlansAndPosts/ListContentPlansLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248",
                            "roles": [
                              {
                                "Ref": "ListContentPlansLambdaServiceRole367A02FD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "460d4795b304dc11cc818edb981aac744feac4dfba946955d3e9d46a86d25e06.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListContentPlansLambdaServiceRole367A02FD",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetContentPlanLambda": {
            "id": "GetContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/GetContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A",
                            "roles": [
                              {
                                "Ref": "GetContentPlanLambdaServiceRole2D75CA0E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7c686f1a8df6846275c29ab06333c9c25c08cd20c5ea6dbb656c24cc7de7a0d6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetContentPlanLambdaServiceRole2D75CA0E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddContentPlanLambda": {
            "id": "AddContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/AddContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9",
                            "roles": [
                              {
                                "Ref": "AddContentPlanLambdaServiceRole69887C26"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d4c59142e765b4dc115a46aba5c001c478ec613ab78b85ec6e19b273b9cb23f6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddContentPlanLambdaServiceRole69887C26",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditContentPlanLambda": {
            "id": "EditContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/EditContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3",
                            "roles": [
                              {
                                "Ref": "EditContentPlanLambdaServiceRole25A19D33"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "817c35018ee40f0ce9c2960cd788ecd3690368c290450405a6d4111e25c97f49.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditContentPlanLambdaServiceRole25A19D33",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteContentPlanLambda": {
            "id": "DeleteContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0",
                            "roles": [
                              {
                                "Ref": "DeleteContentPlanLambdaServiceRoleAD676078"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d34c9dfdad694aeb8b5e25503b206376a67a689206b7c7fbaf689946da145158.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteContentPlanLambdaServiceRoleAD676078",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServicePlansAndPosts/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServicePlansAndPosts/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServicePlansAndPosts/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServicePlansAndPosts/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServicePlansAndPosts/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServiceSubscriptions": {
        "id": "WebRestServiceSubscriptions",
        "path": "WebRestServiceSubscriptions",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceSubscriptions/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "ListUserSubscriptionPlansBotsLambda": {
            "id": "ListUserSubscriptionPlansBotsLambda",
            "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListUserSubscriptionPlansBotsLambdaServiceRoleDefaultPolicy383D849F",
                            "roles": [
                              {
                                "Ref": "ListUserSubscriptionPlansBotsLambdaServiceRole905FD5AD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c4d0ffad250006dc0990a3d6a07fcb78adffdde5ca3816cdffb52d00f7f5ef02.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListUserSubscriptionPlansBotsLambdaServiceRole905FD5AD",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "GetSubscriptionPlanBotLambda": {
            "id": "GetSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetSubscriptionPlanBotLambdaServiceRoleDefaultPolicyF90AFFC1",
                            "roles": [
                              {
                                "Ref": "GetSubscriptionPlanBotLambdaServiceRole8CACD86E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "285da3e4b7bc853c8b33f515baaa6a90cf205b7c2de45e6ef77c9af21c652cb8.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetSubscriptionPlanBotLambdaServiceRole8CACD86E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddSubscriptionPlanBotLambda": {
            "id": "AddSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddSubscriptionPlanBotLambdaServiceRoleDefaultPolicy3F136196",
                            "roles": [
                              {
                                "Ref": "AddSubscriptionPlanBotLambdaServiceRoleA805A0E2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4dcfa16214e768820f1ad05959d72af0534a26c091702eee80359faf2aa7e069.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddSubscriptionPlanBotLambdaServiceRoleA805A0E2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditSubscriptionPlanBotLambda": {
            "id": "EditSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditSubscriptionPlanBotLambdaServiceRoleDefaultPolicy8D2BCF2D",
                            "roles": [
                              {
                                "Ref": "EditSubscriptionPlanBotLambdaServiceRoleDC3310F7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "48f8b8a9496a3662ec42fa3bf460a4480689b3c26ba180271e98808fe90abd30.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditSubscriptionPlanBotLambdaServiceRoleDC3310F7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteSubscriptionPlanBotLambda": {
            "id": "DeleteSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteSubscriptionPlanBotLambdaServiceRoleDefaultPolicy462A4885",
                            "roles": [
                              {
                                "Ref": "DeleteSubscriptionPlanBotLambdaServiceRoleE604269E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "02cdfed7b9a42de277f72ded518f3f78370c8848c09aa7ab6a0a56bc64c9d404.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteSubscriptionPlanBotLambdaServiceRoleE604269E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListUserSubscriptionPlansChannelsLambda": {
            "id": "ListUserSubscriptionPlansChannelsLambda",
            "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListUserSubscriptionPlansChannelsLambdaServiceRoleDefaultPolicy37540AC7",
                            "roles": [
                              {
                                "Ref": "ListUserSubscriptionPlansChannelsLambdaServiceRole8EC1E72A"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "cfe1a24e12a986e977f021729ec39cc2124b4bdf1f3dce5b94244ff32424bc4f.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListUserSubscriptionPlansChannelsLambdaServiceRole8EC1E72A",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetSubscriptionPlanChannelLambda": {
            "id": "GetSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetSubscriptionPlanChannelLambdaServiceRoleDefaultPolicyBBB15957",
                            "roles": [
                              {
                                "Ref": "GetSubscriptionPlanChannelLambdaServiceRole43AC6238"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7436225c203d0ed01c9370c5d421a288e3bc3150c3cdd1eaec458ed16129a86a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetSubscriptionPlanChannelLambdaServiceRole43AC6238",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "AddSubscriptionPlanChannelLambda": {
            "id": "AddSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddSubscriptionPlanChannelLambdaServiceRoleDefaultPolicyFC648F7F",
                            "roles": [
                              {
                                "Ref": "AddSubscriptionPlanChannelLambdaServiceRoleC59C2A63"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "64636884232418a71d90e71466dc4ef1a719347fd418a94504828f375eb6e43a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddSubscriptionPlanChannelLambdaServiceRoleC59C2A63",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "EditSubscriptionPlanChannelLambda": {
            "id": "EditSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditSubscriptionPlanChannelLambdaServiceRoleDefaultPolicy9D1747B4",
                            "roles": [
                              {
                                "Ref": "EditSubscriptionPlanChannelLambdaServiceRole855383B1"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d45a2af80e26afdcbd38064292207390305deadf6b95c5e5d3947a1f43cfe6a8.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditSubscriptionPlanChannelLambdaServiceRole855383B1",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "DeleteSubscriptionPlanChannelLambda": {
            "id": "DeleteSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteSubscriptionPlanChannelLambdaServiceRoleDefaultPolicyBCFCC22F",
                            "roles": [
                              {
                                "Ref": "DeleteSubscriptionPlanChannelLambdaServiceRole76CC8AD4"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "aca0a86d5984f12fb71072b67abbdebb38b38dce7ffabdfc018ca84c402336dc.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteSubscriptionPlanChannelLambdaServiceRole76CC8AD4",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetMasterManagerMeLambda": {
            "id": "GetMasterManagerMeLambda",
            "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetMasterManagerMeLambdaServiceRoleDefaultPolicy6EB74FA0",
                            "roles": [
                              {
                                "Ref": "GetMasterManagerMeLambdaServiceRoleF6A45808"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2cbc07d768e155cad56023491987fc4a1bdbea0ae306c5b06984f8997df73aa3.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetMasterManagerMeLambdaServiceRoleF6A45808",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-GetMe-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "SubscribeToPaidSubscriptionLambda": {
            "id": "SubscribeToPaidSubscriptionLambda",
            "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscribeToPaidSubscriptionLambdaServiceRoleDefaultPolicy7368AF12",
                            "roles": [
                              {
                                "Ref": "SubscribeToPaidSubscriptionLambdaServiceRoleEEDEAC04"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e8ea2829694d40e1440663509593b87a595f673b319fc52e482fc47719900636.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscribeToPaidSubscriptionLambdaServiceRoleEEDEAC04",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-SubscribeToPaidSubscription-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "ListMasterManagerSubscriptionsLambda": {
            "id": "ListMasterManagerSubscriptionsLambda",
            "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListMasterManagerSubscriptionsLambdaServiceRoleDefaultPolicy65B6D11F",
                            "roles": [
                              {
                                "Ref": "ListMasterManagerSubscriptionsLambdaServiceRole8CC70C6B"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "047cb8cfe4adcd993a5b173e058e1847daa2d42233b8921690d648cf79cfb6b4.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListMasterManagerSubscriptionsLambdaServiceRole8CC70C6B",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d2kgbgsnahcfbl.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-ListSubscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceSubscriptions/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceSubscriptions/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceSubscriptions/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMasterManagerMeLambda8F027305\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMasterManagerMeLambda8F027305\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetMasterManagerMeLambda8F027305\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceSubscriptions/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceSubscriptions/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServiceCRM": {
        "id": "WebRestServiceCRM",
        "path": "WebRestServiceCRM",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceCRM/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "crmListMyUsersLambda": {
            "id": "crmListMyUsersLambda",
            "path": "WebRestServiceCRM/crmListMyUsersLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmListMyUsersLambdaServiceRoleDefaultPolicyDCA0174C",
                            "roles": [
                              {
                                "Ref": "crmListMyUsersLambdaServiceRole7C155C75"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "df8c42c26db7df8800c3c2c147ace231b64a4fc84df7ca5bc8ab02271b6e0e32.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmListMyUsersLambdaServiceRole7C155C75",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Users-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "crmBotSubscriptionsLambda": {
            "id": "crmBotSubscriptionsLambda",
            "path": "WebRestServiceCRM/crmBotSubscriptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmBotSubscriptionsLambdaServiceRoleDefaultPolicy36D2F199",
                            "roles": [
                              {
                                "Ref": "crmBotSubscriptionsLambdaServiceRoleF5FAF548"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "add46a7d28665dfa02108e7aa5a290ee2fe6b7f1c5afdde44a82d5a1d3be47b5.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmBotSubscriptionsLambdaServiceRoleF5FAF548",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Subscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "crmBotSubscriptionsByUserLambda": {
            "id": "crmBotSubscriptionsByUserLambda",
            "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmBotSubscriptionsByUserLambdaServiceRoleDefaultPolicyEC9A01B0",
                            "roles": [
                              {
                                "Ref": "crmBotSubscriptionsByUserLambdaServiceRoleB8A0739C"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c488aa07257ed8334f7e46a1faf68ee0b2b468199561bd271b5b73cfc9f62f2e.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmBotSubscriptionsByUserLambdaServiceRoleB8A0739C",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Subscriptions-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "crmChannelSubscriptionsLambda": {
            "id": "crmChannelSubscriptionsLambda",
            "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmChannelSubscriptionsLambdaServiceRoleDefaultPolicy42D7246C",
                            "roles": [
                              {
                                "Ref": "crmChannelSubscriptionsLambdaServiceRole64F82202"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ba2e4b1b9d12e011670c6ce834443aac88551a88693d8da0d03b4bf01626a04f.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmChannelSubscriptionsLambdaServiceRole64F82202",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Channel-Subscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "crmChannelSubscriptionsByUserLambda": {
            "id": "crmChannelSubscriptionsByUserLambda",
            "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmChannelSubscriptionsByUserLambdaServiceRoleDefaultPolicyC0355FDB",
                            "roles": [
                              {
                                "Ref": "crmChannelSubscriptionsByUserLambdaServiceRole63A9A656"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e827662ee52aa37926fd5e1a982de5e444989d8e239764a4079a3ca4aaa5558d.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmChannelSubscriptionsByUserLambdaServiceRole63A9A656",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Channel-Subscriptions-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "botPaymentsLambda": {
            "id": "botPaymentsLambda",
            "path": "WebRestServiceCRM/botPaymentsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/botPaymentsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/botPaymentsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/botPaymentsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/botPaymentsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/botPaymentsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "botPaymentsLambdaServiceRoleDefaultPolicyADD3E6D7",
                            "roles": [
                              {
                                "Ref": "botPaymentsLambdaServiceRoleA6CB532D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/botPaymentsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/botPaymentsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/botPaymentsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/botPaymentsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "419d92b176c0e81c9f9dd8b9e95bd9596cac8caa4b9ef9f8111d506dff67476e.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "botPaymentsLambdaServiceRoleA6CB532D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Payments-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/botPaymentsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/botPaymentsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/botPaymentsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "botPaymentsByUserLambda": {
            "id": "botPaymentsByUserLambda",
            "path": "WebRestServiceCRM/botPaymentsByUserLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/botPaymentsByUserLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "botPaymentsByUserLambdaServiceRoleDefaultPolicy0E46E878",
                            "roles": [
                              {
                                "Ref": "botPaymentsByUserLambdaServiceRole4412F6D7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "469734c77012470748bafcee3f27bf0e8dbed6398e2ff550657a4238bc5570db.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "botPaymentsByUserLambdaServiceRole4412F6D7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Payments-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "scheduledPostsByUserLambda": {
            "id": "scheduledPostsByUserLambda",
            "path": "WebRestServiceCRM/scheduledPostsByUserLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/scheduledPostsByUserLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "scheduledPostsByUserLambdaServiceRoleDefaultPolicy903DC928",
                            "roles": [
                              {
                                "Ref": "scheduledPostsByUserLambdaServiceRole1F9E758D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "74ff772ca20ccb788d13f61836a82173fc610bb8bc3994bbaeec945fbe66904c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "scheduledPostsByUserLambdaServiceRole1F9E758D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-ScheduledPosts-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "crmUserProfileLambda": {
            "id": "crmUserProfileLambda",
            "path": "WebRestServiceCRM/crmUserProfileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmUserProfileLambdaServiceRoleDefaultPolicy89583872",
                            "roles": [
                              {
                                "Ref": "crmUserProfileLambdaServiceRoleA5C0CE1D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmUserProfileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmUserProfileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f93fccf9191eae19fe7749b6740caa4994a8292843f988443f5f6a8aa3df9341.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmUserProfileLambdaServiceRoleA5C0CE1D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-UserProfile-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmUserProfileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmUserProfileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "crmBanLambda": {
            "id": "crmBanLambda",
            "path": "WebRestServiceCRM/crmBanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmBanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmBanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmBanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmBanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmBanLambdaServiceRoleDefaultPolicyABF5E4DD",
                            "roles": [
                              {
                                "Ref": "crmBanLambdaServiceRole6E55170D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "653e05456ce6768b33a9d970fde84e88cb48cfb902c207cd23b11b637ee2fe29.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmBanLambdaServiceRole6E55170D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-BanUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "crmEditUserNotesLambda": {
            "id": "crmEditUserNotesLambda",
            "path": "WebRestServiceCRM/crmEditUserNotesLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmEditUserNotesLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmEditUserNotesLambdaServiceRoleDefaultPolicyFC10B274",
                            "roles": [
                              {
                                "Ref": "crmEditUserNotesLambdaServiceRoleD8E2D781"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ad3414477d497db3b522e08bbdd7be808eba00ddfd59dafbd11665dd67e51029.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmEditUserNotesLambdaServiceRoleD8E2D781",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-EditUserNotes-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "GetMyBotAnalitics": {
            "id": "GetMyBotAnalitics",
            "path": "WebRestServiceCRM/GetMyBotAnalitics",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/GetMyBotAnalitics/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetMyBotAnaliticsServiceRoleDefaultPolicy6CBB70AF",
                            "roles": [
                              {
                                "Ref": "GetMyBotAnaliticsServiceRole55942CB5"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b250dcc52a9d94fa539c4505d6753f96bb7d4289dafd7a03d85fd46437e1373a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetMyBotAnaliticsServiceRole55942CB5",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-GetMyBot-Analitics-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceCRM/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceCRM/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceCRM/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsByUserLambda3D9A026A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsByUserLambda3D9A026A\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsByUserLambda3D9A026A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsByUserLambdaE3D1967B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsByUserLambdaE3D1967B\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsByUserLambdaE3D1967B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"botPaymentsLambda42FF7FB1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"botPaymentsLambda42FF7FB1\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"botPaymentsLambda42FF7FB1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"botPaymentsByUserLambda37ECD412\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"botPaymentsByUserLambda37ECD412\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"botPaymentsByUserLambda37ECD412\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"scheduledPostsByUserLambda726BF336\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"scheduledPostsByUserLambda726BF336\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"scheduledPostsByUserLambda726BF336\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBanLambda32C771E6\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBanLambda32C771E6\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBanLambda32C771E6\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmEditUserNotesLambda504FE58B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmEditUserNotesLambda504FE58B\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmEditUserNotesLambda504FE58B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMyBotAnaliticsF8D38A59\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMyBotAnaliticsF8D38A59\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"GetMyBotAnaliticsF8D38A59\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceCRM/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceCRM/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestServiceLanding": {
        "id": "WebRestServiceLanding",
        "path": "WebRestServiceLanding",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceLanding/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "SetBotLandingPageLamda": {
            "id": "SetBotLandingPageLamda",
            "path": "WebRestServiceLanding/SetBotLandingPageLamda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SetBotLandingPageLamdaServiceRoleDefaultPolicyC7F29EB8",
                            "roles": [
                              {
                                "Ref": "SetBotLandingPageLamdaServiceRoleC73FF78C"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b90a482b738697c73dba1fc26879260d6782127ab3ed4ee197c589c1fbe4a317.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SetBotLandingPageLamdaServiceRoleC73FF78C",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "messagingBotAPIURL": "https://messagingbot-face.zuzona.com",
                        "managementBotAPIURL": "https://managementbot-face.zuzona.com",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-Update-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.78.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.78.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.78.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.78.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.78.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceLanding/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceLanding/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceLanding/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}",
                "path": "WebRestServiceLanding/Exports/Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceLanding/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceLanding/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebRestGatewayService": {
        "id": "WebRestGatewayService",
        "path": "WebRestGatewayService",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestGatewayService/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebRestGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebRestGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebRestGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebRestGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "WebRestGatewayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedAuthorizer": {
            "id": "importedAuthorizer",
            "path": "WebRestGatewayService/importedAuthorizer",
            "children": {
              "WebRestGatewayServiceWebRestGatewayServiceLambdaJWTAuthorizerObjectD9C1FB07:Permissions": {
                "id": "WebRestGatewayServiceWebRestGatewayServiceLambdaJWTAuthorizerObjectD9C1FB07:Permissions",
                "path": "WebRestGatewayService/importedAuthorizer/WebRestGatewayServiceWebRestGatewayServiceLambdaJWTAuthorizerObjectD9C1FB07:Permissions",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": "arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":execute-api:us-east-1:993738567487:",
                          {
                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                          },
                          "/authorizers/",
                          {
                            "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                          }
                        ]
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
              "version": "2.78.0"
            }
          },
          "WebRestGatewayService-LambdaJWTAuthorizerObject": {
            "id": "WebRestGatewayService-LambdaJWTAuthorizerObject",
            "path": "WebRestGatewayService/WebRestGatewayService-LambdaJWTAuthorizerObject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestGatewayService/WebRestGatewayService-LambdaJWTAuthorizerObject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebRestGatewayService-LambdaJWTAuthorizerObject",
                    "restApiId": {
                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                    },
                    "type": "REQUEST",
                    "authorizerResultTtlInSeconds": 3600,
                    "authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda/invocations",
                    "identitySource": "method.request.header.cookie"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RequestAuthorizer",
              "version": "2.78.0"
            }
          },
          "WebRestGatewayService-GWAPI": {
            "id": "WebRestGatewayService-GWAPI",
            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebRestGatewayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.78.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebRestGatewayServiceGWAPICloudWatchRole0810C0ED",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.78.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.78.0"
                }
              },
              "DeploymentStage.SecureAPI": {
                "id": "DeploymentStage.SecureAPI",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/DeploymentStage.SecureAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/DeploymentStage.SecureAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                        },
                        "deploymentId": {
                          "Ref": "WebRestGatewayServiceGWAPIDeploymentDC8FF3A02d7180f9d53c9b3567aa52de4978892e"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "SecureAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.78.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.78.0"
                    }
                  },
                  "Bots": {
                    "id": "Bots",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Bots",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsListFA9DC731"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotsLambdaC9B0E149Arn911E2DAF"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Bots/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsListFA9DC731"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotsLambdaC9B0E149Arn911E2DAF"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsAdd110A51F6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Bots.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Bots.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Bots.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotLambda25A32D8FArn56F0CC80"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/Bots/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsAdd110A51F6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotLambda25A32D8FArn56F0CC80"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsGet21B4D384"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotLambda0C4EA18FArn4F8416C0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Bots/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsGet21B4D384"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotLambda0C4EA18FArn4F8416C0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsEdit6406CE96"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotLambda82B1C036Arn196628BE"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Bots/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsEdit6406CE96"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotLambda82B1C036Arn196628BE"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Register": {
                        "id": "Register",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Register",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsRegister9663AA23"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Register": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Register",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Register",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttRegisterBotLambda695100A4Arn6ABB23B6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Bots/Register"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsRegister9663AA23"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttRegisterBotLambda695100A4Arn6ABB23B6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "UnRegister": {
                        "id": "UnRegister",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "UnRegister",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsUnRegister0924FBE3"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.UnRegister": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.UnRegister",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.UnRegister",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttUnRegisterBotLambda0B03CDDEArn070643C9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Bots/UnRegister"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsUnRegister0924FBE3"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttUnRegisterBotLambda0B03CDDEArn070643C9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsDeleteAC7BB984"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Bots.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Bots.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Bots.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotLambda6B24EC61ArnD57686A7"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/Bots/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsDeleteAC7BB984"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotLambda6B24EC61ArnD57686A7"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "BotCommands": {
                    "id": "BotCommands",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "BotCommands",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsListDECD89D4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotCommandsLambda223B4828Arn1F40E167"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/BotCommands/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsListDECD89D4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotCommandsLambda223B4828Arn1F40E167"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsAdd28D50C81"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..BotCommands.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..BotCommands.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..BotCommands.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotCommandLambdaA96244ACArn39C0BC41"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/BotCommands/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsAdd28D50C81"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotCommandLambdaA96244ACArn39C0BC41"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsGetADFC8902"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotCommandLambdaC92683CDArn891B4B9D"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/BotCommands/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsGetADFC8902"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotCommandLambdaC92683CDArn891B4B9D"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsEdit6724348B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotCommands.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotCommands.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotCommands.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotCommandLambda5F3C4BF1Arn7A6CAEE0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/BotCommands/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsEdit6724348B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotCommandLambda5F3C4BF1Arn7A6CAEE0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsDelete8F5E0AF9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..BotCommands.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..BotCommands.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..BotCommands.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotCommandLambdaD706781FArn9816F1C4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/BotCommands/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsDelete8F5E0AF9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotCommandLambdaD706781FArn9816F1C4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Channels": {
                    "id": "Channels",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Channels",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsList5213BEFB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListChannelsLambda0D2B8521Arn5D199E53"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Channels/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsList5213BEFB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListChannelsLambda0D2B8521Arn5D199E53"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsGetDF872E27"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetChannelLambdaE5A9F403Arn6617CF58"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Channels/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsGetDF872E27"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetChannelLambdaE5A9F403Arn6617CF58"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsEditC1D53C64"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Channels.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Channels.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Channels.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditChannelLambdaAE9A056AArn8C776BEA"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Channels/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsEditC1D53C64"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditChannelLambdaAE9A056AArn8C776BEA"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsDelete1759DD5F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Channels.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Channels.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Channels.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteChannelLambda8045FC58Arn562C1279"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/Channels/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsDelete1759DD5F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteChannelLambda8045FC58Arn562C1279"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Meetings": {
                    "id": "Meetings",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Meetings",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMeetings0F6FB269"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMeetings0F6FB269"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsList9E740FE6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Meetings.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Meetings.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Meetings.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListMeetingsLambdaF16F9182ArnDB09EC03"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Meetings/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsList9E740FE6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListMeetingsLambdaF16F9182ArnDB09EC03"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMeetings0F6FB269"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsAddD33F8E62"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Meetings.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Meetings.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Meetings.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddMeetingLambda16941AE7ArnF34C1764"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/Meetings/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsAddD33F8E62"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddMeetingLambda16941AE7ArnF34C1764"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMeetings0F6FB269"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsGetEF7736C6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Meetings.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Meetings.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Meetings.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetMeetingLambda5B5F43FBArnC2D7DED0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Meetings/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsGetEF7736C6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetMeetingLambda5B5F43FBArnC2D7DED0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMeetings0F6FB269"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsEdit2E96CAE1"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Meetings.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Meetings.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Meetings.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditMeetingLambdaF8CDD424Arn05F59C10"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Meetings/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsEdit2E96CAE1"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditMeetingLambdaF8CDD424Arn05F59C10"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMeetings0F6FB269"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsDelete0CF05861"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Meetings.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Meetings.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Meetings.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteMeetingLambdaADE38392Arn0BF69B1E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/Meetings/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Meetings/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMeetingsDelete0CF05861"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteMeetingLambdaADE38392Arn0BF69B1E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "PaymentOptions": {
                    "id": "PaymentOptions",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "PaymentOptions",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsListF8AD74C6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListPaymentOptionsLambdaACAA5262Arn4EB69170"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/PaymentOptions/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsListF8AD74C6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListPaymentOptionsLambdaACAA5262Arn4EB69170"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsGetD8A08886"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetPaymentOptionLambdaD6DBF61AArn18D20D5D"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/PaymentOptions/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsGetD8A08886"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetPaymentOptionLambdaD6DBF61AArn18D20D5D"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsAddB6F04898"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..PaymentOptions.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..PaymentOptions.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..PaymentOptions.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddPaymentOptionLambdaBFF77B7FArn872A1AA4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/PaymentOptions/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsAddB6F04898"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddPaymentOptionLambdaBFF77B7FArn872A1AA4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsEdit1678C581"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PaymentOptions.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PaymentOptions.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PaymentOptions.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditPaymentOptionLambda398037A2Arn5595B7A0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/PaymentOptions/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsEdit1678C581"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditPaymentOptionLambda398037A2Arn5595B7A0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsDeleteE89F8DB8"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..PaymentOptions.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..PaymentOptions.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..PaymentOptions.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeletePaymentOptionLambdaEC66351CArn3F9622FF"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/PaymentOptions/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsDeleteE89F8DB8"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeletePaymentOptionLambdaEC66351CArn3F9622FF"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "TelegramFiles": {
                    "id": "TelegramFiles",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "TelegramFiles",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesListAB756C34"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListTelegramFilesLambda11E43599ArnC7D2F951"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/TelegramFiles/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesListAB756C34"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListTelegramFilesLambda11E43599ArnC7D2F951"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesGetC9E7BBF4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetTelegramFileLambda0285A5D8Arn7A92FC36"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/TelegramFiles/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesGetC9E7BBF4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetTelegramFileLambda0285A5D8Arn7A92FC36"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesEdit1D4B4978"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..TelegramFiles.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..TelegramFiles.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..TelegramFiles.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditTelegramFileLambda541FB43BArn84EC7D28"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/TelegramFiles/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesEdit1D4B4978"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditTelegramFileLambda541FB43BArn84EC7D28"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesDeleteC6B9FE8D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..TelegramFiles.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..TelegramFiles.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..TelegramFiles.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteTelegramFileLambdaF1882CC1Arn9F939F63"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/TelegramFiles/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesDeleteC6B9FE8D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteTelegramFileLambdaF1882CC1Arn9F939F63"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "PreSignedUrls": {
                    "id": "PreSignedUrls",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "PreSignedUrls",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPreSignedUrls68F0A7FC"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "PUT": {
                        "id": "PUT",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/PUT",
                        "children": {
                          "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PreSignedUrls": {
                            "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PreSignedUrls",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PreSignedUrls",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetGetPresignedUrlLambda43F48E6FArn38B1BA68"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                      },
                                      "/PUT/PreSignedUrls"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/PUT/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "PUT",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPreSignedUrls68F0A7FC"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetGetPresignedUrlLambda43F48E6FArn38B1BA68"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "SendTestMessage": {
                    "id": "SendTestMessage",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "SendTestMessage",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "SendTestMessage": {
                        "id": "SendTestMessage",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "pathPart": "SendTestMessage",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageA6BDC546"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestMessage": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestMessage",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestMessage",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestMessageLambdaD3B92DD3Arn2DACEF4C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/SendTestMessage/SendTestMessage"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageA6BDC546"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestMessageLambdaD3B92DD3Arn2DACEF4C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "SendTestFile": {
                        "id": "SendTestFile",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "pathPart": "SendTestFile",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendTestFile354FB12E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestFile": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestFile",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestFile",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestFileLambda65A31CEBArn8F991A6C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/SendTestMessage/SendTestFile"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendTestFile354FB12E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestFileLambda65A31CEBArn8F991A6C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "SendDirectMessage": {
                        "id": "SendDirectMessage",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "pathPart": "SendDirectMessage",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendDirectMessage681F9A31"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendDirectMessage": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendDirectMessage",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendDirectMessage",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendDirectMessageFromAdminLambda39C70282Arn806777E9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/SendTestMessage/SendDirectMessage"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendDirectMessage681F9A31"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendDirectMessageFromAdminLambda39C70282Arn806777E9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "BotPayments": {
                    "id": "BotPayments",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "BotPayments",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotPayments106EFBAB"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotPayments106EFBAB"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotPaymentsList01104859"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotPayments.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotPayments.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotPayments.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListBotPaymentsLambda8AE1421EArn7D313D43"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/BotPayments/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotPayments/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotPaymentsList01104859"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListBotPaymentsLambda8AE1421EArn7D313D43"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "ContentPlanPosts": {
                    "id": "ContentPlanPosts",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "ContentPlanPosts",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsListBB2D9C57"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlanPostsLambda80CD292FArn1C08CB12"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlanPosts/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsListBB2D9C57"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlanPostsLambda80CD292FArn1C08CB12"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsGetFFE6CC28"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanPostLambdaA8AFC433Arn0B42A341"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlanPosts/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsGetFFE6CC28"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanPostLambdaA8AFC433Arn0B42A341"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsAdd75552A00"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlanPosts.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlanPosts.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlanPosts.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanPostLambda6114356CArn3F1CC64B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/ContentPlanPosts/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsAdd75552A00"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanPostLambda6114356CArn3F1CC64B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsEditD5F7AE62"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlanPosts.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlanPosts.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlanPosts.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanPostLambdaB4D253CEArnF266F911"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/ContentPlanPosts/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsEditD5F7AE62"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanPostLambdaB4D253CEArnF266F911"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsDelete46F5F6E7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlanPosts.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlanPosts.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlanPosts.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanPostLambda9CD840D1Arn94C3F856"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/ContentPlanPosts/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsDelete46F5F6E7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanPostLambda9CD840D1Arn94C3F856"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "ContentPlans": {
                    "id": "ContentPlans",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "ContentPlans",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansList33832890"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlansLambda95AC08D7Arn9EA4958E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlans/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansList33832890"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlansLambda95AC08D7Arn9EA4958E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansGetC8561DB4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanLambda45DE78B9ArnAA90AFA2"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlans/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansGetC8561DB4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanLambda45DE78B9ArnAA90AFA2"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansAddB8CA0143"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlans.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlans.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlans.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanLambda2A50CDCCArn9274FE09"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/ContentPlans/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansAddB8CA0143"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanLambda2A50CDCCArn9274FE09"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansEdit8C7C530A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlans.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlans.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlans.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanLambdaA1D9BCEDArn67D08860"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/ContentPlans/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansEdit8C7C530A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanLambdaA1D9BCEDArn67D08860"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansDelete19074E7E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlans.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlans.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlans.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanLambda37ED3EAEArn7FB4BD17"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/ContentPlans/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansDelete19074E7E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanLambda37ED3EAEArn7FB4BD17"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "UserSubscriptionPlansBot": {
                    "id": "UserSubscriptionPlansBot",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "UserSubscriptionPlansBot",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotListDBB0AA1B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansBotsLambda8ABC0BCFArn71867F26"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansBot/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotListDBB0AA1B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansBotsLambda8ABC0BCFArn71867F26"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotGet263674B6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanBotLambdaC174835FArn2A3E58D5"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansBot/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotGet263674B6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanBotLambdaC174835FArn2A3E58D5"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotAdd2F59206D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansBot.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansBot.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansBot.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanBotLambdaFB7D5F07Arn87E30106"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/UserSubscriptionPlansBot/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotAdd2F59206D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanBotLambdaFB7D5F07Arn87E30106"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotEdit785514A2"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansBot.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansBot.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansBot.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanBotLambdaE9CE979CArn06838E5E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/UserSubscriptionPlansBot/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotEdit785514A2"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanBotLambdaE9CE979CArn06838E5E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotDeleteAEF27662"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansBot.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansBot.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansBot.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanBotLambda0DF8E1DAArnEFE65144"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/UserSubscriptionPlansBot/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotDeleteAEF27662"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanBotLambda0DF8E1DAArnEFE65144"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "UserSubscriptionPlansChannel": {
                    "id": "UserSubscriptionPlansChannel",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "UserSubscriptionPlansChannel",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelList861BF3DF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansChannelsLambda53E507FCArn6B90CC61"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansChannel/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelList861BF3DF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansChannelsLambda53E507FCArn6B90CC61"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelGet8FC73797"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanChannelLambdaECD513DEArn3491567A"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansChannel/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelGet8FC73797"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanChannelLambdaECD513DEArn3491567A"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelAddC6523151"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansChannel.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansChannel.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansChannel.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanChannelLambda6DD69303ArnB6102E9B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/UserSubscriptionPlansChannel/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelAddC6523151"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanChannelLambda6DD69303ArnB6102E9B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelEdit5C02ADCA"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansChannel.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansChannel.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansChannel.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanChannelLambdaEFC3485DArnD5A6B091"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/UserSubscriptionPlansChannel/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelEdit5C02ADCA"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanChannelLambdaEFC3485DArnD5A6B091"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelDelete0EE53039"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansChannel.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansChannel.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansChannel.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanChannelLambdaE97A9809Arn861C66D6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/UserSubscriptionPlansChannel/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelDelete0EE53039"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanChannelLambdaE97A9809Arn861C66D6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "MasterManager": {
                    "id": "MasterManager",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "MasterManager",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "GetMe": {
                        "id": "GetMe",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "pathPart": "GetMe",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerGetMe5460789B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.GetMe": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.GetMe",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.GetMe",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetMasterManagerMeLambda8F027305ArnBCFA3039"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/MasterManager/GetMe"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/GetMe/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerGetMe5460789B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetMasterManagerMeLambda8F027305ArnBCFA3039"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "SubscribeToPaidSubscription": {
                        "id": "SubscribeToPaidSubscription",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "pathPart": "SubscribeToPaidSubscription",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerSubscribeToPaidSubscription915B229E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..MasterManager.SubscribeToPaidSubscription": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..MasterManager.SubscribeToPaidSubscription",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..MasterManager.SubscribeToPaidSubscription",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttSubscribeToPaidSubscriptionLambdaF0BF1717Arn1C0B4AD6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/MasterManager/SubscribeToPaidSubscription"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerSubscribeToPaidSubscription915B229E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttSubscribeToPaidSubscriptionLambdaF0BF1717Arn1C0B4AD6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMySubscriptions": {
                        "id": "ListMySubscriptions",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "pathPart": "ListMySubscriptions",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerListMySubscriptionsFF82C433"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.ListMySubscriptions": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.ListMySubscriptions",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.ListMySubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListMasterManagerSubscriptionsLambdaCEE81692Arn6EBFB4B0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/MasterManager/ListMySubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerListMySubscriptionsFF82C433"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListMasterManagerSubscriptionsLambdaCEE81692Arn6EBFB4B0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Landing": {
                    "id": "Landing",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Landing",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPILandingB378EACF"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "PUT": {
                        "id": "PUT",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/PUT",
                        "children": {
                          "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Landing": {
                            "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Landing",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttSetBotLandingPageLamda13B7B859Arn11C00CF1"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                      },
                                      "/PUT/Landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.78.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/PUT/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "PUT",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPILandingB378EACF"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttSetBotLandingPageLamda13B7B859Arn11C00CF1"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.78.0"
                }
              },
              "WebRestGatewayService-GWAPI-UsagePlan": {
                "id": "WebRestGatewayService-GWAPI-UsagePlan",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            },
                            "stage": {
                              "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                            },
                            "throttle": {}
                          }
                        ],
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "WebRestGatewayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.78.0"
                }
              },
              "WebRestGatewayService-GW-SubDomain": {
                "id": "WebRestGatewayService-GW-SubDomain",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "secure-api.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.78.0"
                    }
                  },
                  "Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D": {
                    "id": "Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain/Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain/Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebRestGatewayServiceGWAPIWebRestGatewayServiceGWSubDomain2118EFBC"
                            },
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            },
                            "stage": {
                              "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.78.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebRestGatewayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "WebRestGatewayService-ARecord": {
            "id": "WebRestGatewayService-ARecord",
            "path": "WebRestGatewayService/WebRestGatewayService-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestGatewayService/WebRestGatewayService-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "secure-api.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebRestGatewayServiceGWAPIWebRestGatewayServiceGWSubDomain2118EFBC",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebRestGatewayServiceGWAPIWebRestGatewayServiceGWSubDomain2118EFBC",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.78.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebRestGatewayService/WebRestGatewayService-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebRestGatewayService/WebRestGatewayService-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.78.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.78.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.78.0"
            }
          },
          "WebRestGatewayService-APIGW-SecureAPI": {
            "id": "WebRestGatewayService-APIGW-SecureAPI",
            "path": "WebRestGatewayService/WebRestGatewayService-APIGW-SecureAPI",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestGatewayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestGatewayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestGatewayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestGatewayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "WebCRMGatewayService": {
        "id": "WebCRMGatewayService",
        "path": "WebCRMGatewayService",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebCRMGatewayService/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "path": "WebCRMGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:515",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "path": "WebCRMGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:317",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "path": "WebCRMGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:262",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "path": "WebCRMGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:36",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "WebCRMGatewayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "importedAuthorizer": {
            "id": "importedAuthorizer",
            "path": "WebCRMGatewayService/importedAuthorizer",
            "children": {
              "WebCRMGatewayServiceWebCRMGatewayServiceLambdaJWTAuthorizerObject251FF955:Permissions": {
                "id": "WebCRMGatewayServiceWebCRMGatewayServiceLambdaJWTAuthorizerObject251FF955:Permissions",
                "path": "WebCRMGatewayService/importedAuthorizer/WebCRMGatewayServiceWebCRMGatewayServiceLambdaJWTAuthorizerObject251FF955:Permissions",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": "arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":execute-api:us-east-1:993738567487:",
                          {
                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                          },
                          "/authorizers/",
                          {
                            "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                          }
                        ]
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
              "version": "2.78.0"
            }
          },
          "WebCRMGatewayService-LambdaJWTAuthorizerObject": {
            "id": "WebCRMGatewayService-LambdaJWTAuthorizerObject",
            "path": "WebCRMGatewayService/WebCRMGatewayService-LambdaJWTAuthorizerObject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-LambdaJWTAuthorizerObject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebCRMGatewayService-LambdaJWTAuthorizerObject",
                    "restApiId": {
                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                    },
                    "type": "REQUEST",
                    "authorizerResultTtlInSeconds": 3600,
                    "authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda/invocations",
                    "identitySource": "method.request.header.cookie"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RequestAuthorizer",
              "version": "2.78.0"
            }
          },
          "WebCRMGatewayService-GWAPI": {
            "id": "WebCRMGatewayService-GWAPI",
            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebCRMGatewayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.78.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.78.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.78.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebCRMGatewayServiceGWAPICloudWatchRole0F3829E2",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.78.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.78.0"
                }
              },
              "DeploymentStage.SecureAPI": {
                "id": "DeploymentStage.SecureAPI",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/DeploymentStage.SecureAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/DeploymentStage.SecureAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                        },
                        "deploymentId": {
                          "Ref": "WebCRMGatewayServiceGWAPIDeployment559132D8f03f71a4f6fa86edcca8dfccf7aa679e"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "SecureAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.78.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.78.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebCRMGatewayServiceGWAPIB5A11A1F",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.78.0"
                    }
                  },
                  "CRM": {
                    "id": "CRM",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebCRMGatewayServiceGWAPIB5A11A1F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "CRM",
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.78.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyUsers": {
                        "id": "ListMyUsers",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyUsers",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyUsers0A1E9456"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyUsers": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyUsers",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyUsers",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmListMyUsersLambda43CD8954Arn6164C643"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyUsers"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyUsers0A1E9456"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmListMyUsersLambda43CD8954Arn6164C643"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyBotSubscriptions": {
                        "id": "ListMyBotSubscriptions",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotSubscriptions",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptions1F5D2157"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptions": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptions",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsLambdaC994C5ACArnC5D0423C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotSubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptions1F5D2157"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsLambdaC994C5ACArnC5D0423C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyBotSubscriptionsByUser": {
                        "id": "ListMyBotSubscriptionsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotSubscriptionsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptionsByUserF9C53966"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptionsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptionsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptionsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsByUserLambda3D9A026AArn3E10B863"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotSubscriptionsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptionsByUserF9C53966"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsByUserLambda3D9A026AArn3E10B863"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyChannelsSubscriptions": {
                        "id": "ListMyChannelsSubscriptions",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyChannelsSubscriptions",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelsSubscriptions92EDBE0B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelsSubscriptions": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelsSubscriptions",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelsSubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsLambdaF3058988Arn985ED147"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyChannelsSubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelsSubscriptions92EDBE0B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsLambdaF3058988Arn985ED147"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyChannelSubscriptionsByUser": {
                        "id": "ListMyChannelSubscriptionsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyChannelSubscriptionsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelSubscriptionsByUserBF2C12B0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelSubscriptionsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelSubscriptionsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelSubscriptionsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsByUserLambdaE3D1967BArnFDBB7C3A"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyChannelSubscriptionsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelSubscriptionsByUserBF2C12B0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsByUserLambdaE3D1967BArnFDBB7C3A"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyBotPayments": {
                        "id": "ListMyBotPayments",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotPayments",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPayments2197A9BB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPayments": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPayments",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPayments",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsLambda42FF7FB1ArnBC6F8669"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotPayments"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPayments2197A9BB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsLambda42FF7FB1ArnBC6F8669"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListMyBotPaymentsByUser": {
                        "id": "ListMyBotPaymentsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotPaymentsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPaymentsByUserDA0054A9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPaymentsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPaymentsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPaymentsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsByUserLambda37ECD412Arn7BDAFF91"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotPaymentsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPaymentsByUserDA0054A9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsByUserLambda37ECD412Arn7BDAFF91"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "ListScheduledPostsByUser": {
                        "id": "ListScheduledPostsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListScheduledPostsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListScheduledPostsByUser763C054E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListScheduledPostsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListScheduledPostsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListScheduledPostsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttscheduledPostsByUserLambda726BF336Arn196C2CB4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListScheduledPostsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListScheduledPostsByUser763C054E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttscheduledPostsByUserLambda726BF336Arn196C2CB4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "UserProfile": {
                        "id": "UserProfile",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "UserProfile",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMUserProfile1B2F2D01"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.UserProfile": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.UserProfile",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.UserProfile",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmUserProfileLambdaC702497FArn2EBB0E71"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/UserProfile"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMUserProfile1B2F2D01"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmUserProfileLambdaC702497FArn2EBB0E71"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "BanUser": {
                        "id": "BanUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "BanUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMBanUser67B5D2C0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/PUT",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.BanUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.BanUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/PUT/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.BanUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBanLambda32C771E6Arn384070CD"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/PUT/CRM/BanUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMBanUser67B5D2C0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBanLambda32C771E6Arn384070CD"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "EditUserNotes": {
                        "id": "EditUserNotes",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "EditUserNotes",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMEditUserNotesF5EE15EB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/PUT",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.EditUserNotes": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.EditUserNotes",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/PUT/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.EditUserNotes",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmEditUserNotesLambda504FE58BArn687BCC76"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/PUT/CRM/EditUserNotes"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMEditUserNotesF5EE15EB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmEditUserNotesLambda504FE58BArn687BCC76"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      },
                      "GetMyBotAnalitics": {
                        "id": "GetMyBotAnalitics",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "GetMyBotAnalitics",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.78.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetMyBotAnalitics4110010B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetMyBotAnalitics": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetMyBotAnalitics",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetMyBotAnalitics",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttGetMyBotAnaliticsF8D38A59Arn1426F978"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/GetMyBotAnalitics"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.78.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetMyBotAnalitics4110010B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttGetMyBotAnaliticsF8D38A59Arn1426F978"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.78.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.78.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.78.0"
                }
              },
              "WebCRMGatewayService-GWAPI-UsagePlan": {
                "id": "WebCRMGatewayService-GWAPI-UsagePlan",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            },
                            "stage": {
                              "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                            },
                            "throttle": {}
                          }
                        ],
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "WebCRMGatewayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.78.0"
                }
              },
              "WebCRMGatewayService-GW-SubDomain": {
                "id": "WebCRMGatewayService-GW-SubDomain",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "secure-crm.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.78.0"
                    }
                  },
                  "Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4": {
                    "id": "Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain/Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain/Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebCRMGatewayServiceGWAPIWebCRMGatewayServiceGWSubDomain3F254E56"
                            },
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            },
                            "stage": {
                              "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.78.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.78.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebCRMGatewayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.78.0"
            }
          },
          "WebCRMGatewayService-ARecord": {
            "id": "WebCRMGatewayService-ARecord",
            "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "secure-crm.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebCRMGatewayServiceGWAPIWebCRMGatewayServiceGWSubDomain3F254E56",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebCRMGatewayServiceGWAPIWebCRMGatewayServiceGWSubDomain3F254E56",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.78.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.78.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.78.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.78.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.78.0"
            }
          },
          "WebCRMGatewayService-APIGW-SecureAPI": {
            "id": "WebCRMGatewayService-APIGW-SecureAPI",
            "path": "WebCRMGatewayService/WebCRMGatewayService-APIGW-SecureAPI",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.78.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebCRMGatewayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebCRMGatewayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.78.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.15"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebCRMGatewayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.78.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebCRMGatewayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.78.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.78.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.2.15"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.78.0"
    }
  }
}