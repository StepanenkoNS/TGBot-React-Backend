{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "WebTokenService": {
        "id": "WebTokenService",
        "path": "WebTokenService",
        "children": {
          "Zone": {
            "id": "Zone",
            "path": "WebTokenService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebTokenService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebTokenService/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebTokenService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "TokenServiceLambda": {
            "id": "TokenServiceLambda",
            "path": "WebTokenService/TokenServiceLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebTokenService/TokenServiceLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebTokenService/TokenServiceLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/TokenServiceLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebTokenService/TokenServiceLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/TokenServiceLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/bots"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "TokenServiceLambdaServiceRoleDefaultPolicy87F48249",
                            "roles": [
                              {
                                "Ref": "TokenServiceLambdaServiceRoleBC560DEB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebTokenService/TokenServiceLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebTokenService/TokenServiceLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebTokenService/TokenServiceLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/TokenServiceLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "33a7205d01b43041b066f0ccc75637a84eec3201874280c0fb001d01e580ac42.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "TokenServiceLambdaServiceRoleBC560DEB",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "accessTokenExpirationMinutes": "60",
                        "refreshTokenExpirationDays": "365",
                        "AllowUsers": "",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "WebTokenService-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebTokenService/TokenServiceLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/TokenServiceLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebTokenService/TokenServiceLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "WebTokenService-GWAPI": {
            "id": "WebTokenService-GWAPI",
            "path": "WebTokenService/WebTokenService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/WebTokenService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebTokenService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.76.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebTokenService/WebTokenService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebTokenServiceGWAPICloudWatchRole2C04FD27",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.76.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebTokenService/WebTokenService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebTokenServiceGWAPIAFE5A254"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.76.0"
                }
              },
              "DeploymentStage.GetToken": {
                "id": "DeploymentStage.GetToken",
                "path": "WebTokenService/WebTokenService-GWAPI/DeploymentStage.GetToken",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/DeploymentStage.GetToken/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebTokenServiceGWAPIAFE5A254"
                        },
                        "deploymentId": {
                          "Ref": "WebTokenServiceGWAPIDeployment69CE11EB529ab5022852473b74f6dd36d10b3e06"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "GetToken"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.76.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebTokenService/WebTokenService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebTokenService/WebTokenService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.76.0"
                    }
                  },
                  "me": {
                    "id": "me",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/me",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/me/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "me",
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/me/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPImeEE3FC695"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET",
                        "children": {
                          "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me": {
                            "id": "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                                      },
                                      "/GET/me"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me": {
                            "id": "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/test-invoke-stage/GET/me"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPImeEE3FC695"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "getToken": {
                    "id": "getToken",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "getToken",
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIgetTokenEA421B7E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST",
                        "children": {
                          "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken": {
                            "id": "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                                      },
                                      "/POST/getToken"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken": {
                            "id": "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/test-invoke-stage/POST/getToken"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "POST",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIgetTokenEA421B7E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "logOut": {
                    "id": "logOut",
                    "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenServiceGWAPIAFE5A254",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "logOut",
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIlogOut3A11217E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET",
                        "children": {
                          "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut": {
                            "id": "ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                                      },
                                      "/GET/logOut"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut": {
                            "id": "ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenServiceGWAPIAFE5A254"
                                      },
                                      "/test-invoke-stage/GET/logOut"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebTokenServiceGWAPIlogOut3A11217E"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenServiceGWAPIAFE5A254"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.76.0"
                }
              },
              "WebTokenService-GWAPI-UsagePlan": {
                "id": "WebTokenService-GWAPI-UsagePlan",
                "path": "WebTokenService/WebTokenService-GWAPI/WebTokenService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/WebTokenService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            },
                            "stage": {
                              "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 2,
                          "rateLimit": 100
                        },
                        "usagePlanName": "WebTokenService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.76.0"
                }
              },
              "WebTokenServiceGW-SubDomain": {
                "id": "WebTokenServiceGW-SubDomain",
                "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "auth.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.76.0"
                    }
                  },
                  "Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9": {
                    "id": "Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9",
                    "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C"
                            },
                            "restApiId": {
                              "Ref": "WebTokenServiceGWAPIAFE5A254"
                            },
                            "stage": {
                              "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.LambdaRestApi",
              "version": "2.76.0"
            }
          },
          "TokenServiceAPIGWARecord": {
            "id": "TokenServiceAPIGWARecord",
            "path": "WebTokenService/TokenServiceAPIGWARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebTokenService/TokenServiceAPIGWARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "auth.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.76.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebTokenService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebTokenService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.76.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.76.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.76.0"
            }
          },
          "WebTokenService-GWAPI-tokenApi": {
            "id": "WebTokenService-GWAPI-tokenApi",
            "path": "WebTokenService/WebTokenService-GWAPI-tokenApi",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebTokenService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebTokenService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebTokenService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebTokenService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebPublicPages": {
        "id": "WebPublicPages",
        "path": "WebPublicPages",
        "children": {
          "imported-webTable": {
            "id": "imported-webTable",
            "path": "WebPublicPages/imported-webTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebPublicPages/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebPublicPages/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "WebPublicPages/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebPublicPages/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "WebPublicPages-GWAPI": {
            "id": "WebPublicPages-GWAPI",
            "path": "WebPublicPages/WebPublicPages-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebPublicPages-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.76.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebPublicPages/WebPublicPages-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebPublicPagesGWAPICloudWatchRoleBDCD59DD",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.76.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebPublicPagesGWAPI914E312C"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.76.0"
                }
              },
              "DeploymentStage.pagesAPI": {
                "id": "DeploymentStage.pagesAPI",
                "path": "WebPublicPages/WebPublicPages-GWAPI/DeploymentStage.pagesAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/DeploymentStage.pagesAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebPublicPagesGWAPI914E312C"
                        },
                        "deploymentId": {
                          "Ref": "WebPublicPagesGWAPIDeployment14CEB655312905fefaed581f1c99ea90e1e069ea"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "pagesAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.76.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebPublicPages/WebPublicPages-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.76.0"
                    }
                  },
                  "help-center": {
                    "id": "help-center",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "help-center",
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "landing": {
                        "id": "landing",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "pathPart": "landing",
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterlanding02E546B4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing": {
                                "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCLandingLambda7205BD53",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                          },
                                          "/GET/help-center/landing"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing": {
                                "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.landing",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCLandingLambda7205BD53",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/test-invoke-stage/GET/help-center/landing"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/landing/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterlanding02E546B4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCLandingLambda7205BD53",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "subcategory": {
                        "id": "subcategory",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "pathPart": "subcategory",
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcentersubcategoryD49C0FB0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory": {
                                "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCsubcategoryLambdaDF64526C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                          },
                                          "/GET/help-center/subcategory"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory": {
                                "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.subcategory",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCsubcategoryLambdaDF64526C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/test-invoke-stage/GET/help-center/subcategory"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/subcategory/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcentersubcategoryD49C0FB0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCsubcategoryLambdaDF64526C",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "article": {
                        "id": "article",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesGWAPIhelpcenter296F8FB1"
                                },
                                "pathPart": "article",
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterarticleFAA8084E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article": {
                                "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCArticleLambda3857DD83",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                          },
                                          "/GET/help-center/article"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article": {
                                "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..help-center.article",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCArticleLambda3857DD83",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesGWAPI914E312C"
                                          },
                                          "/test-invoke-stage/GET/help-center/article"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPages/WebPublicPages-GWAPI/Default/help-center/article/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesGWAPIhelpcenterarticleFAA8084E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesGWAPI914E312C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCArticleLambda3857DD83",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "content": {
                    "id": "content",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "content",
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIcontentC4B537BE"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET",
                        "children": {
                          "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content": {
                            "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetWebPageContentLambdaA5F8923E",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                      },
                                      "/GET/content"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content": {
                            "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..content",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetWebPageContentLambdaA5F8923E",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/test-invoke-stage/GET/content"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/content/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIcontentC4B537BE"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "GetWebPageContentLambdaA5F8923E",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "bot-landing": {
                    "id": "bot-landing",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesGWAPI914E312C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "bot-landing",
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIbotlanding68916FE1"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET",
                        "children": {
                          "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing": {
                            "id": "ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET/ApiPermission.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetSubdomainLambdaE4966976",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                                      },
                                      "/GET/bot-landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing": {
                            "id": "ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET/ApiPermission.Test.WebPublicPagesWebPublicPagesGWAPI3BEA04FD.GET..bot-landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetSubdomainLambdaE4966976",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesGWAPI914E312C"
                                      },
                                      "/test-invoke-stage/GET/bot-landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPages/WebPublicPages-GWAPI/Default/bot-landing/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebPublicPagesGWAPIbotlanding68916FE1"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesGWAPI914E312C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "GetSubdomainLambdaE4966976",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.76.0"
                }
              },
              "WebPublicPages-GWAPI-UsagePlan": {
                "id": "WebPublicPages-GWAPI-UsagePlan",
                "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            },
                            "stage": {
                              "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 2,
                          "rateLimit": 100
                        },
                        "usagePlanName": "WebPublicPages-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.76.0"
                }
              },
              "WebPublicPages-GW-SubDomain": {
                "id": "WebPublicPages-GW-SubDomain",
                "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "public-pages.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.76.0"
                    }
                  },
                  "Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD": {
                    "id": "Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD",
                    "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain/Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/WebPublicPages-GWAPI/WebPublicPages-GW-SubDomain/Map:--=>WebPublicPagesWebPublicPagesGWAPI3BEA04FD/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebPublicPagesGWAPIWebPublicPagesGWSubDomainA8FAC5E9"
                            },
                            "restApiId": {
                              "Ref": "WebPublicPagesGWAPI914E312C"
                            },
                            "stage": {
                              "Ref": "WebPublicPagesGWAPIDeploymentStagepagesAPI5367D931"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.76.0"
            }
          },
          "WebPublicPages-ARecord": {
            "id": "WebPublicPages-ARecord",
            "path": "WebPublicPages/WebPublicPages-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/WebPublicPages-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "public-pages.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebPublicPagesGWAPIWebPublicPagesGWSubDomainA8FAC5E9",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebPublicPagesGWAPIWebPublicPagesGWSubDomainA8FAC5E9",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.76.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebPublicPages/WebPublicPages-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebPublicPages/WebPublicPages-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.76.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.76.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebPublicPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.76.0"
            }
          },
          "GetHCLandingLambda": {
            "id": "GetHCLandingLambda",
            "path": "WebPublicPages/GetHCLandingLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetHCLandingLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetHCLandingLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetHCLandingLambdaServiceRoleDefaultPolicy885F4CFB",
                            "roles": [
                              {
                                "Ref": "GetHCLandingLambdaServiceRole49B6A35F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetHCLandingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetHCLandingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetHCLandingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetHCLandingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ce97f06579a7ba86d47e78edca8738365424abdefc12445024a0b659fd7a4f67.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetHCLandingLambdaServiceRole49B6A35F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Landing-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetHCLandingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCLandingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetHCLandingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "GetHCsubcategoryLambda": {
            "id": "GetHCsubcategoryLambda",
            "path": "WebPublicPages/GetHCsubcategoryLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetHCsubcategoryLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetHCsubcategoryLambdaServiceRoleDefaultPolicyC6ACB76B",
                            "roles": [
                              {
                                "Ref": "GetHCsubcategoryLambdaServiceRole5D0A48C2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetHCsubcategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetHCsubcategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c5c63014b64ea6d7484640854788abe725b828349b09204baaf2752a1ce794ba.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetHCsubcategoryLambdaServiceRole5D0A48C2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Subcategory-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetHCsubcategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCsubcategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetHCsubcategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetHCArticleLambda": {
            "id": "GetHCArticleLambda",
            "path": "WebPublicPages/GetHCArticleLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetHCArticleLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetHCArticleLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetHCArticleLambdaServiceRoleDefaultPolicy6EADEE79",
                            "roles": [
                              {
                                "Ref": "GetHCArticleLambdaServiceRoleE865A3F8"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetHCArticleLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetHCArticleLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetHCArticleLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetHCArticleLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0bc6532f676e2cb6f533f58ed0f97d3410f35c1c7637a8f67749f412bb1c9033.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetHCArticleLambdaServiceRoleE865A3F8",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Article-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetHCArticleLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetHCArticleLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetHCArticleLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetWebPageContentLambda": {
            "id": "GetWebPageContentLambda",
            "path": "WebPublicPages/GetWebPageContentLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetWebPageContentLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":dynamodb:us-east-1:993738567487:table/web"
                                        ]
                                      ]
                                    },
                                    {
                                      "Ref": "AWS::NoValue"
                                    }
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetWebPageContentLambdaServiceRoleDefaultPolicy3CD79D99",
                            "roles": [
                              {
                                "Ref": "GetWebPageContentLambdaServiceRoleCFFC41DD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetWebPageContentLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetWebPageContentLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetWebPageContentLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetWebPageContentLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7784ba7130c2632af54020d72d518aa73d7987e01c23d0f1c62f6ec13a9bc1bf.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetWebPageContentLambdaServiceRoleCFFC41DD",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Content-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetWebPageContentLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetWebPageContentLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetWebPageContentLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetSubdomainLambda": {
            "id": "GetSubdomainLambda",
            "path": "WebPublicPages/GetSubdomainLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPages/GetSubdomainLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPages/GetSubdomainLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetSubdomainLambdaServiceRoleDefaultPolicyA7F93036",
                            "roles": [
                              {
                                "Ref": "GetSubdomainLambdaServiceRole079F22B3"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebPublicPages/GetSubdomainLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPages/GetSubdomainLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPages/GetSubdomainLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPages/GetSubdomainLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ca4f65728c5e2f62470b7d48dc553eeb5fc7ef83a1fc30391f2c07abedcf7004.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetSubdomainLambdaServiceRole079F22B3",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPages/GetSubdomainLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPages/GetSubdomainLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPages/GetSubdomainLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebPublicPages/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebPublicPages/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebPublicPages/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebPublicPages/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServiceMain": {
        "id": "WebRestServiceMain",
        "path": "WebRestServiceMain",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceMain/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServiceMain/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "ListBotsLambda": {
            "id": "ListBotsLambda",
            "path": "WebRestServiceMain/ListBotsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListBotsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListBotsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
                            "roles": [
                              {
                                "Ref": "ListBotsLambdaServiceRoleA6E24787"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListBotsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListBotsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListBotsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListBotsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3a175d0c08fe1a556b309d7f27fa8b8b1fa41843c5f03343641a6b7e9b9902cd.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListBotsLambdaServiceRoleA6E24787",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListBotsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListBotsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "GetBotLambda": {
            "id": "GetBotLambda",
            "path": "WebRestServiceMain/GetBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetBotLambdaServiceRoleDefaultPolicy4267B667",
                            "roles": [
                              {
                                "Ref": "GetBotLambdaServiceRoleC26C83F1"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "99a58c7437ec84358133ab3e79ca69ea545d1bc5bb98c318d9795bccbf911fff.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetBotLambdaServiceRoleC26C83F1",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddBotLambda": {
            "id": "AddBotLambda",
            "path": "WebRestServiceMain/AddBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/AddBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/AddBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/AddBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/AddBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddBotLambdaServiceRoleDefaultPolicy840C6C96",
                            "roles": [
                              {
                                "Ref": "AddBotLambdaServiceRole3893B7F5"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2f51400fa0bf05156b3ec8db79e9fd91d26305fa0cc25c135d7d35bd5c9b2ced.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddBotLambdaServiceRole3893B7F5",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "telegramFacingAPIurl": "https://messagingbot-face.zuzona.com",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "RegisterBotLambda": {
            "id": "RegisterBotLambda",
            "path": "WebRestServiceMain/RegisterBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/RegisterBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "RegisterBotLambdaServiceRoleDefaultPolicy08459592",
                            "roles": [
                              {
                                "Ref": "RegisterBotLambdaServiceRole6F8C4E1E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/RegisterBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/RegisterBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/RegisterBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/RegisterBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "55d770ff7dab970ad1ec944b85178a3da2173861e10681b077bbe6f5516b8a7a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "RegisterBotLambdaServiceRole6F8C4E1E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "telegramFacingAPIurl": "https://messagingbot-face.zuzona.com",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Register-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/RegisterBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/RegisterBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/RegisterBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "UnRegisterBotLambda": {
            "id": "UnRegisterBotLambda",
            "path": "WebRestServiceMain/UnRegisterBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/UnRegisterBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "UnRegisterBotLambdaServiceRoleDefaultPolicyF9271B9B",
                            "roles": [
                              {
                                "Ref": "UnRegisterBotLambdaServiceRole2048DD2D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/UnRegisterBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/UnRegisterBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ae8cdd7f91854e11a4146a0641e9d82d15d5d34f57a7793caa29a94ac04e25c3.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "UnRegisterBotLambdaServiceRole2048DD2D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "telegramFacingAPIurl": "https://messagingbot-face.zuzona.com",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-UnRegister-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/UnRegisterBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/UnRegisterBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditBotLambda": {
            "id": "EditBotLambda",
            "path": "WebRestServiceMain/EditBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditBotLambdaServiceRoleDefaultPolicyD972E5A3",
                            "roles": [
                              {
                                "Ref": "EditBotLambdaServiceRole67F2A33A"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "db88927c8942966bdc411c67fb43a98011002397d912c8df95276e13312f7e2b.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditBotLambdaServiceRole67F2A33A",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "telegramFacingAPIurl": "https://messagingbot-face.zuzona.com",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteBotLambda": {
            "id": "DeleteBotLambda",
            "path": "WebRestServiceMain/DeleteBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteBotLambdaServiceRoleDefaultPolicyD016D023",
                            "roles": [
                              {
                                "Ref": "DeleteBotLambdaServiceRoleEE3D337F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "260073de658d37fbd044038d12b11eba34beb4ebfd8ae8ac1dd3fe48bc4f8ddd.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteBotLambdaServiceRoleEE3D337F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListChannelsLambda": {
            "id": "ListChannelsLambda",
            "path": "WebRestServiceMain/ListChannelsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListChannelsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListChannelsLambdaServiceRoleDefaultPolicy13606B0F",
                            "roles": [
                              {
                                "Ref": "ListChannelsLambdaServiceRoleC005ABDC"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListChannelsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListChannelsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListChannelsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListChannelsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5a81fdd0d70f4d676d57eb8d85265372db2ee5e2d4eb1ab4341490681f1e1915.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListChannelsLambdaServiceRoleC005ABDC",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListChannelsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListChannelsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListChannelsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetChannelLambda": {
            "id": "GetChannelLambda",
            "path": "WebRestServiceMain/GetChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetChannelLambdaServiceRoleDefaultPolicyBE981215",
                            "roles": [
                              {
                                "Ref": "GetChannelLambdaServiceRoleE14FCB20"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7a5b97f1b64ab241e3f88156dc388204fc13e5ebc1feea30f9be2157b24ea257.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetChannelLambdaServiceRoleE14FCB20",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditChannelLambda": {
            "id": "EditChannelLambda",
            "path": "WebRestServiceMain/EditChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditChannelLambdaServiceRoleDefaultPolicy1C60F4EE",
                            "roles": [
                              {
                                "Ref": "EditChannelLambdaServiceRole1EA00B2F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "de1105dfe2ffb7e5a25a6bbc88279f4b64e8f3a99ed7fcf0b03bc46859f52373.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditChannelLambdaServiceRole1EA00B2F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteChannelLambda": {
            "id": "DeleteChannelLambda",
            "path": "WebRestServiceMain/DeleteChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeleteChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteChannelLambdaServiceRoleDefaultPolicyA8327749",
                            "roles": [
                              {
                                "Ref": "DeleteChannelLambdaServiceRoleE75213EF"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a001768a12bd37b4928b4c5cc099c0676101ad077fc913b62207048eff2dd589.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteChannelLambdaServiceRoleE75213EF",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListPaymentOptionsLambda": {
            "id": "ListPaymentOptionsLambda",
            "path": "WebRestServiceMain/ListPaymentOptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
                            "roles": [
                              {
                                "Ref": "ListPaymentOptionsLambdaServiceRoleD3A97E58"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c993d69d54d0cea5c3dc84f47e518ae5a0ba45c767ee973e21360bee787659b6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListPaymentOptionsLambdaServiceRoleD3A97E58",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetPaymentOptionLambda": {
            "id": "GetPaymentOptionLambda",
            "path": "WebRestServiceMain/GetPaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/GetPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304",
                            "roles": [
                              {
                                "Ref": "GetPaymentOptionLambdaServiceRoleDC5B8DC2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "6f677aa410c8cf341fd3f335417a984e1e5b17fded7d661a683c377efdb3fda2.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetPaymentOptionLambdaServiceRoleDC5B8DC2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddPaymentOptionLambda": {
            "id": "AddPaymentOptionLambda",
            "path": "WebRestServiceMain/AddPaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/AddPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
                            "roles": [
                              {
                                "Ref": "AddPaymentOptionLambdaServiceRole15897195"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0d36d76abb98c8247d6c333444cbc157c3b6f52dbf543e9954362877524983f6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddPaymentOptionLambdaServiceRole15897195",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditPaymentOptionLambda": {
            "id": "EditPaymentOptionLambda",
            "path": "WebRestServiceMain/EditPaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/EditPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
                            "roles": [
                              {
                                "Ref": "EditPaymentOptionLambdaServiceRole73BB83E4"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "90b97d5f65f171c5dcba94704675b90d5ae432dfd9ca0d7140d1fb131186b92f.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditPaymentOptionLambdaServiceRole73BB83E4",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeletePaymentOptionLambda": {
            "id": "DeletePaymentOptionLambda",
            "path": "WebRestServiceMain/DeletePaymentOptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
                            "roles": [
                              {
                                "Ref": "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e003e0976efd49559960d4379484162e0b3c516b8796fca77eaa3ff582251325.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeletePaymentOptionLambdaServiceRoleB4EBD3CA",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceMain/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceMain/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceMain/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceMain/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceMain/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServiceFiles": {
        "id": "WebRestServiceFiles",
        "path": "WebRestServiceFiles",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceFiles/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServiceFiles/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "ListMessageFilesLambda": {
            "id": "ListMessageFilesLambda",
            "path": "WebRestServiceFiles/ListMessageFilesLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/ListMessageFilesLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/ListMessageFilesLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListMessageFilesLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/ListMessageFilesLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/ListMessageFilesLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListMessageFilesLambdaServiceRoleDefaultPolicyBAFFF0C6",
                            "roles": [
                              {
                                "Ref": "ListMessageFilesLambdaServiceRole27E6A9BF"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/ListMessageFilesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/ListMessageFilesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/ListMessageFilesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/ListMessageFilesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a9cfe59f963e99b67887689e167dfdc5859a032a39b41dcfd2c2b60ec5b6b3b3.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListMessageFilesLambdaServiceRole27E6A9BF",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MessageFiles-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/ListMessageFilesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListMessageFilesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/ListMessageFilesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "GetMessageFileLambda": {
            "id": "GetMessageFileLambda",
            "path": "WebRestServiceFiles/GetMessageFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/GetMessageFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/GetMessageFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetMessageFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/GetMessageFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/GetMessageFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetMessageFileLambdaServiceRoleDefaultPolicy8F726EE9",
                            "roles": [
                              {
                                "Ref": "GetMessageFileLambdaServiceRole69400E26"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetMessageFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetMessageFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetMessageFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetMessageFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "73a7fefe73549ef6b4ae0669770e800cd3e1530ab317de530e99185333a3b6ae.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetMessageFileLambdaServiceRole69400E26",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MessageFiles-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetMessageFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetMessageFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetMessageFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddMessageFileLambda": {
            "id": "AddMessageFileLambda",
            "path": "WebRestServiceFiles/AddMessageFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/AddMessageFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/AddMessageFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/AddMessageFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/AddMessageFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/AddMessageFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddMessageFileLambdaServiceRoleDefaultPolicyE45FE77C",
                            "roles": [
                              {
                                "Ref": "AddMessageFileLambdaServiceRoleBE2D7298"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/AddMessageFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/AddMessageFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/AddMessageFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/AddMessageFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "11fdfae48272cda7588a2cf86bf5ad5573381bf5433561e56df800d3c9806bde.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddMessageFileLambdaServiceRoleBE2D7298",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MessageFiles-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/AddMessageFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/AddMessageFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/AddMessageFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditMessageFileLambda": {
            "id": "EditMessageFileLambda",
            "path": "WebRestServiceFiles/EditMessageFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/EditMessageFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/EditMessageFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditMessageFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/EditMessageFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/EditMessageFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditMessageFileLambdaServiceRoleDefaultPolicy707E1526",
                            "roles": [
                              {
                                "Ref": "EditMessageFileLambdaServiceRoleD51D4A28"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/EditMessageFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/EditMessageFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/EditMessageFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/EditMessageFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1a93ad2372b1d6fb6a7180e71592cae1f01970a56328cab0fd60622783201606.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditMessageFileLambdaServiceRoleD51D4A28",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MessageFiles-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/EditMessageFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditMessageFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/EditMessageFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteMessageFileLambda": {
            "id": "DeleteMessageFileLambda",
            "path": "WebRestServiceFiles/DeleteMessageFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/DeleteMessageFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/DeleteMessageFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteMessageFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/DeleteMessageFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/DeleteMessageFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteMessageFileLambdaServiceRoleDefaultPolicy062F48D7",
                            "roles": [
                              {
                                "Ref": "DeleteMessageFileLambdaServiceRole72930807"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/DeleteMessageFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/DeleteMessageFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/DeleteMessageFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/DeleteMessageFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2b1741531824e14bea67c1d10ee0018612b08bb7950dbd1c9f0f9b9e3ca763f2.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteMessageFileLambdaServiceRole72930807",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MessageFiles-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/DeleteMessageFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteMessageFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/DeleteMessageFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListTelegramFilesLambda": {
            "id": "ListTelegramFilesLambda",
            "path": "WebRestServiceFiles/ListTelegramFilesLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/ListTelegramFilesLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListTelegramFilesLambdaServiceRoleDefaultPolicy3EB5C92E",
                            "roles": [
                              {
                                "Ref": "ListTelegramFilesLambdaServiceRole22F9FFE6"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "dd2961d81f8bbf5a4e63f61f2be8638cae6061ed9c4258b5174bea894a0b4efa.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListTelegramFilesLambdaServiceRole22F9FFE6",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetTelegramFileLambda": {
            "id": "GetTelegramFileLambda",
            "path": "WebRestServiceFiles/GetTelegramFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/GetTelegramFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetTelegramFileLambdaServiceRoleDefaultPolicy40949059",
                            "roles": [
                              {
                                "Ref": "GetTelegramFileLambdaServiceRole5FBAAC50"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "8d372b76576aef88214a6b7fdadd7d2cb53bf7437d2ea565c4e410dd3137a416.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetTelegramFileLambdaServiceRole5FBAAC50",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditTelegramFileLambda": {
            "id": "EditTelegramFileLambda",
            "path": "WebRestServiceFiles/EditTelegramFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/EditTelegramFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditTelegramFileLambdaServiceRoleDefaultPolicy5D68D209",
                            "roles": [
                              {
                                "Ref": "EditTelegramFileLambdaServiceRoleE659C8E7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "fbafda74e1a366106d494018aa1ea145f85c83677f1632d5df495c0feb730884.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditTelegramFileLambdaServiceRoleE659C8E7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteTelegramFileLambda": {
            "id": "DeleteTelegramFileLambda",
            "path": "WebRestServiceFiles/DeleteTelegramFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/DeleteTelegramFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteTelegramFileLambdaServiceRoleDefaultPolicy729E6FFE",
                            "roles": [
                              {
                                "Ref": "DeleteTelegramFileLambdaServiceRoleAA4962F9"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "8d21251d4c5d70102b89d9b060a645f21fb364e2c6f9c5e61b82af8f370d2492.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteTelegramFileLambdaServiceRoleAA4962F9",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetGetPresignedUrlLambda": {
            "id": "GetGetPresignedUrlLambda",
            "path": "WebRestServiceFiles/GetGetPresignedUrlLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetGetPresignedUrlLambdaServiceRoleDefaultPolicy8389685E",
                            "roles": [
                              {
                                "Ref": "GetGetPresignedUrlLambdaServiceRole6568E3BF"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "02a8428aac7c1c51ef31ef3e1ae6f741d4f0a5b45ae5c5536fc214fd5b5f943e.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetGetPresignedUrlLambdaServiceRole6568E3BF",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-GetPresignedUrl-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceFiles/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceFiles/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceFiles/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListMessageFilesLambdaA8A6DBEA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMessageFilesLambdaA8A6DBEA\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"ListMessageFilesLambdaA8A6DBEA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMessageFileLambdaDF57EDB2\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMessageFileLambdaDF57EDB2\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetMessageFileLambdaDF57EDB2\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddMessageFileLambda2C734180\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddMessageFileLambda2C734180\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"AddMessageFileLambda2C734180\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditMessageFileLambda395F8673\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditMessageFileLambda395F8673\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"EditMessageFileLambda395F8673\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteMessageFileLambdaE4E88A6A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteMessageFileLambdaE4E88A6A\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"DeleteMessageFileLambdaE4E88A6A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceFiles/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceFiles/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServiceMessagesAndPayments": {
        "id": "WebRestServiceMessagesAndPayments",
        "path": "WebRestServiceMessagesAndPayments",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceMessagesAndPayments/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServiceMessagesAndPayments/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "SendTestMessageLambda": {
            "id": "SendTestMessageLambda",
            "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendTestMessageLambdaServiceRoleDefaultPolicy824468AA",
                            "roles": [
                              {
                                "Ref": "SendTestMessageLambdaServiceRole14BB4964"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "482378e1a02c1d60dee131ee45054028c5c107a2cbd1e386ed9dab2ce98e4feb.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendTestMessageLambdaServiceRole14BB4964",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendTestMessage-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "SendTestFileLambda": {
            "id": "SendTestFileLambda",
            "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendTestFileLambdaServiceRoleDefaultPolicy33D777A7",
                            "roles": [
                              {
                                "Ref": "SendTestFileLambdaServiceRole6E94BD46"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b8ff94d3b54bd13960f1fd05653b6ea6569c753724de467f731e560c965c1117.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendTestFileLambdaServiceRole6E94BD46",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendTestFile-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListBotPaymentsLambda": {
            "id": "ListBotPaymentsLambda",
            "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListBotPaymentsLambdaServiceRoleDefaultPolicy7CC6BD9D",
                            "roles": [
                              {
                                "Ref": "ListBotPaymentsLambdaServiceRole3F198125"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "86b7f5ff92a00105b22dfe6ddc1ac6cc6c303bef73054ef55f612e02551e2193.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListBotPaymentsLambdaServiceRole3F198125",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotPayments-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ListBotPaymentsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "imported-schedulerSendQueueDLQSendMessageScheduler": {
            "id": "imported-schedulerSendQueueDLQSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-schedulerSendQueueDLQSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-schedulerSendQueueSendMessageScheduler": {
            "id": "imported-schedulerSendQueueSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-schedulerSendQueueSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "scheduler-schedulerDDBUpdateQueueDLQ.fifo": {
            "id": "scheduler-schedulerDDBUpdateQueueDLQ.fifo",
            "path": "WebRestServiceMessagesAndPayments/scheduler-schedulerDDBUpdateQueueDLQ.fifo",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/scheduler-schedulerDDBUpdateQueueDLQ.fifo/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "deduplicationScope": "messageGroup",
                    "fifoQueue": true,
                    "fifoThroughputLimit": "perMessageGroupId",
                    "queueName": "scheduler-schedulerDDBUpdateQueueDLQ.fifo",
                    "visibilityTimeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.76.0"
            }
          },
          "scheduler-schedulerDDBUpdateQueue.fifo": {
            "id": "scheduler-schedulerDDBUpdateQueue.fifo",
            "path": "WebRestServiceMessagesAndPayments/scheduler-schedulerDDBUpdateQueue.fifo",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/scheduler-schedulerDDBUpdateQueue.fifo/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SQS::Queue",
                  "aws:cdk:cloudformation:props": {
                    "deduplicationScope": "messageGroup",
                    "fifoQueue": true,
                    "fifoThroughputLimit": "perMessageGroupId",
                    "queueName": "scheduler-schedulerDDBUpdateQueue.fifo",
                    "redrivePolicy": {
                      "deadLetterTargetArn": {
                        "Fn::GetAtt": [
                          "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C",
                          "Arn"
                        ]
                      },
                      "maxReceiveCount": 3
                    },
                    "visibilityTimeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_sqs.CfnQueue",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.Queue",
              "version": "2.76.0"
            }
          },
          "SendMessagePreProcessor": {
            "id": "SendMessagePreProcessor",
            "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo",
                                    {
                                      "Fn::GetAtt": [
                                        "schedulerschedulerDDBUpdateQueuefifo91FFC94F",
                                        "Arn"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessagePreProcessorServiceRoleDefaultPolicyC4D4AA01",
                            "roles": [
                              {
                                "Ref": "SendMessagePreProcessorServiceRole0AE9DB21"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a8b2990dc8396148683af0398973c9c5c336989d00ee65b43eb90c0b372aa0ba.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessagePreProcessorServiceRole0AE9DB21",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "schedulerSendQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-schedulerSendQueue.fifo"
                            ]
                          ]
                        },
                        "schedulerDDBUpdateQueue": {
                          "Ref": "schedulerschedulerDDBUpdateQueuefifo91FFC94F"
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "scheduler-SendMessagePreProcessor-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessagePreProcessor/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "SendMessagescheduler": {
            "id": "SendMessagescheduler",
            "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "lambda:InvokeFunction",
                                  "Effect": "Allow",
                                  "Resource": [
                                    {
                                      "Fn::GetAtt": [
                                        "SendMessagePreProcessor8295B848",
                                        "Arn"
                                      ]
                                    },
                                    {
                                      "Fn::Join": [
                                        "",
                                        [
                                          {
                                            "Fn::GetAtt": [
                                              "SendMessagePreProcessor8295B848",
                                              "Arn"
                                            ]
                                          },
                                          ":*"
                                        ]
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessageschedulerServiceRoleDefaultPolicy84D10FB6",
                            "roles": [
                              {
                                "Ref": "SendMessageschedulerServiceRole18DB892C"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "8b8623b6ef9c9a2b50cd844810887c13a94f0d7f2798211dc27e21064fb7efc6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessageschedulerServiceRole18DB892C",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "SendMessagePreProcessor": {
                          "Ref": "SendMessagePreProcessor8295B848"
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "scheduler-ScheduleMessages-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessagescheduler/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "SendMessageSender": {
            "id": "SendMessageSender",
            "path": "WebRestServiceMessagesAndPayments/SendMessageSender",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessageSender/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendQueueDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessageSenderServiceRoleDefaultPolicy3CB84014",
                            "roles": [
                              {
                                "Ref": "SendMessageSenderServiceRole1250F146"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3efb80a12dcdf59657bc6e3f53148a27d40aae6172b5dc1ca6f61e61a0bdb872.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessageSenderServiceRole1250F146",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "scheduler-SendMessageSender-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueSendMessageScheduler5096D21A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueSendMessageScheduler5096D21A",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueSendMessageScheduler5096D21A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueSendMessageScheduler5096D21A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSender0498CBC5"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueDLQSendMessageScheduler54D2A888": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueDLQSendMessageScheduler54D2A888",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueDLQSendMessageScheduler54D2A888",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedschedulerSendQueueDLQSendMessageScheduler54D2A888/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSender0498CBC5"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendQueueDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "SendMessageDDBUpdateInProgress": {
            "id": "SendMessageDDBUpdateInProgress",
            "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "schedulerschedulerDDBUpdateQueuefifo91FFC94F",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": {
                                    "Fn::GetAtt": [
                                      "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C",
                                      "Arn"
                                    ]
                                  }
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SendMessageDDBUpdateInProgressServiceRoleDefaultPolicyDE676324",
                            "roles": [
                              {
                                "Ref": "SendMessageDDBUpdateInProgressServiceRole7D4D0484"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0dcd7d403eefacaf890ffcbdd907aecd8526ce7853951dc0e3d94b8622d0cbb8.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SendMessageDDBUpdateInProgressServiceRole7D4D0484",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "scheduler-DDBUpdateInProgress-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueuefifoD65C045B": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueuefifoD65C045B",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueuefifoD65C045B",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueuefifoD65C045B/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageDDBUpdateInProgressB178F9F3"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": {
                          "Fn::GetAtt": [
                            "schedulerschedulerDDBUpdateQueuefifo91FFC94F",
                            "Arn"
                          ]
                        },
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueueDLQfifoAD223F1A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueueDLQfifoAD223F1A",
                "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueueDLQfifoAD223F1A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageDDBUpdateInProgress/SqsEventSource:WebRestServiceMessagesAndPaymentsschedulerschedulerDDBUpdateQueueDLQfifoAD223F1A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageDDBUpdateInProgressB178F9F3"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": {
                          "Fn::GetAtt": [
                            "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C",
                            "Arn"
                          ]
                        },
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "imported-schedulerSendQueueForPaymentProcessor": {
            "id": "imported-schedulerSendQueueForPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-schedulerSendQueueForPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-PaymentProcessorQueue": {
            "id": "imported-PaymentProcessorQueue",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-PaymentProcessorQueueDQL": {
            "id": "imported-PaymentProcessorQueueDQL",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorQueueDQL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-PaymentProcessorConfirmationQueue": {
            "id": "imported-PaymentProcessorConfirmationQueue",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorConfirmationQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-PaymentProcessorConfirmationQueueDQL": {
            "id": "imported-PaymentProcessorConfirmationQueueDQL",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorConfirmationQueueDQL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-SubscribeToContentPlanQueue-forPaymentProcessor": {
            "id": "imported-SubscribeToContentPlanQueue-forPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueue-forPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "paymentProcessorIncomingRequests": {
            "id": "paymentProcessorIncomingRequests",
            "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "paymentProcessorIncomingRequestsServiceRoleDefaultPolicyDDCB4396",
                            "roles": [
                              {
                                "Ref": "paymentProcessorIncomingRequestsServiceRole555A208F"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f52449519c4b6de0583b65be396d6347381d178405c0205075e00da1c39e476a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "paymentProcessorIncomingRequestsServiceRole555A208F",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "schedulerSendQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-schedulerSendQueue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-incomingRequests",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorIncomingRequests676308B6"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorIncomingRequests676308B6"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "paymentProcessorConfirmationRequests": {
            "id": "paymentProcessorConfirmationRequests",
            "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo",
                                    "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                                  ]
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::bots-bucket/*",
                                    "arn:aws:s3:::bots-bucket"
                                  ]
                                },
                                {
                                  "Action": "s3:*",
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:s3:::message-files-temp-uploads-bucket/*",
                                    "arn:aws:s3:::message-files-temp-uploads-bucket"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "paymentProcessorConfirmationRequestsServiceRoleDefaultPolicyB58C561D",
                            "roles": [
                              {
                                "Ref": "paymentProcessorConfirmationRequestsServiceRole2AE57561"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "12aeae83a02deb541d9f02d886fdd1c3f0753a1c8a7697a57f1cce9504985b61.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "paymentProcessorConfirmationRequestsServiceRole2AE57561",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "schedulerSendQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-schedulerSendQueue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-IncomingPaymentConfirmation",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "imported-schedulerSendQueueForCreateSubscriptionProcessor": {
            "id": "imported-schedulerSendQueueForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-schedulerSendQueueForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.76.0"
            }
          },
          "SubscriptionProcessorLambdaContentPlanLambda": {
            "id": "SubscriptionProcessorLambdaContentPlanLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan-DLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscriptionProcessorLambdaContentPlanLambdaServiceRoleDefaultPolicyB03C6E14",
                            "roles": [
                              {
                                "Ref": "SubscriptionProcessorLambdaContentPlanLambdaServiceRoleADE5C715"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "352d70bbc81cda5dccdc9d082cd38672d250ef688648ec769ff6c403aa50cc8c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscriptionProcessorLambdaContentPlanLambdaServiceRoleADE5C715",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "schedulerSendQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-schedulerSendQueue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Subscribe-User-To-ContentPlan",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorLambdaContentPlanLambda730D0AC1"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorLambdaContentPlanLambda730D0AC1"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-ContentPlan.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "SubscriptionProcessorSubscriptionPlanLambda": {
            "id": "SubscriptionProcessorSubscriptionPlanLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "sqs:SendMessage",
                                    "sqs:GetQueueAttributes",
                                    "sqs:GetQueueUrl"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                                },
                                {
                                  "Action": [
                                    "sqs:ReceiveMessage",
                                    "sqs:ChangeMessageVisibility",
                                    "sqs:GetQueueUrl",
                                    "sqs:DeleteMessage",
                                    "sqs:GetQueueAttributes"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan-DLQ.fifo"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscriptionProcessorSubscriptionPlanLambdaServiceRoleDefaultPolicy7FEB4C15",
                            "roles": [
                              {
                                "Ref": "SubscriptionProcessorSubscriptionPlanLambdaServiceRole4F1CFE60"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "11d463a10c5245327be40a22107629e717b389f90ac49ec5dd4b98c30df7a3bb.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscriptionProcessorSubscriptionPlanLambdaServiceRole4F1CFE60",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "schedulerSendQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-schedulerSendQueue.fifo"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-ContentPlan.fifo"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Subscribe-User-To-SubscriptionPlan",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorSubscriptionPlanLambda0FF2E2A5"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorSubscriptionPlanLambda0FF2E2A5"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionProcessor-SubscribeTo-SubscriptionPlan-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CleanupChannelLambda": {
            "id": "CleanupChannelLambda",
            "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "CleanupChannelLambdaServiceRoleDefaultPolicyBD76F9AC",
                            "roles": [
                              {
                                "Ref": "CleanupChannelLambdaServiceRole3134B7B9"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e25949cbe0db8737302f7f5ad0bed9c1a06f82ee215ae74600277f251d29e7ff.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "CleanupChannelLambdaServiceRole3134B7B9",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Cleanup-Channels",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/CleanupChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "oneHourCleanupChannels": {
            "id": "oneHourCleanupChannels",
            "path": "WebRestServiceMessagesAndPayments/oneHourCleanupChannels",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupChannels/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourCleanupChannels",
                    "scheduleExpression": "rate(1 day)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "CleanupChannelLambda1A47F1C4",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"Hello Lambda\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.76.0"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsCleanupChannelLambda1E435F11": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsCleanupChannelLambda1E435F11",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupChannels/AllowEventRuleWebRestServiceMessagesAndPaymentsCleanupChannelLambda1E435F11",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "CleanupChannelLambda1A47F1C4",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourCleanupChannelsF1E1C8A7",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.76.0"
            }
          },
          "ZuzonaSubscriptionCleanUpProcessor": {
            "id": "ZuzonaSubscriptionCleanUpProcessor",
            "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ZuzonaSubscriptionCleanUpProcessorServiceRoleDefaultPolicy24706F2E",
                            "roles": [
                              {
                                "Ref": "ZuzonaSubscriptionCleanUpProcessorServiceRole3550F7A2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ddc0dd396a53193ea8eb4455636ee3dafc29be492a85603c4bfa3cabaf50cac0.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ZuzonaSubscriptionCleanUpProcessorServiceRole3550F7A2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Cleanup-Zuzona",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ZuzonaSubscriptionCleanUpProcessor/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "oneHourCleanupZuzona": {
            "id": "oneHourCleanupZuzona",
            "path": "WebRestServiceMessagesAndPayments/oneHourCleanupZuzona",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupZuzona/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourCleanupZuzona",
                    "scheduleExpression": "rate(1 day)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "ZuzonaSubscriptionCleanUpProcessor132C370C",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"oneHourCleanupZuzona\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.76.0"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsZuzonaSubscriptionCleanUpProcessorF5181F35": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsZuzonaSubscriptionCleanUpProcessorF5181F35",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupZuzona/AllowEventRuleWebRestServiceMessagesAndPaymentsZuzonaSubscriptionCleanUpProcessorF5181F35",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "ZuzonaSubscriptionCleanUpProcessor132C370C",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourCleanupZuzona98A62E54",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceMessagesAndPayments/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceMessagesAndPayments/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceMessagesAndPayments/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListBotPaymentsLambda8AE1421E\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotPaymentsLambda8AE1421E\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"ListBotPaymentsLambda8AE1421E\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceMessagesAndPayments/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceMessagesAndPayments/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServicePlansAndPosts": {
        "id": "WebRestServicePlansAndPosts",
        "path": "WebRestServicePlansAndPosts",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServicePlansAndPosts/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServicePlansAndPosts/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "ListContentPlanPostsLambda": {
            "id": "ListContentPlanPostsLambda",
            "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListContentPlanPostsLambdaServiceRoleDefaultPolicyBC01FCAC",
                            "roles": [
                              {
                                "Ref": "ListContentPlanPostsLambdaServiceRole979D40F7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "97a94eb7a4c994bfffcf306466be6e5054968ec1a13952125107547be4b330b0.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListContentPlanPostsLambdaServiceRole979D40F7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "GetContentPlanPostLambda": {
            "id": "GetContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetContentPlanPostLambdaServiceRoleDefaultPolicyE38B6BCA",
                            "roles": [
                              {
                                "Ref": "GetContentPlanPostLambdaServiceRoleC014D555"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f951c9a07fca6144e4c78d8e8c2f96a97cd19ce6077be6cbad9bb0abe0266a70.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetContentPlanPostLambdaServiceRoleC014D555",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddContentPlanPostLambda": {
            "id": "AddContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddContentPlanPostLambdaServiceRoleDefaultPolicy98C48D3B",
                            "roles": [
                              {
                                "Ref": "AddContentPlanPostLambdaServiceRoleC11A91BA"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c1e314ee42bbec56f67d2f71b236c4134cb8742a75f711b9f7ecb4fd1ad3e4b6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddContentPlanPostLambdaServiceRoleC11A91BA",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditContentPlanPostLambda": {
            "id": "EditContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditContentPlanPostLambdaServiceRoleDefaultPolicyE3B51AAF",
                            "roles": [
                              {
                                "Ref": "EditContentPlanPostLambdaServiceRole9D24083D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "22ceb721c827f5b65402d596aaf2e419c11b0156e7144897531178dbe1a605af.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditContentPlanPostLambdaServiceRole9D24083D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteContentPlanPostLambda": {
            "id": "DeleteContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteContentPlanPostLambdaServiceRoleDefaultPolicyE309B8E0",
                            "roles": [
                              {
                                "Ref": "DeleteContentPlanPostLambdaServiceRole889FFD78"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1141d2ae0e0ecde0002d8fbdb72e3f44e66d0c2a416c5c5843e56e65ddba23b2.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteContentPlanPostLambdaServiceRole889FFD78",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListContentPlansLambda": {
            "id": "ListContentPlansLambda",
            "path": "WebRestServicePlansAndPosts/ListContentPlansLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248",
                            "roles": [
                              {
                                "Ref": "ListContentPlansLambdaServiceRole367A02FD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4359ad63200aca31b505111e1018c6790bbb70d1e48cbf2921a6e013ce849094.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListContentPlansLambdaServiceRole367A02FD",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetContentPlanLambda": {
            "id": "GetContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/GetContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A",
                            "roles": [
                              {
                                "Ref": "GetContentPlanLambdaServiceRole2D75CA0E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3dec3b5b666d74ea249af9116823ca8aaa7a0fa90c0171eb7697fc60a6ddcb14.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetContentPlanLambdaServiceRole2D75CA0E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddContentPlanLambda": {
            "id": "AddContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/AddContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9",
                            "roles": [
                              {
                                "Ref": "AddContentPlanLambdaServiceRole69887C26"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "10f692478b2f4240af7a9d2dd30c1c9b8c16e71537ab7e2c5c71304d78ec9b98.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddContentPlanLambdaServiceRole69887C26",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditContentPlanLambda": {
            "id": "EditContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/EditContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3",
                            "roles": [
                              {
                                "Ref": "EditContentPlanLambdaServiceRole25A19D33"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "23e06dd4b9f864c4f3d1f06b0f7b0cc473e0da87b0757fd819910ca54bcfb417.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditContentPlanLambdaServiceRole25A19D33",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteContentPlanLambda": {
            "id": "DeleteContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0",
                            "roles": [
                              {
                                "Ref": "DeleteContentPlanLambdaServiceRoleAD676078"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "16d08e7c78327f1978714f63f5dfff3dec73906ef8cdea916cc9d33498d4457e.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteContentPlanLambdaServiceRoleAD676078",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServicePlansAndPosts/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServicePlansAndPosts/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServicePlansAndPosts/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServicePlansAndPosts/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServicePlansAndPosts/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServiceSubscriptions": {
        "id": "WebRestServiceSubscriptions",
        "path": "WebRestServiceSubscriptions",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceSubscriptions/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServiceSubscriptions/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "ListUserSubscriptionPlansBotsLambda": {
            "id": "ListUserSubscriptionPlansBotsLambda",
            "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListUserSubscriptionPlansBotsLambdaServiceRoleDefaultPolicy383D849F",
                            "roles": [
                              {
                                "Ref": "ListUserSubscriptionPlansBotsLambdaServiceRole905FD5AD"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d1c41a347072b875a4af157d43d6a1e508054a8bdb50f6d9df0ae7bf3ddbabb6.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListUserSubscriptionPlansBotsLambdaServiceRole905FD5AD",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "GetSubscriptionPlanBotLambda": {
            "id": "GetSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetSubscriptionPlanBotLambdaServiceRoleDefaultPolicyF90AFFC1",
                            "roles": [
                              {
                                "Ref": "GetSubscriptionPlanBotLambdaServiceRole8CACD86E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "8973fed70049c586537101b2fbff5501290353f95436d9cafe1965f5c681baea.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetSubscriptionPlanBotLambdaServiceRole8CACD86E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddSubscriptionPlanBotLambda": {
            "id": "AddSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddSubscriptionPlanBotLambdaServiceRoleDefaultPolicy3F136196",
                            "roles": [
                              {
                                "Ref": "AddSubscriptionPlanBotLambdaServiceRoleA805A0E2"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c0dd6ee6ee85fba682c7661507fb240c5296e57fb64b490f3a2589ca20ef71da.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddSubscriptionPlanBotLambdaServiceRoleA805A0E2",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditSubscriptionPlanBotLambda": {
            "id": "EditSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditSubscriptionPlanBotLambdaServiceRoleDefaultPolicy8D2BCF2D",
                            "roles": [
                              {
                                "Ref": "EditSubscriptionPlanBotLambdaServiceRoleDC3310F7"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7d277ac49a06720db9e5baf34ee73785ded0aaf00fd5331ed92ed52566648d64.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditSubscriptionPlanBotLambdaServiceRoleDC3310F7",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteSubscriptionPlanBotLambda": {
            "id": "DeleteSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteSubscriptionPlanBotLambdaServiceRoleDefaultPolicy462A4885",
                            "roles": [
                              {
                                "Ref": "DeleteSubscriptionPlanBotLambdaServiceRoleE604269E"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "8f0f3520e4ccfc6738d78e512182a0b8299b3dfae70e0cb3dc7b23584394b54a.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteSubscriptionPlanBotLambdaServiceRoleE604269E",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListUserSubscriptionPlansChannelsLambda": {
            "id": "ListUserSubscriptionPlansChannelsLambda",
            "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListUserSubscriptionPlansChannelsLambdaServiceRoleDefaultPolicy37540AC7",
                            "roles": [
                              {
                                "Ref": "ListUserSubscriptionPlansChannelsLambdaServiceRole8EC1E72A"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "aeeec8da851a3748e61e19cf7a21b1ea512f79efee2548afd58a12732ccaf811.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListUserSubscriptionPlansChannelsLambdaServiceRole8EC1E72A",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetSubscriptionPlanChannelLambda": {
            "id": "GetSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetSubscriptionPlanChannelLambdaServiceRoleDefaultPolicyBBB15957",
                            "roles": [
                              {
                                "Ref": "GetSubscriptionPlanChannelLambdaServiceRole43AC6238"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a88b7f5af20a3291c997bad9b8cae546d46fee7ccc695908ba60619b007516bd.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetSubscriptionPlanChannelLambdaServiceRole43AC6238",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "AddSubscriptionPlanChannelLambda": {
            "id": "AddSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "AddSubscriptionPlanChannelLambdaServiceRoleDefaultPolicyFC648F7F",
                            "roles": [
                              {
                                "Ref": "AddSubscriptionPlanChannelLambdaServiceRoleC59C2A63"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "776389e839879b6d48c1dea4ce9d6e3ebdf01776f2df7f8e798c627b0a1498cf.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "AddSubscriptionPlanChannelLambdaServiceRoleC59C2A63",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "EditSubscriptionPlanChannelLambda": {
            "id": "EditSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "EditSubscriptionPlanChannelLambdaServiceRoleDefaultPolicy9D1747B4",
                            "roles": [
                              {
                                "Ref": "EditSubscriptionPlanChannelLambdaServiceRole855383B1"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e1402c7a90292f25965aa06503eeabf41ae011ad482bbb6f92f9f6f168361892.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "EditSubscriptionPlanChannelLambdaServiceRole855383B1",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "DeleteSubscriptionPlanChannelLambda": {
            "id": "DeleteSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "DeleteSubscriptionPlanChannelLambdaServiceRoleDefaultPolicyBCFCC22F",
                            "roles": [
                              {
                                "Ref": "DeleteSubscriptionPlanChannelLambdaServiceRole76CC8AD4"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0f5aec4685ba059e6745403d83f3ecdf6e0f7fd3e0b59920149d25659cc065be.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "DeleteSubscriptionPlanChannelLambdaServiceRole76CC8AD4",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "GetMasterManagerMeLambda": {
            "id": "GetMasterManagerMeLambda",
            "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "GetMasterManagerMeLambdaServiceRoleDefaultPolicy6EB74FA0",
                            "roles": [
                              {
                                "Ref": "GetMasterManagerMeLambdaServiceRoleF6A45808"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e7334e589a56b3f703bc5125f76e1391df15147892f37005ca1a3a461acecadd.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "GetMasterManagerMeLambdaServiceRoleF6A45808",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-GetMe-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetMasterManagerMeLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "SubscribeToPaidSubscriptionLambda": {
            "id": "SubscribeToPaidSubscriptionLambda",
            "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SubscribeToPaidSubscriptionLambdaServiceRoleDefaultPolicy7368AF12",
                            "roles": [
                              {
                                "Ref": "SubscribeToPaidSubscriptionLambdaServiceRoleEEDEAC04"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3f8933abebb6cf36780f842bf2f0f5d4e995587520a0e6ec3b3299c7c7350235.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SubscribeToPaidSubscriptionLambdaServiceRoleEEDEAC04",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-SubscribeToPaidSubscription-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "ListMasterManagerSubscriptionsLambda": {
            "id": "ListMasterManagerSubscriptionsLambda",
            "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": "secretsmanager:*",
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "route53:GetHostedZone",
                                    "route53:ChangeResourceRecordSets",
                                    "route53:ListResourceRecordSets",
                                    "route53:ListHostedZones"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                },
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "ListMasterManagerSubscriptionsLambdaServiceRoleDefaultPolicy65B6D11F",
                            "roles": [
                              {
                                "Ref": "ListMasterManagerSubscriptionsLambdaServiceRole8CC70C6B"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ed9d7691d6a5a2d5cdebb93fa1779d488d723665e00cf3dd790207e43d0dc046.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "ListMasterManagerSubscriptionsLambdaServiceRole8CC70C6B",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "d31e5ka976lag2.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-ListSubscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceSubscriptions/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceSubscriptions/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceSubscriptions/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMasterManagerMeLambda8F027305\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMasterManagerMeLambda8F027305\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetMasterManagerMeLambda8F027305\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceSubscriptions/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceSubscriptions/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServiceCRM": {
        "id": "WebRestServiceCRM",
        "path": "WebRestServiceCRM",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceCRM/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServiceCRM/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "crmListMyUsersLambda": {
            "id": "crmListMyUsersLambda",
            "path": "WebRestServiceCRM/crmListMyUsersLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmListMyUsersLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmListMyUsersLambdaServiceRoleDefaultPolicyDCA0174C",
                            "roles": [
                              {
                                "Ref": "crmListMyUsersLambdaServiceRole7C155C75"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ac61e64fc6962855724489b2ab30922668a22cf3a20ae1ba88f71f197f174061.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmListMyUsersLambdaServiceRole7C155C75",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Users-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "crmBotSubscriptionsLambda": {
            "id": "crmBotSubscriptionsLambda",
            "path": "WebRestServiceCRM/crmBotSubscriptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmBotSubscriptionsLambdaServiceRoleDefaultPolicy36D2F199",
                            "roles": [
                              {
                                "Ref": "crmBotSubscriptionsLambdaServiceRoleF5FAF548"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a46c09bcaf0d250f1eefed3322207a391ae45ec6d7ff4957247019c6c0817d58.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmBotSubscriptionsLambdaServiceRoleF5FAF548",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Subscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "crmChannelSubscriptionsLambda": {
            "id": "crmChannelSubscriptionsLambda",
            "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmChannelSubscriptionsLambdaServiceRoleDefaultPolicy42D7246C",
                            "roles": [
                              {
                                "Ref": "crmChannelSubscriptionsLambdaServiceRole64F82202"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4a3e33eae2006008d5b4b8c10f2a8da1879dcd59234d203a897a5a81b1211112.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmChannelSubscriptionsLambdaServiceRole64F82202",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Channel-Subscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "crmUserProfileLambda": {
            "id": "crmUserProfileLambda",
            "path": "WebRestServiceCRM/crmUserProfileLambda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/crmUserProfileLambda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "crmUserProfileLambdaServiceRoleDefaultPolicy89583872",
                            "roles": [
                              {
                                "Ref": "crmUserProfileLambdaServiceRoleA5C0CE1D"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmUserProfileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmUserProfileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "eb86cc8089a1d9b8bc2455febe38ccb70f2f54740924a29efbb33438760ee715.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "crmUserProfileLambdaServiceRoleA5C0CE1D",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-UserProfile-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmUserProfileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmUserProfileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceCRM/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceCRM/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceCRM/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceCRM/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceCRM/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebRestServiceLanding": {
        "id": "WebRestServiceLanding",
        "path": "WebRestServiceLanding",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceLanding/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebRestServiceLanding/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "SetBotLandingPageLamda": {
            "id": "SetBotLandingPageLamda",
            "path": "WebRestServiceLanding/SetBotLandingPageLamda",
            "children": {
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceLanding/SetBotLandingPageLamda/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "dynamodb:BatchGetItem",
                                    "dynamodb:GetRecords",
                                    "dynamodb:GetShardIterator",
                                    "dynamodb:Query",
                                    "dynamodb:GetItem",
                                    "dynamodb:Scan",
                                    "dynamodb:ConditionCheckItem",
                                    "dynamodb:BatchWriteItem",
                                    "dynamodb:PutItem",
                                    "dynamodb:UpdateItem",
                                    "dynamodb:DeleteItem",
                                    "dynamodb:DescribeTable"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": [
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
                                    "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
                                  ]
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "SetBotLandingPageLamdaServiceRoleDefaultPolicyC7F29EB8",
                            "roles": [
                              {
                                "Ref": "SetBotLandingPageLamdaServiceRoleC73FF78C"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3b883e9d8bff02b3fe3248434a51a76e990912b0801b47fdd6dbe06fc218994c.zip"
                    },
                    "role": {
                      "Fn::GetAtt": [
                        "SetBotLandingPageLamdaServiceRoleC73FF78C",
                        "Arn"
                      ]
                    },
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
                        "mainDomainName": "zuzona.com",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "sessions",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
                        "cookieDomain": "zuzona.com",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-Update-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.76.0"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.76.0"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.76.0"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.76.0"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.76.0"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceLanding/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceLanding/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceLanding/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}",
                "path": "WebRestServiceLanding/Exports/Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceLanding/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceLanding/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "WebGatewayService": {
        "id": "WebGatewayService",
        "path": "WebGatewayService",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebGatewayService/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "path": "WebGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:382",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "path": "WebGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:285",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "path": "WebGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:198",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "path": "WebGatewayService/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:23",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "WebGatewayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "importedAuthorizer": {
            "id": "importedAuthorizer",
            "path": "WebGatewayService/importedAuthorizer",
            "children": {
              "WebGatewayServiceWebGatewayServiceLambdaJWTAuthorizerObject084C8D8A:Permissions": {
                "id": "WebGatewayServiceWebGatewayServiceLambdaJWTAuthorizerObject084C8D8A:Permissions",
                "path": "WebGatewayService/importedAuthorizer/WebGatewayServiceWebGatewayServiceLambdaJWTAuthorizerObject084C8D8A:Permissions",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": "arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":execute-api:us-east-1:993738567487:",
                          {
                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                          },
                          "/authorizers/",
                          {
                            "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                          }
                        ]
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
              "version": "2.76.0"
            }
          },
          "WebGatewayService-LambdaJWTAuthorizerObject": {
            "id": "WebGatewayService-LambdaJWTAuthorizerObject",
            "path": "WebGatewayService/WebGatewayService-LambdaJWTAuthorizerObject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebGatewayService/WebGatewayService-LambdaJWTAuthorizerObject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebGatewayService-LambdaJWTAuthorizerObject",
                    "restApiId": {
                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                    },
                    "type": "REQUEST",
                    "authorizerResultTtlInSeconds": 3600,
                    "authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda/invocations",
                    "identitySource": "method.request.header.cookie"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RequestAuthorizer",
              "version": "2.76.0"
            }
          },
          "WebGatewayService-GWAPI": {
            "id": "WebGatewayService-GWAPI",
            "path": "WebGatewayService/WebGatewayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebGatewayService/WebGatewayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebGatewayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.76.0"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebGatewayService/WebGatewayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.76.0"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebGatewayService/WebGatewayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebGatewayServiceGWAPICloudWatchRoleD824E23D",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.76.0"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebGatewayService/WebGatewayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.76.0"
                }
              },
              "DeploymentStage.SecureAPI": {
                "id": "DeploymentStage.SecureAPI",
                "path": "WebGatewayService/WebGatewayService-GWAPI/DeploymentStage.SecureAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/DeploymentStage.SecureAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                        },
                        "deploymentId": {
                          "Ref": "WebGatewayServiceGWAPIDeploymentE2155CA13fc26e1da9c023efbe5bf049f36dfce9"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "SecureAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.76.0"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebGatewayService/WebGatewayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.76.0"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebGatewayService/WebGatewayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            },
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.76.0"
                    }
                  },
                  "Bots": {
                    "id": "Bots",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Bots",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsList8D4CCDE1"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Bots.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Bots.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Bots.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotsLambdaC9B0E149Arn911E2DAF"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/Bots/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsList8D4CCDE1"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotsLambdaC9B0E149Arn911E2DAF"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsAdd6599AC70"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..Bots.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..Bots.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..Bots.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotLambda25A32D8FArn56F0CC80"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/Bots/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsAdd6599AC70"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotLambda25A32D8FArn56F0CC80"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsGet207E9681"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Bots.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Bots.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Bots.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotLambda0C4EA18FArn4F8416C0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/Bots/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsGet207E9681"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotLambda0C4EA18FArn4F8416C0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsEditDAE63EF8"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotLambda82B1C036Arn196628BE"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/Bots/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsEditDAE63EF8"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotLambda82B1C036Arn196628BE"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Register": {
                        "id": "Register",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "Register",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsRegisterC9223483"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.Register": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.Register",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.Register",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttRegisterBotLambda695100A4Arn6ABB23B6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/Bots/Register"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Register/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsRegisterC9223483"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttRegisterBotLambda695100A4Arn6ABB23B6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "UnRegister": {
                        "id": "UnRegister",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "UnRegister",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsUnRegisterC4651642"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.UnRegister": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.UnRegister",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Bots.UnRegister",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttUnRegisterBotLambda0B03CDDEArn070643C9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/Bots/UnRegister"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/UnRegister/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsUnRegisterC4651642"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttUnRegisterBotLambda0B03CDDEArn070643C9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotsD7E8DD30"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsDelete8AE80D9A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..Bots.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..Bots.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..Bots.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotLambda6B24EC61ArnD57686A7"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/Bots/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Bots/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotsDelete8AE80D9A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotLambda6B24EC61ArnD57686A7"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Channels": {
                    "id": "Channels",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Channels",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIChannels12F7959B"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIChannels12F7959B"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsList78F477EE"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Channels.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Channels.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Channels.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListChannelsLambda0D2B8521Arn5D199E53"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/Channels/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsList78F477EE"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListChannelsLambda0D2B8521Arn5D199E53"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIChannels12F7959B"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsGet309F35B5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Channels.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Channels.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..Channels.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetChannelLambdaE5A9F403Arn6617CF58"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/Channels/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsGet309F35B5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetChannelLambdaE5A9F403Arn6617CF58"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIChannels12F7959B"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsEdit1414AFED"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Channels.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Channels.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Channels.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditChannelLambdaAE9A056AArn8C776BEA"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/Channels/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsEdit1414AFED"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditChannelLambdaAE9A056AArn8C776BEA"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIChannels12F7959B"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsDelete26E31256"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..Channels.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..Channels.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..Channels.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteChannelLambda8045FC58Arn562C1279"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/Channels/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Channels/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIChannelsDelete26E31256"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteChannelLambda8045FC58Arn562C1279"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "PaymentOptions": {
                    "id": "PaymentOptions",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "PaymentOptions",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIPaymentOptionsF564665A"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIPaymentOptionsF564665A"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsList41E3CD79"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..PaymentOptions.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..PaymentOptions.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..PaymentOptions.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListPaymentOptionsLambdaACAA5262Arn4EB69170"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/PaymentOptions/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsList41E3CD79"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListPaymentOptionsLambdaACAA5262Arn4EB69170"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIPaymentOptionsF564665A"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsGet1240FDED"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..PaymentOptions.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..PaymentOptions.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..PaymentOptions.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetPaymentOptionLambdaD6DBF61AArn18D20D5D"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/PaymentOptions/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsGet1240FDED"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetPaymentOptionLambdaD6DBF61AArn18D20D5D"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIPaymentOptionsF564665A"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsAdd899706CE"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..PaymentOptions.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..PaymentOptions.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..PaymentOptions.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddPaymentOptionLambdaBFF77B7FArn872A1AA4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/PaymentOptions/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsAdd899706CE"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddPaymentOptionLambdaBFF77B7FArn872A1AA4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIPaymentOptionsF564665A"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsEdit25A6B212"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..PaymentOptions.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..PaymentOptions.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..PaymentOptions.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditPaymentOptionLambda398037A2Arn5595B7A0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/PaymentOptions/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsEdit25A6B212"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditPaymentOptionLambda398037A2Arn5595B7A0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIPaymentOptionsF564665A"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsDelete975A7DCF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..PaymentOptions.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..PaymentOptions.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..PaymentOptions.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeletePaymentOptionLambdaEC66351CArn3F9622FF"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/PaymentOptions/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIPaymentOptionsDelete975A7DCF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeletePaymentOptionLambdaEC66351CArn3F9622FF"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "MessageFiles": {
                    "id": "MessageFiles",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "MessageFiles",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIMessageFiles47C5F93A"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMessageFiles47C5F93A"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesList7C41EBB9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MessageFiles.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MessageFiles.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MessageFiles.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListMessageFilesLambdaA8A6DBEAArn40DDE989"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/MessageFiles/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesList7C41EBB9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListMessageFilesLambdaA8A6DBEAArn40DDE989"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMessageFiles47C5F93A"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesGetB9517FE0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MessageFiles.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MessageFiles.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MessageFiles.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetMessageFileLambdaDF57EDB2ArnC2C5E879"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/MessageFiles/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesGetB9517FE0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetMessageFileLambdaDF57EDB2ArnC2C5E879"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMessageFiles47C5F93A"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesAdd97CC4B61"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..MessageFiles.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..MessageFiles.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..MessageFiles.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttAddMessageFileLambda2C734180Arn7BFFE573"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/MessageFiles/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesAdd97CC4B61"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttAddMessageFileLambda2C734180Arn7BFFE573"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMessageFiles47C5F93A"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesEditBCE1897B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..MessageFiles.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..MessageFiles.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..MessageFiles.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditMessageFileLambda395F8673Arn2657FAF3"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/MessageFiles/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesEditBCE1897B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditMessageFileLambda395F8673Arn2657FAF3"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMessageFiles47C5F93A"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesDeleteC62A7EAC"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..MessageFiles.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..MessageFiles.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..MessageFiles.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteMessageFileLambdaE4E88A6AArnD4D92619"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/MessageFiles/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MessageFiles/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMessageFilesDeleteC62A7EAC"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteMessageFileLambdaE4E88A6AArnD4D92619"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "TelegramFiles": {
                    "id": "TelegramFiles",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "TelegramFiles",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPITelegramFiles93A2E33C"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPITelegramFiles93A2E33C"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesList98A19013"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..TelegramFiles.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..TelegramFiles.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..TelegramFiles.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListTelegramFilesLambda11E43599ArnC7D2F951"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/TelegramFiles/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesList98A19013"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListTelegramFilesLambda11E43599ArnC7D2F951"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPITelegramFiles93A2E33C"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesGetDE5497E6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..TelegramFiles.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..TelegramFiles.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..TelegramFiles.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetTelegramFileLambda0285A5D8Arn7A92FC36"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/TelegramFiles/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesGetDE5497E6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetTelegramFileLambda0285A5D8Arn7A92FC36"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPITelegramFiles93A2E33C"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesEditA00D2312"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..TelegramFiles.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..TelegramFiles.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..TelegramFiles.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditTelegramFileLambda541FB43BArn84EC7D28"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/TelegramFiles/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesEditA00D2312"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditTelegramFileLambda541FB43BArn84EC7D28"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPITelegramFiles93A2E33C"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesDeleteA93BA9D7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..TelegramFiles.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..TelegramFiles.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..TelegramFiles.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteTelegramFileLambdaF1882CC1Arn9F939F63"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/TelegramFiles/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPITelegramFilesDeleteA93BA9D7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteTelegramFileLambdaF1882CC1Arn9F939F63"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "PreSignedUrls": {
                    "id": "PreSignedUrls",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "PreSignedUrls",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIPreSignedUrls78519E3B"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "PUT": {
                        "id": "PUT",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls/PUT",
                        "children": {
                          "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..PreSignedUrls": {
                            "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..PreSignedUrls",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..PreSignedUrls",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetGetPresignedUrlLambda43F48E6FArn38B1BA68"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                      },
                                      "/PUT/PreSignedUrls"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/PreSignedUrls/PUT/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "PUT",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIPreSignedUrls78519E3B"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetGetPresignedUrlLambda43F48E6FArn38B1BA68"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "SendTestMessage": {
                    "id": "SendTestMessage",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "SendTestMessage",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPISendTestMessage5971A45B"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "SendTestMessage": {
                        "id": "SendTestMessage",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPISendTestMessage5971A45B"
                                },
                                "pathPart": "SendTestMessage",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPISendTestMessage4AED8E2B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..SendTestMessage.SendTestMessage": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..SendTestMessage.SendTestMessage",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..SendTestMessage.SendTestMessage",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestMessageLambdaD3B92DD3Arn2DACEF4C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/SendTestMessage/SendTestMessage"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPISendTestMessage4AED8E2B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestMessageLambdaD3B92DD3Arn2DACEF4C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "SendTestFile": {
                        "id": "SendTestFile",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPISendTestMessage5971A45B"
                                },
                                "pathPart": "SendTestFile",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPISendTestMessageSendTestFile0FDA91AD"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..SendTestMessage.SendTestFile": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..SendTestMessage.SendTestFile",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..SendTestMessage.SendTestFile",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestFileLambda65A31CEBArn8F991A6C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/SendTestMessage/SendTestFile"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPISendTestMessageSendTestFile0FDA91AD"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestFileLambda65A31CEBArn8F991A6C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "BotPayments": {
                    "id": "BotPayments",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "BotPayments",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIBotPayments644BB1A7"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIBotPayments644BB1A7"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotPaymentsListCFA9DA54"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..BotPayments.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..BotPayments.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..BotPayments.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListBotPaymentsLambda8AE1421EArn7D313D43"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/BotPayments/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/BotPayments/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIBotPaymentsListCFA9DA54"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListBotPaymentsLambda8AE1421EArn7D313D43"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "ContentPlanPosts": {
                    "id": "ContentPlanPosts",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "ContentPlanPosts",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlanPostsA390C58A"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlanPostsA390C58A"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsList0F3AEB4D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlanPosts.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlanPosts.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlanPosts.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlanPostsLambda80CD292FArn1C08CB12"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/ContentPlanPosts/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsList0F3AEB4D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlanPostsLambda80CD292FArn1C08CB12"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlanPostsA390C58A"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsGet1929080C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlanPosts.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlanPosts.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlanPosts.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanPostLambdaA8AFC433Arn0B42A341"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/ContentPlanPosts/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsGet1929080C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanPostLambdaA8AFC433Arn0B42A341"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlanPostsA390C58A"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsAdd92D283F3"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..ContentPlanPosts.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..ContentPlanPosts.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..ContentPlanPosts.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanPostLambda6114356CArn3F1CC64B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/ContentPlanPosts/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsAdd92D283F3"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanPostLambda6114356CArn3F1CC64B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlanPostsA390C58A"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsEditFD571FDD"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..ContentPlanPosts.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..ContentPlanPosts.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..ContentPlanPosts.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanPostLambdaB4D253CEArnF266F911"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/ContentPlanPosts/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsEditFD571FDD"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanPostLambdaB4D253CEArnF266F911"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlanPostsA390C58A"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsDelete78BF246E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..ContentPlanPosts.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..ContentPlanPosts.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..ContentPlanPosts.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanPostLambda9CD840D1Arn94C3F856"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/ContentPlanPosts/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlanPostsDelete78BF246E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanPostLambda9CD840D1Arn94C3F856"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "ContentPlans": {
                    "id": "ContentPlans",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "ContentPlans",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlans6315A371"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlans6315A371"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansList8A07E53F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlans.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlans.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlans.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlansLambda95AC08D7Arn9EA4958E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/ContentPlans/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansList8A07E53F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlansLambda95AC08D7Arn9EA4958E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlans6315A371"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansGet774EE0FE"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlans.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlans.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..ContentPlans.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanLambda45DE78B9ArnAA90AFA2"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/ContentPlans/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansGet774EE0FE"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanLambda45DE78B9ArnAA90AFA2"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlans6315A371"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansAddC10E6A88"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..ContentPlans.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..ContentPlans.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..ContentPlans.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanLambda2A50CDCCArn9274FE09"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/ContentPlans/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansAddC10E6A88"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanLambda2A50CDCCArn9274FE09"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlans6315A371"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansEdit5DABB293"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..ContentPlans.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..ContentPlans.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..ContentPlans.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanLambdaA1D9BCEDArn67D08860"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/ContentPlans/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansEdit5DABB293"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanLambdaA1D9BCEDArn67D08860"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIContentPlans6315A371"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansDeleteC2F59F80"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..ContentPlans.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..ContentPlans.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..ContentPlans.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanLambda37ED3EAEArn7FB4BD17"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/ContentPlans/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIContentPlansDeleteC2F59F80"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanLambda37ED3EAEArn7FB4BD17"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "UserSubscriptionPlansBot": {
                    "id": "UserSubscriptionPlansBot",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "UserSubscriptionPlansBot",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBot515C8768"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBot515C8768"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotListAD8FAD28"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansBot.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansBot.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansBot.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansBotsLambda8ABC0BCFArn71867F26"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/UserSubscriptionPlansBot/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotListAD8FAD28"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansBotsLambda8ABC0BCFArn71867F26"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBot515C8768"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotGetE7B4549F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansBot.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansBot.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansBot.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanBotLambdaC174835FArn2A3E58D5"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/UserSubscriptionPlansBot/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotGetE7B4549F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanBotLambdaC174835FArn2A3E58D5"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBot515C8768"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotAdd763363C5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..UserSubscriptionPlansBot.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..UserSubscriptionPlansBot.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..UserSubscriptionPlansBot.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanBotLambdaFB7D5F07Arn87E30106"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/UserSubscriptionPlansBot/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotAdd763363C5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanBotLambdaFB7D5F07Arn87E30106"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBot515C8768"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotEditD6E85DAC"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..UserSubscriptionPlansBot.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..UserSubscriptionPlansBot.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..UserSubscriptionPlansBot.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanBotLambdaE9CE979CArn06838E5E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/UserSubscriptionPlansBot/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotEditD6E85DAC"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanBotLambdaE9CE979CArn06838E5E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBot515C8768"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotDelete7867EF49"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..UserSubscriptionPlansBot.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..UserSubscriptionPlansBot.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..UserSubscriptionPlansBot.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanBotLambda0DF8E1DAArnEFE65144"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/UserSubscriptionPlansBot/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansBotDelete7867EF49"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanBotLambda0DF8E1DAArnEFE65144"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "UserSubscriptionPlansChannel": {
                    "id": "UserSubscriptionPlansChannel",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "UserSubscriptionPlansChannel",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannel1F190B73"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannel1F190B73"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelList6D787FB9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansChannel.List": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansChannel.List",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansChannel.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansChannelsLambda53E507FCArn6B90CC61"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/UserSubscriptionPlansChannel/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelList6D787FB9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansChannelsLambda53E507FCArn6B90CC61"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannel1F190B73"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelGetCA000D68"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansChannel.Get": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansChannel.Get",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..UserSubscriptionPlansChannel.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanChannelLambdaECD513DEArn3491567A"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/UserSubscriptionPlansChannel/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelGetCA000D68"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanChannelLambdaECD513DEArn3491567A"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannel1F190B73"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelAdd8D982F24"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..UserSubscriptionPlansChannel.Add": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..UserSubscriptionPlansChannel.Add",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.POST..UserSubscriptionPlansChannel.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanChannelLambda6DD69303ArnB6102E9B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/POST/UserSubscriptionPlansChannel/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelAdd8D982F24"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanChannelLambda6DD69303ArnB6102E9B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannel1F190B73"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelEdit4F68C8CB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..UserSubscriptionPlansChannel.Edit": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..UserSubscriptionPlansChannel.Edit",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..UserSubscriptionPlansChannel.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanChannelLambdaEFC3485DArnD5A6B091"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/UserSubscriptionPlansChannel/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelEdit4F68C8CB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanChannelLambdaEFC3485DArnD5A6B091"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannel1F190B73"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelDelete341562FF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..UserSubscriptionPlansChannel.Delete": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..UserSubscriptionPlansChannel.Delete",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.DELETE..UserSubscriptionPlansChannel.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanChannelLambdaE97A9809Arn861C66D6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/DELETE/UserSubscriptionPlansChannel/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIUserSubscriptionPlansChannelDelete341562FF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanChannelLambdaE97A9809Arn861C66D6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "MasterManager": {
                    "id": "MasterManager",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "MasterManager",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPIMasterManagerACE8F95D"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "GetMe": {
                        "id": "GetMe",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMasterManagerACE8F95D"
                                },
                                "pathPart": "GetMe",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMasterManagerGetMeEC303C8B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MasterManager.GetMe": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MasterManager.GetMe",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MasterManager.GetMe",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetMasterManagerMeLambda8F027305ArnBCFA3039"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/MasterManager/GetMe"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/GetMe/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMasterManagerGetMeEC303C8B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetMasterManagerMeLambda8F027305ArnBCFA3039"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "SubscribeToPaidSubscription": {
                        "id": "SubscribeToPaidSubscription",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMasterManagerACE8F95D"
                                },
                                "pathPart": "SubscribeToPaidSubscription",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMasterManagerSubscribeToPaidSubscriptionC1771235"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..MasterManager.SubscribeToPaidSubscription": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..MasterManager.SubscribeToPaidSubscription",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..MasterManager.SubscribeToPaidSubscription",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttSubscribeToPaidSubscriptionLambdaF0BF1717Arn1C0B4AD6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/PUT/MasterManager/SubscribeToPaidSubscription"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMasterManagerSubscribeToPaidSubscriptionC1771235"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttSubscribeToPaidSubscriptionLambdaF0BF1717Arn1C0B4AD6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "ListMySubscriptions": {
                        "id": "ListMySubscriptions",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPIMasterManagerACE8F95D"
                                },
                                "pathPart": "ListMySubscriptions",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMasterManagerListMySubscriptionsAD54563A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MasterManager.ListMySubscriptions": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MasterManager.ListMySubscriptions",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..MasterManager.ListMySubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListMasterManagerSubscriptionsLambdaCEE81692Arn6EBFB4B0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/MasterManager/ListMySubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPIMasterManagerListMySubscriptionsAD54563A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListMasterManagerSubscriptionsLambdaCEE81692Arn6EBFB4B0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "CRM": {
                    "id": "CRM",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "CRM",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPICRM8F24CF79"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "ListMyUsers": {
                        "id": "ListMyUsers",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPICRM8F24CF79"
                                },
                                "pathPart": "ListMyUsers",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMListMyUsers4327B0B5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyUsers": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyUsers",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyUsers",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmListMyUsersLambda43CD8954Arn6164C643"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/CRM/ListMyUsers"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyUsers/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMListMyUsers4327B0B5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmListMyUsersLambda43CD8954Arn6164C643"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "ListMyBotSubscriptions": {
                        "id": "ListMyBotSubscriptions",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPICRM8F24CF79"
                                },
                                "pathPart": "ListMyBotSubscriptions",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMListMyBotSubscriptions4099C6D5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyBotSubscriptions": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyBotSubscriptions",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyBotSubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsLambdaC994C5ACArnC5D0423C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/CRM/ListMyBotSubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMListMyBotSubscriptions4099C6D5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsLambdaC994C5ACArnC5D0423C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "ListMyChannelsSubscriptions": {
                        "id": "ListMyChannelsSubscriptions",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPICRM8F24CF79"
                                },
                                "pathPart": "ListMyChannelsSubscriptions",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMListMyChannelsSubscriptions9BDB897D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyChannelsSubscriptions": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyChannelsSubscriptions",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.ListMyChannelsSubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsLambdaF3058988Arn985ED147"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/CRM/ListMyChannelsSubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMListMyChannelsSubscriptions9BDB897D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsLambdaF3058988Arn985ED147"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      },
                      "UserProfile": {
                        "id": "UserProfile",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebGatewayServiceGWAPICRM8F24CF79"
                                },
                                "pathPart": "UserProfile",
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.76.0"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMUserProfileC286CF69"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile/GET",
                            "children": {
                              "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.UserProfile": {
                                "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.UserProfile",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile/GET/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.GET..CRM.UserProfile",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmUserProfileLambdaC702497FArn2EBB0E71"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                          },
                                          "/GET/CRM/UserProfile"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.76.0"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebGatewayService/WebGatewayService-GWAPI/Default/CRM/UserProfile/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebGatewayServiceGWAPICRMUserProfileC286CF69"
                                    },
                                    "restApiId": {
                                      "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmUserProfileLambdaC702497FArn2EBB0E71"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.76.0"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  },
                  "Landing": {
                    "id": "Landing",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebGatewayServiceGWAPI5CE6EB40",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Landing",
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.76.0"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPILandingAF0888DB"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      },
                      "PUT": {
                        "id": "PUT",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing/PUT",
                        "children": {
                          "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Landing": {
                            "id": "ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Landing",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing/PUT/ApiPermission.WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0.PUT..Landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttSetBotLandingPageLamda13B7B859Arn11C00CF1"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                                      },
                                      "/PUT/Landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.76.0"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebGatewayService/WebGatewayService-GWAPI/Default/Landing/PUT/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "PUT",
                                "resourceId": {
                                  "Ref": "WebGatewayServiceGWAPILandingAF0888DB"
                                },
                                "restApiId": {
                                  "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebGatewayServiceLambdaJWTAuthorizerObjectC83E4197"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttSetBotLandingPageLamda13B7B859Arn11C00CF1"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.76.0"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.76.0"
                }
              },
              "WebGatewayService-GWAPI-UsagePlan": {
                "id": "WebGatewayService-GWAPI-UsagePlan",
                "path": "WebGatewayService/WebGatewayService-GWAPI/WebGatewayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/WebGatewayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            },
                            "stage": {
                              "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                            },
                            "throttle": {}
                          }
                        ],
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "WebGatewayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.76.0"
                }
              },
              "WebGatewayService-GW-SubDomain": {
                "id": "WebGatewayService-GW-SubDomain",
                "path": "WebGatewayService/WebGatewayService-GWAPI/WebGatewayService-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/WebGatewayService-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "secure-api.zuzona.com",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.76.0"
                    }
                  },
                  "Map:--=>WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0": {
                    "id": "Map:--=>WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0",
                    "path": "WebGatewayService/WebGatewayService-GWAPI/WebGatewayService-GW-SubDomain/Map:--=>WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebGatewayService/WebGatewayService-GWAPI/WebGatewayService-GW-SubDomain/Map:--=>WebGatewayServiceWebGatewayServiceGWAPI7B8B82B0/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebGatewayServiceGWAPIWebGatewayServiceGWSubDomain6A3C0FC0"
                            },
                            "restApiId": {
                              "Ref": "WebGatewayServiceGWAPI5CE6EB40"
                            },
                            "stage": {
                              "Ref": "WebGatewayServiceGWAPIDeploymentStageSecureAPICA02E550"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.76.0"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.76.0"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebGatewayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.76.0"
            }
          },
          "WebGatewayService-ARecord": {
            "id": "WebGatewayService-ARecord",
            "path": "WebGatewayService/WebGatewayService-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebGatewayService/WebGatewayService-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "secure-api.zuzona.com.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebGatewayServiceGWAPIWebGatewayServiceGWSubDomain6A3C0FC0",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebGatewayServiceGWAPIWebGatewayServiceGWSubDomain6A3C0FC0",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z08669732ES7CY5LRF03T"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.76.0"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebGatewayService/WebGatewayService-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebGatewayService/WebGatewayService-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.76.0"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.76.0"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.76.0"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.76.0"
            }
          },
          "WebGatewayService-APIGW-SecureAPI": {
            "id": "WebGatewayService-APIGW-SecureAPI",
            "path": "WebGatewayService/WebGatewayService-APIGW-SecureAPI",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.76.0"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebGatewayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebGatewayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.76.0"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.7"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebGatewayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.76.0"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebGatewayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.76.0"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.76.0"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.2.7"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.76.0"
    }
  }
}