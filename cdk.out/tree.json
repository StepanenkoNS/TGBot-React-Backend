{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "DeploymentHelperStack": {
        "id": "DeploymentHelperStack",
        "path": "DeploymentHelperStack",
        "children": {
          "lambdaRole-imported": {
            "id": "lambdaRole-imported",
            "path": "DeploymentHelperStack/lambdaRole-imported",
            "children": {
              "Policy": {
                "id": "Policy",
                "path": "DeploymentHelperStack/lambdaRole-imported/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "DeploymentHelperStack/lambdaRole-imported/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStage"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStage-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:notifications"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:notifications-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:CascadeDeleteQueue.fifo"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:CascadeDeleteQueue-DLQ.fifo"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:toggleUserBlockedStatus.fifo"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:toggleUserBlockedStatus-DLQ.fifo"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-AddPost"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-AddPost-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-DeletePost"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-DeletePost-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-SubscriptionPlan"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-SubscriptionPlan-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-ContentPlan-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-ContentPlan"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ExpireSubscriptionQueue"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ExpireSubscriptionQueue-DLQ"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ContentPlanToFromSubscription"
                            },
                            {
                              "Action": [
                                "sqs:ReceiveMessage",
                                "sqs:ChangeMessageVisibility",
                                "sqs:GetQueueUrl",
                                "sqs:DeleteMessage",
                                "sqs:GetQueueAttributes"
                              ],
                              "Effect": "Allow",
                              "Resource": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ContentPlanToFromSubscription-DLQ"
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "lambdaRoleimportedPolicy2C716ED2",
                        "roles": [
                          "LambdaBasicRole"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Policy",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
            "path": "DeploymentHelperStack/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
            "path": "DeploymentHelperStack/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74": {
            "id": "importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74",
            "path": "DeploymentHelperStack/importedarn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "DeploymentHelperStack/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "DeploymentHelperStack/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "DeploymentHelperStack/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "DeploymentHelperStack/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebTokenAndGateWayService": {
        "id": "WebTokenAndGateWayService",
        "path": "WebTokenAndGateWayService",
        "children": {
          "Zone": {
            "id": "Zone",
            "path": "WebTokenAndGateWayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebTokenAndGateWayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "TokenServiceLambda": {
            "id": "TokenServiceLambda",
            "path": "WebTokenAndGateWayService/TokenServiceLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebTokenAndGateWayService/TokenServiceLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebTokenAndGateWayService/TokenServiceLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebTokenAndGateWayService/TokenServiceLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebTokenAndGateWayService/TokenServiceLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9576bb8c44b29373c3090c50b1ecc97400b3ff920b9cc90085c8a5c1c712ff53.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "accessTokenExpirationMinutes": "5",
                        "refreshTokenExpirationDays": "365",
                        "AllowUsers": "",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "WebTokenAndGateWayService-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebTokenAndGateWayService/TokenServiceLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/TokenServiceLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebTokenAndGateWayService/TokenServiceLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebTokenAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "WebTokenAndGateWayService-GWAPI": {
            "id": "WebTokenAndGateWayService-GWAPI",
            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebTokenAndGateWayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.83.1"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebTokenAndGateWayServiceGWAPICloudWatchRoleF52BC7B5",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.83.1"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.83.1"
                }
              },
              "DeploymentStage.GetToken": {
                "id": "DeploymentStage.GetToken",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/DeploymentStage.GetToken",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/DeploymentStage.GetToken/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                        },
                        "deploymentId": {
                          "Ref": "WebTokenAndGateWayServiceGWAPIDeploymentDFC1B6DDd333c5319d82c92aa7d77e632f613db6"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "GetToken"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.83.1"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebTokenAndGateWayServiceGWAPID9371ADF",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                            },
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.83.1"
                    }
                  },
                  "me": {
                    "id": "me",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenAndGateWayServiceGWAPID9371ADF",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "me",
                            "restApiId": {
                              "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPImeAD54E665"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/GET",
                        "children": {
                          "ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..me": {
                            "id": "ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..me",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/GET/ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..me",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPIDeploymentStageGetToken87CD786E"
                                      },
                                      "/GET/me"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..me": {
                            "id": "ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..me",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/GET/ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..me",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                      },
                                      "/test-invoke-stage/GET/me"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/me/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPImeAD54E665"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "getToken": {
                    "id": "getToken",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenAndGateWayServiceGWAPID9371ADF",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "getToken",
                            "restApiId": {
                              "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPIgetTokenD0F1677C"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "POST": {
                        "id": "POST",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/POST",
                        "children": {
                          "ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.POST..getToken": {
                            "id": "ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.POST..getToken",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/POST/ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.POST..getToken",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPIDeploymentStageGetToken87CD786E"
                                      },
                                      "/POST/getToken"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.POST..getToken": {
                            "id": "ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.POST..getToken",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/POST/ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.POST..getToken",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                      },
                                      "/test-invoke-stage/POST/getToken"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/getToken/POST/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "POST",
                                "resourceId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPIgetTokenD0F1677C"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "logOut": {
                    "id": "logOut",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebTokenAndGateWayServiceGWAPID9371ADF",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "logOut",
                            "restApiId": {
                              "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPIlogOut85FCCC0C"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/GET",
                        "children": {
                          "ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..logOut": {
                            "id": "ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..logOut",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/GET/ApiPermission.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..logOut",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPIDeploymentStageGetToken87CD786E"
                                      },
                                      "/GET/logOut"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..logOut": {
                            "id": "ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..logOut",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/GET/ApiPermission.Test.WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B.GET..logOut",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "TokenServiceLambdaA04CF86C",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                      },
                                      "/test-invoke-stage/GET/logOut"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/Default/logOut/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPIlogOut85FCCC0C"
                                },
                                "restApiId": {
                                  "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "TokenServiceLambdaA04CF86C",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.83.1"
                }
              },
              "WebTokenAndGateWayService-GWAPI-UsagePlan": {
                "id": "WebTokenAndGateWayService-GWAPI-UsagePlan",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/WebTokenAndGateWayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/WebTokenAndGateWayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                            },
                            "stage": {
                              "Ref": "WebTokenAndGateWayServiceGWAPIDeploymentStageGetToken87CD786E"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 2,
                          "rateLimit": 100
                        },
                        "usagePlanName": "WebTokenAndGateWayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.83.1"
                }
              },
              "WebTokenAndGateWayServiceGW-SubDomain": {
                "id": "WebTokenAndGateWayServiceGW-SubDomain",
                "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/WebTokenAndGateWayServiceGW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/WebTokenAndGateWayServiceGW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "auth.pompona.net",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/d6dd0f38-40b6-45ba-a14d-e23f47f6dcf0"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.83.1"
                    }
                  },
                  "Map:--=>WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B": {
                    "id": "Map:--=>WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B",
                    "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/WebTokenAndGateWayServiceGW-SubDomain/Map:--=>WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI/WebTokenAndGateWayServiceGW-SubDomain/Map:--=>WebTokenAndGateWayServiceWebTokenAndGateWayServiceGWAPI6325B27B/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebTokenAndGateWayServiceGWAPIWebTokenAndGateWayServiceGWSubDomain96174157"
                            },
                            "restApiId": {
                              "Ref": "WebTokenAndGateWayServiceGWAPID9371ADF"
                            },
                            "stage": {
                              "Ref": "WebTokenAndGateWayServiceGWAPIDeploymentStageGetToken87CD786E"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.LambdaRestApi",
              "version": "2.83.1"
            }
          },
          "TokenServiceAPIGWARecord": {
            "id": "TokenServiceAPIGWARecord",
            "path": "WebTokenAndGateWayService/TokenServiceAPIGWARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebTokenAndGateWayService/TokenServiceAPIGWARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "auth.pompona.net.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebTokenAndGateWayServiceGWAPIWebTokenAndGateWayServiceGWSubDomain96174157",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebTokenAndGateWayServiceGWAPIWebTokenAndGateWayServiceGWSubDomain96174157",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z03470091PWKKIZTYD5L4"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.83.1"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebTokenAndGateWayService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebTokenAndGateWayService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.83.1"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebTokenAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebTokenAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.83.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebTokenAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebTokenAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.83.1"
            }
          },
          "WebTokenAndGateWayService-GWAPI-tokenApi": {
            "id": "WebTokenAndGateWayService-GWAPI-tokenApi",
            "path": "WebTokenAndGateWayService/WebTokenAndGateWayService-GWAPI-tokenApi",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebTokenAndGateWayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebTokenAndGateWayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebTokenAndGateWayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebTokenAndGateWayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebPublicPagesAndGateWayService": {
        "id": "WebPublicPagesAndGateWayService",
        "path": "WebPublicPagesAndGateWayService",
        "children": {
          "imported-webTable": {
            "id": "imported-webTable",
            "path": "WebPublicPagesAndGateWayService/imported-webTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "Zone": {
            "id": "Zone",
            "path": "WebPublicPagesAndGateWayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebPublicPagesAndGateWayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "WebPublicPagesAndGateWayService-GWAPI": {
            "id": "WebPublicPagesAndGateWayService-GWAPI",
            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebPublicPagesAndGateWayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.83.1"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebPublicPagesAndGateWayServiceGWAPICloudWatchRole56C9C463",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.83.1"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.83.1"
                }
              },
              "DeploymentStage.pagesAPI": {
                "id": "DeploymentStage.pagesAPI",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/DeploymentStage.pagesAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/DeploymentStage.pagesAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                        },
                        "deploymentId": {
                          "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeployment2631A90900e7fd5d6b05c1342e263800fafb3a40"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "pagesAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.83.1"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesAndGateWayServiceGWAPIA82D268C",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                            },
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.83.1"
                    }
                  },
                  "help-center": {
                    "id": "help-center",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesAndGateWayServiceGWAPIA82D268C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "help-center",
                            "restApiId": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenter39F05D12"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "landing": {
                        "id": "landing",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenter39F05D12"
                                },
                                "pathPart": "landing",
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenterlanding69BBC6AC"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.landing": {
                                "id": "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.landing",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/GET/ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.landing",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCLandingLambda7205BD53",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                                          },
                                          "/GET/help-center/landing"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.landing": {
                                "id": "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.landing",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/GET/ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.landing",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCLandingLambda7205BD53",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                          },
                                          "/test-invoke-stage/GET/help-center/landing"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/landing/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenterlanding69BBC6AC"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCLandingLambda7205BD53",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "subcategory": {
                        "id": "subcategory",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenter39F05D12"
                                },
                                "pathPart": "subcategory",
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcentersubcategory04865793"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.subcategory": {
                                "id": "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.subcategory",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/GET/ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.subcategory",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCsubcategoryLambdaDF64526C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                                          },
                                          "/GET/help-center/subcategory"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.subcategory": {
                                "id": "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.subcategory",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/GET/ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.subcategory",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCsubcategoryLambdaDF64526C",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                          },
                                          "/test-invoke-stage/GET/help-center/subcategory"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/subcategory/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcentersubcategory04865793"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCsubcategoryLambdaDF64526C",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "article": {
                        "id": "article",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenter39F05D12"
                                },
                                "pathPart": "article",
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenterarticleCA5E949E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/GET",
                            "children": {
                              "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.article": {
                                "id": "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.article",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/GET/ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.article",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCArticleLambda3857DD83",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                                          },
                                          "/GET/help-center/article"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.article": {
                                "id": "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.article",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/GET/ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..help-center.article",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "GetHCArticleLambda3857DD83",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                          },
                                          "/test-invoke-stage/GET/help-center/article"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/help-center/article/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIhelpcenterarticleCA5E949E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "GetHCArticleLambda3857DD83",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "content": {
                    "id": "content",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesAndGateWayServiceGWAPIA82D268C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "content",
                            "restApiId": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIcontent9D87BB3F"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/GET",
                        "children": {
                          "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..content": {
                            "id": "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..content",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/GET/ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..content",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetWebPageContentLambdaA5F8923E",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                                      },
                                      "/GET/content"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..content": {
                            "id": "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..content",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/GET/ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..content",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetWebPageContentLambdaA5F8923E",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                      },
                                      "/test-invoke-stage/GET/content"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/content/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIcontent9D87BB3F"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "GetWebPageContentLambdaA5F8923E",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "bot-landing": {
                    "id": "bot-landing",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebPublicPagesAndGateWayServiceGWAPIA82D268C",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "bot-landing",
                            "restApiId": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIbotlanding522743B8"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/GET",
                        "children": {
                          "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..bot-landing": {
                            "id": "ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..bot-landing",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/GET/ApiPermission.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..bot-landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetBotLandingPublic2B228A99",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                                      },
                                      "/GET/bot-landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..bot-landing": {
                            "id": "ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..bot-landing",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/GET/ApiPermission.Test.WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B.GET..bot-landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::GetAtt": [
                                    "GetBotLandingPublic2B228A99",
                                    "Arn"
                                  ]
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                      },
                                      "/test-invoke-stage/GET/bot-landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/Default/bot-landing/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIbotlanding522743B8"
                                },
                                "restApiId": {
                                  "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                                },
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::GetAtt": [
                                            "GetBotLandingPublic2B228A99",
                                            "Arn"
                                          ]
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.83.1"
                }
              },
              "WebPublicPagesAndGateWayService-GWAPI-UsagePlan": {
                "id": "WebPublicPagesAndGateWayService-GWAPI-UsagePlan",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/WebPublicPagesAndGateWayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/WebPublicPagesAndGateWayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                            },
                            "stage": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "WebPublicPagesAndGateWayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.83.1"
                }
              },
              "WebPublicPagesAndGateWayService-GW-SubDomain": {
                "id": "WebPublicPagesAndGateWayService-GW-SubDomain",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/WebPublicPagesAndGateWayService-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/WebPublicPagesAndGateWayService-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "public-pages.pompona.net",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/d6dd0f38-40b6-45ba-a14d-e23f47f6dcf0"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.83.1"
                    }
                  },
                  "Map:--=>WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B": {
                    "id": "Map:--=>WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/WebPublicPagesAndGateWayService-GW-SubDomain/Map:--=>WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-GWAPI/WebPublicPagesAndGateWayService-GW-SubDomain/Map:--=>WebPublicPagesAndGateWayServiceWebPublicPagesAndGateWayServiceGWAPIFD4A1B6B/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIWebPublicPagesAndGateWayServiceGWSubDomain7C1DBCFC"
                            },
                            "restApiId": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIA82D268C"
                            },
                            "stage": {
                              "Ref": "WebPublicPagesAndGateWayServiceGWAPIDeploymentStagepagesAPICE4DC7DB"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.83.1"
            }
          },
          "WebPublicPagesAndGateWayService-ARecord": {
            "id": "WebPublicPagesAndGateWayService-ARecord",
            "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "public-pages.pompona.net.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebPublicPagesAndGateWayServiceGWAPIWebPublicPagesAndGateWayServiceGWSubDomain7C1DBCFC",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebPublicPagesAndGateWayServiceGWAPIWebPublicPagesAndGateWayServiceGWSubDomain7C1DBCFC",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z03470091PWKKIZTYD5L4"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.83.1"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebPublicPagesAndGateWayService/WebPublicPagesAndGateWayService-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.83.1"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebPublicPagesAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebPublicPagesAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.83.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebPublicPagesAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebPublicPagesAndGateWayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.83.1"
            }
          },
          "GetHCLandingLambda": {
            "id": "GetHCLandingLambda",
            "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d7dddd6426e48480c7fae39290f3e5e4aa7436cb5c9e08426d36d672b578f529.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Landing-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPagesAndGateWayService/GetHCLandingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetHCsubcategoryLambda": {
            "id": "GetHCsubcategoryLambda",
            "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "23032067e870e914236e40197bc9fdfb94bd584095f4390a02ca76f9eade670a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Subcategory-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPagesAndGateWayService/GetHCsubcategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetHCArticleLambda": {
            "id": "GetHCArticleLambda",
            "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a36621ef90ccf06e892afbb29069a62a789787067a52d4df6038601381da2b43.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-HelpCenter-Article-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPagesAndGateWayService/GetHCArticleLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetWebPageContentLambda": {
            "id": "GetWebPageContentLambda",
            "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "10f4cde24e846c81aee04274d6b7715c312929b73d91ebc98b64e061ccf638b1.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "webTable": "web",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Content-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPagesAndGateWayService/GetWebPageContentLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetBotLandingPublic": {
            "id": "GetBotLandingPublic",
            "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "78861d3f32e14487446c3586bb633cb12e2149e001c6aacd26715580eb32df88.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-GetPublic-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebPublicPagesAndGateWayService/GetBotLandingPublic/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebPublicPagesAndGateWayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebPublicPagesAndGateWayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebPublicPagesAndGateWayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebPublicPagesAndGateWayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceMain": {
        "id": "WebRestServiceMain",
        "path": "WebRestServiceMain",
        "children": {
          "imported-BotsTable": {
            "id": "imported-BotsTable",
            "path": "WebRestServiceMain/imported-BotsTable",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "ListBotsLambda": {
            "id": "ListBotsLambda",
            "path": "WebRestServiceMain/ListBotsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListBotsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListBotsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListBotsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListBotsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "68af0f6a21c80d6e4b6f7444fee908dcb798cb088f4217ab844d68f217484dce.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListBotsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListBotsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetBotLambda": {
            "id": "GetBotLambda",
            "path": "WebRestServiceMain/GetBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3ec85066ee32c9191514cfceddd1aba3a41b9a2eed3a431472b5f46c82616364.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddBotLambda": {
            "id": "AddBotLambda",
            "path": "WebRestServiceMain/AddBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "16baae458aa8e6d0bb3176d3e3e74a6432d814cb210c667f7efbef1a572fc387.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "RegisterBotLambda": {
            "id": "RegisterBotLambda",
            "path": "WebRestServiceMain/RegisterBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/RegisterBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/RegisterBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/RegisterBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/RegisterBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9fb317838eae7f9a2678b41b4d5498dc22437b42da0c0eb236e6b6b16a5593cd.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Register-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/RegisterBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/RegisterBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/RegisterBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "UnRegisterBotLambda": {
            "id": "UnRegisterBotLambda",
            "path": "WebRestServiceMain/UnRegisterBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/UnRegisterBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/UnRegisterBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a99b7b8e105fcf1a54c18d77f98c0ffa6bef885c39c2e1d70d50c452111b48b8.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-UnRegister-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/UnRegisterBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/UnRegisterBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/UnRegisterBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditBotLambda": {
            "id": "EditBotLambda",
            "path": "WebRestServiceMain/EditBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "dfb66ec5ec7ebf7d6fd4ef6a21a5d753c1ee74744e14cc545c5f592cec7377fb.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteBotLambda": {
            "id": "DeleteBotLambda",
            "path": "WebRestServiceMain/DeleteBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "956f92a781a4352283a5a3e30e74d555723dd44b24a325eaca3143a6e1fb744a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Bots-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListBotCommandsLambda": {
            "id": "ListBotCommandsLambda",
            "path": "WebRestServiceMain/ListBotCommandsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListBotCommandsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListBotCommandsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1233e6a896f54e605137b1a872e562becfbe6a7fd8ac45c19d9bbaccc065d91e.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListBotCommandsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListBotCommandsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListBotCommandsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetBotCommandLambda": {
            "id": "GetBotCommandLambda",
            "path": "WebRestServiceMain/GetBotCommandLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetBotCommandLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetBotCommandLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetBotCommandLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetBotCommandLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "afe31f26616f4178436b83f58d59811785d4778e400d122cee588e648bb0a47c.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetBotCommandLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotCommandLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetBotCommandLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditBotCommandLambda": {
            "id": "EditBotCommandLambda",
            "path": "WebRestServiceMain/EditBotCommandLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditBotCommandLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditBotCommandLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditBotCommandLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditBotCommandLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1ce71e75027288643a3ce96e757f9bf1513a824aba818df9e6e7c0c3c1fefb04.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotCommands-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditBotCommandLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotCommandLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditBotCommandLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListChannelsLambda": {
            "id": "ListChannelsLambda",
            "path": "WebRestServiceMain/ListChannelsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListChannelsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListChannelsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListChannelsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListChannelsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5e43f0e3b199d47f6247f24fa1356e01a5fdf6c24082653f5e2cd134f6b46efd.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListChannelsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListChannelsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListChannelsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetChannelLambda": {
            "id": "GetChannelLambda",
            "path": "WebRestServiceMain/GetChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2c4d1ab57c8e07e24eb211f2c3d45159af8d5a5a6382becf0a49d3b7ba3a6684.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditChannelLambda": {
            "id": "EditChannelLambda",
            "path": "WebRestServiceMain/EditChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "bce674194d0a26ef901735360a4b38acf94bc3befb5080696c5b5ddabb3634d8.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteChannelLambda": {
            "id": "DeleteChannelLambda",
            "path": "WebRestServiceMain/DeleteChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d341ca580b5cb5c8388cc23fd325ee4d2d4df9cd194167bb55a7f6f016f0c04a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-migrateChannelFirstQueue-CreateChannelsLambdas": {
            "id": "imported-migrateChannelFirstQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelFirstQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-migrateChannelFirstQueueDLQ-CreateChannelsLambdas": {
            "id": "imported-migrateChannelFirstQueueDLQ-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelFirstQueueDLQ-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-migrateChannelSecondQueue-CreateChannelsLambdas": {
            "id": "imported-migrateChannelSecondQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelSecondQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-migrateChannelSecondQueueDLQ-CreateChannelsLambdas": {
            "id": "imported-migrateChannelSecondQueueDLQ-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-migrateChannelSecondQueueDLQ-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-schedulerSendQueue-CreateChannelsLambdas": {
            "id": "imported-schedulerSendQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-schedulerSendQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-ToggleUserBlockedStatusFifoQueue-CreateChannelsLambdas": {
            "id": "imported-ToggleUserBlockedStatusFifoQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-ToggleUserBlockedStatusFifoQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-CreateChannelsLambdas": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-SubscribeToSubscriptionPlanQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToContentPlanQueue-CreateChannelsLambdas": {
            "id": "imported-SubscribeToContentPlanQueue-CreateChannelsLambdas",
            "path": "WebRestServiceMain/imported-SubscribeToContentPlanQueue-CreateChannelsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "MigrateChannelFirstStage": {
            "id": "MigrateChannelFirstStage",
            "path": "WebRestServiceMain/MigrateChannelFirstStage",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7f44fdeaa1e42f62dcffa5fce1cb5789238f13c719c4da4e5cd44f739745217b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "migrateChannelSecondQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/migrateChannel-secondStage"
                            ]
                          ]
                        },
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "API_ID": "28013806",
                        "API_HASH": "ffe7611fbfc7f8d4a94ecd725931706a",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Migrate-first",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueCreateChannelsLambdas5C9C3CA3/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelFirstStage52C460E9"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStage",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576",
                "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelFirstStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelFirstQueueDLQCreateChannelsLambdas1BC4E576/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelFirstStage52C460E9"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-firstStage-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "MigrateChannelSecondStage": {
            "id": "MigrateChannelSecondStage",
            "path": "WebRestServiceMain/MigrateChannelSecondStage",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e7a29fe7e3579ba3610146cf50b6c9d52baa60a4da94585b6150a34c5b71027b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-SubscriptionPlan"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-ContentPlan"
                            ]
                          ]
                        },
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "API_ID": "28013806",
                        "API_HASH": "ffe7611fbfc7f8d4a94ecd725931706a",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Channels-Migrate-second",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueCreateChannelsLambdas240BB653/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelSecondStage44CFF078"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3": {
                "id": "SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3",
                "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/MigrateChannelSecondStage/SqsEventSource:WebRestServiceMainimportedmigrateChannelSecondQueueDLQCreateChannelsLambdas360804C3/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "MigrateChannelSecondStage44CFF078"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:migrateChannel-secondStage-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListMeetingsLambda": {
            "id": "ListMeetingsLambda",
            "path": "WebRestServiceMain/ListMeetingsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListMeetingsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListMeetingsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListMeetingsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListMeetingsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0e3aa941b5200b44279b8e1692395d5bcf4e9d328c255d7f9e4e327a26215c60.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListMeetingsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListMeetingsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListMeetingsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetMeetingLambda": {
            "id": "GetMeetingLambda",
            "path": "WebRestServiceMain/GetMeetingLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "82a871aaf16ea7b0778734ec47a97340da70ed24eabd8736b204e10391f14046.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddMeetingLambda": {
            "id": "AddMeetingLambda",
            "path": "WebRestServiceMain/AddMeetingLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "80476d977ddb795442f560d2e2f4f2b3651f28f4caef35645e7cfe1bfec1cf5c.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditMeetingLambda": {
            "id": "EditMeetingLambda",
            "path": "WebRestServiceMain/EditMeetingLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a7ac793f25d2c4864cb0bb6274984276dfc3db3d5e1720eb3c73767852b5c16c.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteMeetingLambda": {
            "id": "DeleteMeetingLambda",
            "path": "WebRestServiceMain/DeleteMeetingLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeleteMeetingLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeleteMeetingLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "39c446210911e1e021c37f2d2ff995a316ee9fa0bcdce7eb48c18c8dc1af68cc.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeleteMeetingLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeleteMeetingLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeleteMeetingLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListMeetingParticipantsLambda": {
            "id": "ListMeetingParticipantsLambda",
            "path": "WebRestServiceMain/ListMeetingParticipantsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListMeetingParticipantsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListMeetingParticipantsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListMeetingParticipantsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListMeetingParticipantsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "94f6513a70b82a65b08338430407c5c400aa5751e5a7272c835c9f5bf70b21b6.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-ListParticipants-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListMeetingParticipantsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListMeetingParticipantsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListMeetingParticipantsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CheckAddMeetingSubscriptionLambda": {
            "id": "CheckAddMeetingSubscriptionLambda",
            "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "234fd54b9715f1cb79b7692fdf9e525afab5ad1042c54cd694c98a7eeb1ba27d.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Meetings-CheckLimits-AddMeeting-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/CheckAddMeetingSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListPaymentOptionsLambda": {
            "id": "ListPaymentOptionsLambda",
            "path": "WebRestServiceMain/ListPaymentOptionsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "06c54bd46d2bb3812430514ca1bd166e6c7cd59f4b4370bbb967a627953a6f41.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListPaymentOptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetPaymentOptionLambda": {
            "id": "GetPaymentOptionLambda",
            "path": "WebRestServiceMain/GetPaymentOptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5e979d273ea062f9c706588122a6feeac1dee1f15b0a180a168a4f995a88c7d6.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddPaymentOptionLambda": {
            "id": "AddPaymentOptionLambda",
            "path": "WebRestServiceMain/AddPaymentOptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9bdad6256faf27fa2d926261e3fd2803e6b28975b984b78cee38693dacaeadbb.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditPaymentOptionLambda": {
            "id": "EditPaymentOptionLambda",
            "path": "WebRestServiceMain/EditPaymentOptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "12118209ecdaa768514443a1211298bfb1d4ef10a58ee5e1d79a5c2d660852d9.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditPaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditPaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeletePaymentOptionLambda": {
            "id": "DeletePaymentOptionLambda",
            "path": "WebRestServiceMain/DeletePaymentOptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5166d947d083ca0c528558a416cbd3b01503fa71a3677219b49a15ecb2450b5d.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-PaymentOptions-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/DeletePaymentOptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetBotMenuSettingsLambda": {
            "id": "GetBotMenuSettingsLambda",
            "path": "WebRestServiceMain/GetBotMenuSettingsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/GetBotMenuSettingsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/GetBotMenuSettingsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/GetBotMenuSettingsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/GetBotMenuSettingsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2d4ab79305515764b7268b07f8e2ef19ee9bead22be83129ec9086093b475efe.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotMenuSettings-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/GetBotMenuSettingsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/GetBotMenuSettingsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/GetBotMenuSettingsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditBotMenuSettingsLambda": {
            "id": "EditBotMenuSettingsLambda",
            "path": "WebRestServiceMain/EditBotMenuSettingsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/EditBotMenuSettingsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/EditBotMenuSettingsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/EditBotMenuSettingsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/EditBotMenuSettingsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "331fe1f30e656b7657ffdf430132816656d11196aeb4bc9c785d802e4b210d96.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotMenuSettings-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/EditBotMenuSettingsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/EditBotMenuSettingsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/EditBotMenuSettingsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-notificationsQueue-ForCreateNotificationsLambdas": {
            "id": "imported-notificationsQueue-ForCreateNotificationsLambdas",
            "path": "WebRestServiceMain/imported-notificationsQueue-ForCreateNotificationsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-notificationsQueueDLQ-ForCreateNotificationsLambdas": {
            "id": "imported-notificationsQueueDLQ-ForCreateNotificationsLambdas",
            "path": "WebRestServiceMain/imported-notificationsQueueDLQ-ForCreateNotificationsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "ListNewNotificationsLambda": {
            "id": "ListNewNotificationsLambda",
            "path": "WebRestServiceMain/ListNewNotificationsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/ListNewNotificationsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/ListNewNotificationsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/ListNewNotificationsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/ListNewNotificationsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f4e53e64187bd6f3edf225209fb093984a8f3bb4041aea1700550f77ddd63041.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Notifications-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/ListNewNotificationsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/ListNewNotificationsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/ListNewNotificationsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddNotificationLambda": {
            "id": "AddNotificationLambda",
            "path": "WebRestServiceMain/AddNotificationLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/AddNotificationLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/AddNotificationLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/AddNotificationLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/AddNotificationLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f61bbfcf9122bf401ddbd1f307b4ce01502be27c81b941a27e4b6a5867b3697a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-Notifications-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/AddNotificationLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddNotificationLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/AddNotificationLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportednotificationsQueueForCreateNotificationsLambdas91A13A1A": {
                "id": "SqsEventSource:WebRestServiceMainimportednotificationsQueueForCreateNotificationsLambdas91A13A1A",
                "path": "WebRestServiceMain/AddNotificationLambda/SqsEventSource:WebRestServiceMainimportednotificationsQueueForCreateNotificationsLambdas91A13A1A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddNotificationLambda/SqsEventSource:WebRestServiceMainimportednotificationsQueueForCreateNotificationsLambdas91A13A1A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "AddNotificationLambda90B1785F"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:notifications",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportednotificationsQueueDLQForCreateNotificationsLambdas5D81228C": {
                "id": "SqsEventSource:WebRestServiceMainimportednotificationsQueueDLQForCreateNotificationsLambdas5D81228C",
                "path": "WebRestServiceMain/AddNotificationLambda/SqsEventSource:WebRestServiceMainimportednotificationsQueueDLQForCreateNotificationsLambdas5D81228C",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/AddNotificationLambda/SqsEventSource:WebRestServiceMainimportednotificationsQueueDLQForCreateNotificationsLambdas5D81228C/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "AddNotificationLambda90B1785F"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:notifications-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas": {
            "id": "imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas",
            "path": "WebRestServiceMain/imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-CascadeDeleteQueue-forCreateCascadeDelete": {
            "id": "imported-CascadeDeleteQueue-forCreateCascadeDelete",
            "path": "WebRestServiceMain/imported-CascadeDeleteQueue-forCreateCascadeDelete",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-CascadeDeleteQueueDLQ-forCreateCascadeDelete": {
            "id": "imported-CascadeDeleteQueueDLQ-forCreateCascadeDelete",
            "path": "WebRestServiceMain/imported-CascadeDeleteQueueDLQ-forCreateCascadeDelete",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "CascadeDeleteLambda": {
            "id": "CascadeDeleteLambda",
            "path": "WebRestServiceMain/CascadeDeleteLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMain/CascadeDeleteLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMain/CascadeDeleteLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMain/CascadeDeleteLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMain/CascadeDeleteLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "93dad576c548fb7b1ad4a429a52cf059e2f8d930c88d358a0e4af7b76cdb175b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "DeleteScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-DeletePost"
                            ]
                          ]
                        },
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CascadeDelete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMain/CascadeDeleteLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/CascadeDeleteLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMain/CascadeDeleteLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueforCreateCascadeDeleteF0EEFCDD": {
                "id": "SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueforCreateCascadeDeleteF0EEFCDD",
                "path": "WebRestServiceMain/CascadeDeleteLambda/SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueforCreateCascadeDeleteF0EEFCDD",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/CascadeDeleteLambda/SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueforCreateCascadeDeleteF0EEFCDD/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "CascadeDeleteLambdaA9805599"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:CascadeDeleteQueue.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueDLQforCreateCascadeDelete91E058E2": {
                "id": "SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueDLQforCreateCascadeDelete91E058E2",
                "path": "WebRestServiceMain/CascadeDeleteLambda/SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueDLQforCreateCascadeDelete91E058E2",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMain/CascadeDeleteLambda/SqsEventSource:WebRestServiceMainimportedCascadeDeleteQueueDLQforCreateCascadeDelete91E058E2/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "CascadeDeleteLambdaA9805599"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:CascadeDeleteQueue-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceMain/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceMain/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceMain/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListBotsLambdaC9B0E149\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddBotLambda25A32D8F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetBotLambda0C4EA18F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditBotLambda82B1C036\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"RegisterBotLambda695100A4\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"UnRegisterBotLambda0B03CDDE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteBotLambda6B24EC61\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListBotCommandsLambda223B4828\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListBotCommandsLambda223B4828\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListBotCommandsLambda223B4828\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotCommandLambdaC92683CD\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotCommandLambdaC92683CD\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetBotCommandLambdaC92683CD\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditBotCommandLambda5F3C4BF1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditBotCommandLambda5F3C4BF1\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditBotCommandLambda5F3C4BF1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListChannelsLambda0D2B8521\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetChannelLambdaE5A9F403\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditChannelLambdaAE9A056A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteChannelLambda8045FC58\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListMeetingsLambdaF16F9182\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMeetingsLambdaF16F9182\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListMeetingsLambdaF16F9182\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddMeetingLambda16941AE7\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddMeetingLambda16941AE7\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddMeetingLambda16941AE7\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMeetingLambda5B5F43FB\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMeetingLambda5B5F43FB\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetMeetingLambda5B5F43FB\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditMeetingLambdaF8CDD424\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditMeetingLambdaF8CDD424\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditMeetingLambdaF8CDD424\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteMeetingLambdaADE38392\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteMeetingLambdaADE38392\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeleteMeetingLambdaADE38392\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListMeetingParticipantsLambdaF638D7BA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMeetingParticipantsLambdaF638D7BA\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListMeetingParticipantsLambdaF638D7BA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"CheckAddMeetingSubscriptionLambdaC5500A8C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"CheckAddMeetingSubscriptionLambdaC5500A8C\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"CheckAddMeetingSubscriptionLambdaC5500A8C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListPaymentOptionsLambdaACAA5262\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetPaymentOptionLambdaD6DBF61A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"AddPaymentOptionLambdaBFF77B7F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditPaymentOptionLambda398037A2\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"DeletePaymentOptionLambdaEC66351C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotMenuSettingsLambda422E24D9\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotMenuSettingsLambda422E24D9\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"GetBotMenuSettingsLambda422E24D9\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditBotMenuSettingsLambda54B828C0\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditBotMenuSettingsLambda54B828C0\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"EditBotMenuSettingsLambda54B828C0\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListNewNotificationsLambdaEE68088F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListNewNotificationsLambdaEE68088F\",\"Arn\"]}",
                "path": "WebRestServiceMain/Exports/Output{\"Fn::GetAtt\":[\"ListNewNotificationsLambdaEE68088F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceMain/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceMain/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceFiles": {
        "id": "WebRestServiceFiles",
        "path": "WebRestServiceFiles",
        "children": {
          "ListTelegramFilesLambda": {
            "id": "ListTelegramFilesLambda",
            "path": "WebRestServiceFiles/ListTelegramFilesLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2d23706f329229972ec9468474b62d8a4a621a9e3b2817d3bab3222b24d76858.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/ListTelegramFilesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetTelegramFileLambda": {
            "id": "GetTelegramFileLambda",
            "path": "WebRestServiceFiles/GetTelegramFileLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3593a4e3b79f9fafa63bc940023b2ee062cf2c8c648bc179795a630755f18e45.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditTelegramFileLambda": {
            "id": "EditTelegramFileLambda",
            "path": "WebRestServiceFiles/EditTelegramFileLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "80afd70988f4fd507feb45c53ea56d5f0b5c55e369013a24a4005942d961c2b0.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/EditTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/EditTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteTelegramFileLambda": {
            "id": "DeleteTelegramFileLambda",
            "path": "WebRestServiceFiles/DeleteTelegramFileLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c2555f59eb2460c61bb334dec46a7587dadc05bc00500067efc686d65e19b568.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-TelegramFiles-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/DeleteTelegramFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetGetPresignedUrlLambda": {
            "id": "GetGetPresignedUrlLambda",
            "path": "WebRestServiceFiles/GetGetPresignedUrlLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9c9cdc01ea2e3ee792e7d09223b59cbb81be8ae2ef5c7346102d2316e9a1a2a4.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-GetPresignedUrl-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceFiles/GetGetPresignedUrlLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceFiles/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceFiles/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceFiles/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"ListTelegramFilesLambda11E43599\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetTelegramFileLambda0285A5D8\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"EditTelegramFileLambda541FB43B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"DeleteTelegramFileLambdaF1882CC1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}",
                "path": "WebRestServiceFiles/Exports/Output{\"Fn::GetAtt\":[\"GetGetPresignedUrlLambda43F48E6F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceFiles/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceFiles/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceMessagesAndPayments": {
        "id": "WebRestServiceMessagesAndPayments",
        "path": "WebRestServiceMessagesAndPayments",
        "children": {
          "imported-ToggleUserBlockedStatusFifoQueue-CreateSendMessagesLambdas": {
            "id": "imported-ToggleUserBlockedStatusFifoQueue-CreateSendMessagesLambdas",
            "path": "WebRestServiceMessagesAndPayments/imported-ToggleUserBlockedStatusFifoQueue-CreateSendMessagesLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "SendTestMessageLambda": {
            "id": "SendTestMessageLambda",
            "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9c40aa343e2b3863fea394b005a4d4e86b260bb14486c3ee78fa12902735197a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendTestMessage-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendTestMessageLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "SendTestFileLambda": {
            "id": "SendTestFileLambda",
            "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c6ea60d463a1983904e1654af5719cb9ec1d94399ceb5eed99ede5e4a2eb31f7.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendTestFile-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendTestFileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SendDirectMessageFromAdminLambda": {
            "id": "SendDirectMessageFromAdminLambda",
            "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "6579f8a18d2dff6672fd9ab2804441da5126eaa0cd6c1829face5e4a388d6bb9.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-SendMessages-SendDirectMessageFromAdmin-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendDirectMessageFromAdminLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListDigitalStoreCategoriesLambda": {
            "id": "ListDigitalStoreCategoriesLambda",
            "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e23d695139b96bde0ed7151b38853c956c68bca8a34df404b22affc6c1f1391e.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreCategories-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreCategoriesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetDigitalStoreCategoryLambda": {
            "id": "GetDigitalStoreCategoryLambda",
            "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a305dd686458e08fc973e31a61a7a5a35b7f8fcb975555bd4733c61c7495383a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreCategories-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreCategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddDigitalStoreCategoryLambda": {
            "id": "AddDigitalStoreCategoryLambda",
            "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1f05f18121e7b7b220b50daab43b07b9c4f67c5e8bd0dd48106a81ebd580df60.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreCategories-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreCategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditDigitalStoreCategoryLambda": {
            "id": "EditDigitalStoreCategoryLambda",
            "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2eb84541b296bc8c7ba9c33c307bde67388202559d8d06dd03edc3e6dd803ff7.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreCategories-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreCategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteDigitalStoreCategoryLambda": {
            "id": "DeleteDigitalStoreCategoryLambda",
            "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9ae7e02b64a08095b5c16992a5edae080c9611a33a6c6d357ed887df7d37154b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreCategories-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreCategoryLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListDigitalStoreItemsLambda": {
            "id": "ListDigitalStoreItemsLambda",
            "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d247f3deb4dab89fb003c56fb6bc3a9d6723a63042f0ff1abb67ca4863c7545e.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreItems-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListDigitalStoreItemsForContentPlanPostLambda": {
            "id": "ListDigitalStoreItemsForContentPlanPostLambda",
            "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ce387cb779b8361da22637078da4144a4fe6d89c3cfff2f35f3d86b0c8ce7902.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreItems-List-forContentPlanPost-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ListDigitalStoreItemsForContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetDigitalStoreItemLambda": {
            "id": "GetDigitalStoreItemLambda",
            "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1cc88b39b4725d1b35df90f07a5eb1da614f0c55d446cd7a2ff896301cad82da.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreItems-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/GetDigitalStoreItemLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddDigitalStoreItemLambda": {
            "id": "AddDigitalStoreItemLambda",
            "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c2154a6f42822213f203e66f5b38cf262d611290162f752f115bf0c3e3381733.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreItems-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/AddDigitalStoreItemLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditDigitalStoreItemLambda": {
            "id": "EditDigitalStoreItemLambda",
            "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9b88c9e3614da8d14bed0d8a659908dde0a824628d02581628c6c6f8ca78c00b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreItems-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/EditDigitalStoreItemLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteDigitalStoreItemLambda": {
            "id": "DeleteDigitalStoreItemLambda",
            "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4d2f82e19a626a980fa05a573b00ba535b9c54bda24188a8ab510c4b134afdfd.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-DigitalStoreItems-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/DeleteDigitalStoreItemLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-ToggleUserBlockedStatusFifoQueue-SendMessageScheduler": {
            "id": "imported-ToggleUserBlockedStatusFifoQueue-SendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-ToggleUserBlockedStatusFifoQueue-SendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SendMessageSchedulerQueueFirstDLQ-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueFirstDLQ-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueFirstDLQ-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SendMessageSchedulerQueueFirst-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueFirst-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueFirst-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SendMessageSchedulerQueueSecond-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueSecond-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueSecond-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SendMessageSchedulerQueueSecondDLQ-forSendMessageScheduler": {
            "id": "imported-SendMessageSchedulerQueueSecondDLQ-forSendMessageScheduler",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueSecondDLQ-forSendMessageScheduler",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "SendMessage-Scheduller-First-Stage": {
            "id": "SendMessage-Scheduller-First-Stage",
            "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "7f1346db187c407f903dd5a3a8e1219f599aa6a64284f1e64b9a98c574f89576.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueFirstURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-First-Queue"
                            ]
                          ]
                        },
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "SendMessage-Scheduller-First-Stage",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-First-Stage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "oneMinuteSendMessageSchedullerFirstStage": {
            "id": "oneMinuteSendMessageSchedullerFirstStage",
            "path": "WebRestServiceMessagesAndPayments/oneMinuteSendMessageSchedullerFirstStage",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneMinuteSendMessageSchedullerFirstStage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneMinuteSendMessageSchedullerFirstStage",
                    "scheduleExpression": "rate(1 minute)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "SendMessageSchedullerFirstStage8B41BE99",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"SendMessageSchedullerFirstStageLambda\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.83.1"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsSendMessageSchedullerFirstStage4AE89C53": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsSendMessageSchedullerFirstStage4AE89C53",
                "path": "WebRestServiceMessagesAndPayments/oneMinuteSendMessageSchedullerFirstStage/AllowEventRuleWebRestServiceMessagesAndPaymentsSendMessageSchedullerFirstStage4AE89C53",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "SendMessageSchedullerFirstStage8B41BE99",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneMinuteSendMessageSchedullerFirstStageAC4FC767",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.83.1"
            }
          },
          "SendMessage-Scheduller-Second-Stage": {
            "id": "SendMessage-Scheduller-Second-Stage",
            "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "263c5c2f492ba5306e84a8ee77c54d8f64fb9ce5090b56e6ced42afb4b5c65f4.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueFirstURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-First-Queue"
                            ]
                          ]
                        },
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "SendMessage-Scheduller-Second-Stage",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstforSendMessageScheduler209AB93A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSchedullerSecondStageF93D5734"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2",
                "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessage-Scheduller-Second-Stage/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueFirstDLQforSendMessageScheduler1B22D5D2/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSchedullerSecondStageF93D5734"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-First-Queue-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SendMessageSender": {
            "id": "SendMessageSender",
            "path": "WebRestServiceMessagesAndPayments/SendMessageSender",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "951a4e2a5e04bec8cb84f50de65cfc7011ba64a8277b907873fa010aa2b31a52.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "scheduler-SendMessageSender-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondforSendMessageScheduler4BC2FFF1/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSender0498CBC5"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8",
                "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SendMessageSender/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSendMessageSchedulerQueueSecondDLQforSendMessageSchedulerBD376BE8/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SendMessageSender0498CBC5"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendMessage-Second-Queue-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-ToggleUserBlockedStatusFifoQueue-PaymentProcessor": {
            "id": "imported-ToggleUserBlockedStatusFifoQueue-PaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-ToggleUserBlockedStatusFifoQueue-PaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-notificationsQueue-ForPaymentProcessor": {
            "id": "imported-notificationsQueue-ForPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-notificationsQueue-ForPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-schedulerSendQueueForPaymentProcessor": {
            "id": "imported-schedulerSendQueueForPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-schedulerSendQueueForPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PaymentProcessorQueue": {
            "id": "imported-PaymentProcessorQueue",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PaymentProcessorQueueDQL": {
            "id": "imported-PaymentProcessorQueueDQL",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorQueueDQL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PaymentProcessorConfirmationQueue": {
            "id": "imported-PaymentProcessorConfirmationQueue",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorConfirmationQueue",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PaymentProcessorConfirmationQueueDQL": {
            "id": "imported-PaymentProcessorConfirmationQueueDQL",
            "path": "WebRestServiceMessagesAndPayments/imported-PaymentProcessorConfirmationQueueDQL",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueue-forPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToContentPlanQueue-forPaymentProcessor": {
            "id": "imported-SubscribeToContentPlanQueue-forPaymentProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueue-forPaymentProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "paymentProcessorIncomingRequests": {
            "id": "paymentProcessorIncomingRequests",
            "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "727989eab95463f37532f0e51dd49e3c771ee13ade87743ce1e4ea88f50f97ef.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-SubscriptionPlan"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-ContentPlan"
                            ]
                          ]
                        },
                        "notificationsQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/notifications"
                            ]
                          ]
                        },
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-incomingRequests",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueueDQL4B06641F/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorIncomingRequests676308B6"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorQueue62445A59/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorIncomingRequests676308B6"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "paymentProcessorConfirmationRequests": {
            "id": "paymentProcessorConfirmationRequests",
            "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "874205d151f2972b82a940b183a6a46c0a252c0b6708438ad4d38aa73bafabb8.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-SubscriptionPlan"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-ContentPlan"
                            ]
                          ]
                        },
                        "notificationsQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/notifications"
                            ]
                          ]
                        },
                        "ToggleUserBlockedStatusQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/toggleUserBlockedStatus.fifo"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-IncomingPaymentConfirmation",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueueDQLD690BB68/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6",
                "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPaymentProcessorConfirmationQueue831018D6/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-ToggleUserBlockedStatusFifoQueue-ForCreateSubscriptionProcessor": {
            "id": "imported-ToggleUserBlockedStatusFifoQueue-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-ToggleUserBlockedStatusFifoQueue-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-ToggleUserBlockedStatusFifoQueueDLQ-ForCreateSubscriptionProcessor": {
            "id": "imported-ToggleUserBlockedStatusFifoQueueDLQ-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-ToggleUserBlockedStatusFifoQueueDLQ-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-expireSubscriptionQueue-ForCreateSubscriptionProcessor": {
            "id": "imported-expireSubscriptionQueue-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-expireSubscriptionQueue-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-expireSubscriptionQueueDLQ-ForCreateSubscriptionProcessor": {
            "id": "imported-expireSubscriptionQueueDLQ-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-expireSubscriptionQueueDLQ-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SendMessageSchedulerQueueSecondForCreateSubscriptionProcessor": {
            "id": "imported-SendMessageSchedulerQueueSecondForCreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SendMessageSchedulerQueueSecondForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToSubscriptionPlanQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-SubscribeToContentPlanQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PostScheduler-AddScheduledPostQueue-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-AddScheduledPostQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-AddScheduledPostQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PostScheduler-AddScheduledPostQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-AddScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-AddScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PostScheduler-DeleteScheduledPostQueue-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-DeleteScheduledPostQueue-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-DeleteScheduledPostQueue-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-PostScheduler-DeleteScheduledPostQueueDLQ-CreateSubscriptionProcessor": {
            "id": "imported-PostScheduler-DeleteScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "path": "WebRestServiceMessagesAndPayments/imported-PostScheduler-DeleteScheduledPostQueueDLQ-CreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "SubscriptionProcessorAddScheduledPostLambda": {
            "id": "SubscriptionProcessorAddScheduledPostLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b5b6d840b9c741d01b8694a637d54309852268658d6edf0424434c96e34988e0.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Scheduler-Add-New-Post",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "memorySize": 256,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueCreateSubscriptionProcessor1D2FE7FE/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorAddScheduledPostLambdaF6BF117F"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-AddPost",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorAddScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerAddScheduledPostQueueDLQCreateSubscriptionProcessor541D2443/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorAddScheduledPostLambdaF6BF117F"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-AddPost-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SubscriptionProcessorToggleUserStatusChangeLambda": {
            "id": "SubscriptionProcessorToggleUserStatusChangeLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ed36f696f8aefe2977b159931e2d56ac10817ecb56470e3f94aea4a2218b2e4b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "SendMessageSchedulerQueueSecond": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-ToggleUserStatusChange",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueForCreateSubscriptionProcessor4B803A40": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueForCreateSubscriptionProcessor4B803A40",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueForCreateSubscriptionProcessor4B803A40",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueForCreateSubscriptionProcessor4B803A40/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorToggleUserStatusChangeLambda1C7E1303"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:toggleUserBlockedStatus.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueDLQForCreateSubscriptionProcessor7F0F1A42": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueDLQForCreateSubscriptionProcessor7F0F1A42",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueDLQForCreateSubscriptionProcessor7F0F1A42",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorToggleUserStatusChangeLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedToggleUserBlockedStatusFifoQueueDLQForCreateSubscriptionProcessor7F0F1A42/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorToggleUserStatusChangeLambda1C7E1303"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:toggleUserBlockedStatus-DLQ.fifo",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SubscriptionProcessorDeleteScheduledPostLambda": {
            "id": "SubscriptionProcessorDeleteScheduledPostLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e2d0ad23ae33a11bbb2d30c34894151f24638e5cf46b3e57b402c6eb2ae3bb7b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "SendMessageSchedulerQueueSecond": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Scheduler-Delete-Post",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "memorySize": 256,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueCreateSubscriptionProcessor7C544479/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorDeleteScheduledPostLambda088484ED"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-DeletePost",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorDeleteScheduledPostLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedPostSchedulerDeleteScheduledPostQueueDLQCreateSubscriptionProcessor05F9CB83/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorDeleteScheduledPostLambda088484ED"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-DeletePost-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SubscriptionProcessorLambdaContentPlanLambda": {
            "id": "SubscriptionProcessorLambdaContentPlanLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "84b6b1906ab7d74fe183e6a1c79957c7d5246133930398a3ef4deaff0db19e84.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-ContentPlan"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-SubscriptionPlan"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Subscribe-User-To-ContentPlan",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueDLQCreateSubscriptionProcessor3A816E2D/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorLambdaContentPlanLambda730D0AC1"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-ContentPlan-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorLambdaContentPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToContentPlanQueueCreateSubscriptionProcessorD59049A7/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorLambdaContentPlanLambda730D0AC1"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-ContentPlan",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SubscriptionProcessorSubscriptionPlanLambda": {
            "id": "SubscriptionProcessorSubscriptionPlanLambda",
            "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a9fc723c36833f36dd269d2f5573bfe09d12c448375c1c1071c642da35eee245.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "SendMessageSchedulerQueueSecondURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/scheduler-SendMessage-Second-Queue"
                            ]
                          ]
                        },
                        "SubscribeToContentPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-ContentPlan"
                            ]
                          ]
                        },
                        "SubscribeToSubscriptionPlanQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-SubscribeTo-SubscriptionPlan"
                            ]
                          ]
                        },
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Subscribe-User-To-SubscriptionPlan",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueCreateSubscriptionProcessor3ACE7455/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorSubscriptionPlanLambda0FF2E2A5"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-SubscriptionPlan",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A",
                "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/SubscriptionProcessorSubscriptionPlanLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedSubscribeToSubscriptionPlanQueueDLQCreateSubscriptionProcessorEA1AE74A/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "SubscriptionProcessorSubscriptionPlanLambda0FF2E2A5"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-SubscribeTo-SubscriptionPlan-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "expiteChannelSubscriptionLambda": {
            "id": "expiteChannelSubscriptionLambda",
            "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "76c8ac4959f626f7c606adacad8bd85744525f814fb2bb79dd43cab77634a767.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "expireSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-ExpireSubscriptionQueue"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-ChannelSubsriptions",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expiteChannelSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "oneHourExpireChannelSubscription": {
            "id": "oneHourExpireChannelSubscription",
            "path": "WebRestServiceMessagesAndPayments/oneHourExpireChannelSubscription",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireChannelSubscription/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourExpireChannelSubscription",
                    "scheduleExpression": "rate(1 hour)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "expiteChannelSubscriptionLambdaD1828D3B",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"Hello Lambda\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.83.1"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteChannelSubscriptionLambdaDB66E155": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteChannelSubscriptionLambdaDB66E155",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireChannelSubscription/AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteChannelSubscriptionLambdaDB66E155",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "expiteChannelSubscriptionLambdaD1828D3B",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourExpireChannelSubscription86B3FE7B",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.83.1"
            }
          },
          "expiteBotSubscriptionLambda": {
            "id": "expiteBotSubscriptionLambda",
            "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "152cb590f9148ccb48a03ac91e5788eafe920863b860949a31cc95925ba5df39.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "expireSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-ExpireSubscriptionQueue"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-BotSubscriptions",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expiteBotSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "oneHourExpireBotSubscription": {
            "id": "oneHourExpireBotSubscription",
            "path": "WebRestServiceMessagesAndPayments/oneHourExpireBotSubscription",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireBotSubscription/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourExpireBotSubscription",
                    "scheduleExpression": "rate(1 hour)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "expiteBotSubscriptionLambda017B3373",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"Hello Lambda\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.83.1"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteBotSubscriptionLambda6DB1C1F4": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteBotSubscriptionLambda6DB1C1F4",
                "path": "WebRestServiceMessagesAndPayments/oneHourExpireBotSubscription/AllowEventRuleWebRestServiceMessagesAndPaymentsexpiteBotSubscriptionLambda6DB1C1F4",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "expiteBotSubscriptionLambda017B3373",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourExpireBotSubscription0FE5D6A1",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.83.1"
            }
          },
          "PomponaSubscriptionCleanUpProcessor": {
            "id": "PomponaSubscriptionCleanUpProcessor",
            "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "9bdb88abf0ec0a56c527fbef5d2a62b96de8a14da8cc735b7e7a3f9fcb71ac89.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Cleanup-Pompona",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/PomponaSubscriptionCleanUpProcessor/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "oneHourCleanupPompona": {
            "id": "oneHourCleanupPompona",
            "path": "WebRestServiceMessagesAndPayments/oneHourCleanupPompona",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupPompona/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Events::Rule",
                  "aws:cdk:cloudformation:props": {
                    "name": "oneHourCleanupPompona",
                    "scheduleExpression": "rate(1 day)",
                    "state": "ENABLED",
                    "targets": [
                      {
                        "id": "Target0",
                        "arn": {
                          "Fn::GetAtt": [
                            "PomponaSubscriptionCleanUpProcessorC189408D",
                            "Arn"
                          ]
                        },
                        "input": "{\"message\":\"oneHourCleanupPompona\"}"
                      }
                    ]
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_events.CfnRule",
                  "version": "2.83.1"
                }
              },
              "AllowEventRuleWebRestServiceMessagesAndPaymentsPomponaSubscriptionCleanUpProcessorB1C788E5": {
                "id": "AllowEventRuleWebRestServiceMessagesAndPaymentsPomponaSubscriptionCleanUpProcessorB1C788E5",
                "path": "WebRestServiceMessagesAndPayments/oneHourCleanupPompona/AllowEventRuleWebRestServiceMessagesAndPaymentsPomponaSubscriptionCleanUpProcessorB1C788E5",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": {
                      "Fn::GetAtt": [
                        "PomponaSubscriptionCleanUpProcessorC189408D",
                        "Arn"
                      ]
                    },
                    "principal": "events.amazonaws.com",
                    "sourceArn": {
                      "Fn::GetAtt": [
                        "oneHourCleanupPomponaD55EE50D",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_events.Rule",
              "version": "2.83.1"
            }
          },
          "expireUserSubscriptionItem": {
            "id": "expireUserSubscriptionItem",
            "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4b4a633807185c813eb105a0af4672453493cfb8aee1c7d680b55c0137b0ed58.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-expireUserSubscriptionItem",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItem/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueForCreateSubscriptionProcessor44E5B03F/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "expireUserSubscriptionItem6039491A"
                        },
                        "batchSize": 10,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ExpireSubscriptionQueue",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "expireUserSubscriptionItemDLQLambda": {
            "id": "expireUserSubscriptionItemDLQLambda",
            "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5aa38032571312a460f182f0ba4036f3524991cafda1bf58ceae8807089bc23b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "subscriptionProcessor-Expire-expireUserSubscriptionItemDLQ",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "reservedConcurrentExecutions": 1,
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8": {
                "id": "SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8",
                "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/expireUserSubscriptionItemDLQLambda/SqsEventSource:WebRestServiceMessagesAndPaymentsimportedexpireSubscriptionQueueDLQForCreateSubscriptionProcessor55AD69D8/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "expireUserSubscriptionItemDLQLambda6890AA7E"
                        },
                        "batchSize": 10,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ExpireSubscriptionQueue-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ModulPaymentGenerateData": {
            "id": "ModulPaymentGenerateData",
            "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d7797f4994032c2d2bf778bc237bda9ff8d622e26bb19730c2cf5e43da0e1b84.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "modulMerchantId": "46e90f0c-76da-4646-81ab-8890763b4316",
                        "modulSuccess_url": "https://admin.pompona.net/successfullPayment",
                        "modulCallback_url": "https://payments.pompona.net/modul_ru/callback",
                        "modulKey": "0DF051D1538CD086EC0A0F52ECFD84F3",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-ModulPayment-generate",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceMessagesAndPayments/ModulPaymentGenerateData/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceMessagesAndPayments/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceMessagesAndPayments/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceMessagesAndPayments/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendTestMessageLambdaD3B92DD3\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendTestFileLambda65A31CEB\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SendDirectMessageFromAdminLambda39C70282\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SendDirectMessageFromAdminLambda39C70282\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"SendDirectMessageFromAdminLambda39C70282\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListDigitalStoreCategoriesLambda6DBA20AE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListDigitalStoreCategoriesLambda6DBA20AE\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"ListDigitalStoreCategoriesLambda6DBA20AE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetDigitalStoreCategoryLambdaDC94DDF8\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetDigitalStoreCategoryLambdaDC94DDF8\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"GetDigitalStoreCategoryLambdaDC94DDF8\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddDigitalStoreCategoryLambda6A9CF57A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddDigitalStoreCategoryLambda6A9CF57A\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"AddDigitalStoreCategoryLambda6A9CF57A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditDigitalStoreCategoryLambdaBFA95C19\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditDigitalStoreCategoryLambdaBFA95C19\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"EditDigitalStoreCategoryLambdaBFA95C19\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteDigitalStoreCategoryLambdaEEDC7382\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteDigitalStoreCategoryLambdaEEDC7382\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"DeleteDigitalStoreCategoryLambdaEEDC7382\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListDigitalStoreItemsLambda8AE9AC9B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListDigitalStoreItemsLambda8AE9AC9B\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"ListDigitalStoreItemsLambda8AE9AC9B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListDigitalStoreItemsForContentPlanPostLambdaC602A07F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListDigitalStoreItemsForContentPlanPostLambdaC602A07F\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"ListDigitalStoreItemsForContentPlanPostLambdaC602A07F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetDigitalStoreItemLambdaF44BF501\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetDigitalStoreItemLambdaF44BF501\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"GetDigitalStoreItemLambdaF44BF501\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddDigitalStoreItemLambda6822F670\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddDigitalStoreItemLambda6822F670\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"AddDigitalStoreItemLambda6822F670\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditDigitalStoreItemLambda5AF818E1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditDigitalStoreItemLambda5AF818E1\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"EditDigitalStoreItemLambda5AF818E1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteDigitalStoreItemLambda946778DB\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteDigitalStoreItemLambda946778DB\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"DeleteDigitalStoreItemLambda946778DB\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ModulPaymentGenerateDataFCE9EB60\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ModulPaymentGenerateDataFCE9EB60\",\"Arn\"]}",
                "path": "WebRestServiceMessagesAndPayments/Exports/Output{\"Fn::GetAtt\":[\"ModulPaymentGenerateDataFCE9EB60\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceMessagesAndPayments/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceMessagesAndPayments/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServicePlansAndPosts": {
        "id": "WebRestServicePlansAndPosts",
        "path": "WebRestServicePlansAndPosts",
        "children": {
          "imported-CascadeDeleteQueue-CreateContentPlanPostsLambdas": {
            "id": "imported-CascadeDeleteQueue-CreateContentPlanPostsLambdas",
            "path": "WebRestServicePlansAndPosts/imported-CascadeDeleteQueue-CreateContentPlanPostsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-AddScheduledPostQueue-CreateContentPlanPostsLambdas": {
            "id": "imported-AddScheduledPostQueue-CreateContentPlanPostsLambdas",
            "path": "WebRestServicePlansAndPosts/imported-AddScheduledPostQueue-CreateContentPlanPostsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas": {
            "id": "imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas",
            "path": "WebRestServicePlansAndPosts/imported-DeleteScheduledPostQueue-CreateContentPlanPostsLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "ListContentPlanPostsLambda": {
            "id": "ListContentPlanPostsLambda",
            "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "fcb5283a26863312ea6d82c45f1173d3ce3f1b0226163d6c2d730ce6a02a091e.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/ListContentPlanPostsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetContentPlanPostLambda": {
            "id": "GetContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e551ec8edede7dbc9eb4c9fef33d02c97fa7b9468db021eb3ada7147082eaa41.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/GetContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddContentPlanPostLambda": {
            "id": "AddContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "fa8bd961ae30132fe7cda0078410933d44ea1cdfd1fd28637c141dc071c888bb.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AddScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-AddPost"
                            ]
                          ]
                        },
                        "DeleteScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-DeletePost"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/AddContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditContentPlanPostLambda": {
            "id": "EditContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "470cd2b88ae1d83a5ae6060121db73427426b108e3121fe153171a1def014b8f.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 60
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/EditContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteContentPlanPostLambda": {
            "id": "DeleteContentPlanPostLambda",
            "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2164c5234ecb9968ecfb377a8baa26f34f6262e7f9e06517c54be8add684e846.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AddScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-AddPost"
                            ]
                          ]
                        },
                        "DeleteScheduledPostQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-DeletePost"
                            ]
                          ]
                        },
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlanPosts-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanPostLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "imported-CascadeDeleteQueue-CreateContentPlansLambdas": {
            "id": "imported-CascadeDeleteQueue-CreateContentPlansLambdas",
            "path": "WebRestServicePlansAndPosts/imported-CascadeDeleteQueue-CreateContentPlansLambdas",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "ListContentPlansLambda": {
            "id": "ListContentPlansLambda",
            "path": "WebRestServicePlansAndPosts/ListContentPlansLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e615aec1910987c8cd67e286d41664725034c19c03fc5bd7cba0143d8f0eb39b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/ListContentPlansLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetContentPlanLambda": {
            "id": "GetContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/GetContentPlanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5e013ec369294dba0a7cddac44e60be1d466a1134d3a5684da7b98a148b560ca.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/GetContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddContentPlanLambda": {
            "id": "AddContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/AddContentPlanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a3bf1fa81253a0adce76088fb1454b946577aed43c2ddf322fe2fa01391f4a9c.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/AddContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditContentPlanLambda": {
            "id": "EditContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/EditContentPlanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c6d7ae53cfef220f1dcda90832e4d591936e555d36ddcca37897012774552f4e.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/EditContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteContentPlanLambda": {
            "id": "DeleteContentPlanLambda",
            "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "6b20f285e9deaf7407c0039eb4d3f00e8520dcf80c8d8be21ddb2ef35329a990.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-ContentPlans-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServicePlansAndPosts/DeleteContentPlanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServicePlansAndPosts/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServicePlansAndPosts/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServicePlansAndPosts/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"ListContentPlanPostsLambda80CD292F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"GetContentPlanPostLambdaA8AFC433\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"AddContentPlanPostLambda6114356C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"EditContentPlanPostLambdaB4D253CE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"DeleteContentPlanPostLambda9CD840D1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"ListContentPlansLambda95AC08D7\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"GetContentPlanLambda45DE78B9\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"AddContentPlanLambda2A50CDCC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"EditContentPlanLambdaA1D9BCED\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}",
                "path": "WebRestServicePlansAndPosts/Exports/Output{\"Fn::GetAtt\":[\"DeleteContentPlanLambda37ED3EAE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServicePlansAndPosts/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServicePlansAndPosts/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceSubscriptions": {
        "id": "WebRestServiceSubscriptions",
        "path": "WebRestServiceSubscriptions",
        "children": {
          "imported-AddDeleteContentPlanFromSubscriptionQueue-ForCreateSubscriptionProcessor": {
            "id": "imported-AddDeleteContentPlanFromSubscriptionQueue-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceSubscriptions/imported-AddDeleteContentPlanFromSubscriptionQueue-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "imported-AddDeleteContentPlanFromSubscriptionQueueDLQ-ForCreateSubscriptionProcessor": {
            "id": "imported-AddDeleteContentPlanFromSubscriptionQueueDLQ-ForCreateSubscriptionProcessor",
            "path": "WebRestServiceSubscriptions/imported-AddDeleteContentPlanFromSubscriptionQueueDLQ-ForCreateSubscriptionProcessor",
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_sqs.QueueBase",
              "version": "2.83.1"
            }
          },
          "ListUserSubscriptionPlansBotsLambda": {
            "id": "ListUserSubscriptionPlansBotsLambda",
            "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f93b91a4b27234db24b1bfaef48ca2840c96d41f79dcadf65fb44a3b8ec63c83.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansBotsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetSubscriptionPlanBotLambda": {
            "id": "GetSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "be8ced3a64efd353c959625aefe54c78732e02aacccc2e03d68e21d7d37c3698.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddSubscriptionPlanBotLambda": {
            "id": "AddSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "d17e17148f63a539068b543fd00bd127a5eddb8a756f220195a25a2825fb0e2f.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AddDeleteContentPlanFromSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-ContentPlanToFromSubscription"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditSubscriptionPlanBotLambda": {
            "id": "EditSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "1012702b0a540abef20c04de9297e8eea02348d1321826494eb4555e75a7dd6d.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AddDeleteContentPlanFromSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-ContentPlanToFromSubscription"
                            ]
                          ]
                        },
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddDeleteContentPlanFromSubscription": {
            "id": "AddDeleteContentPlanFromSubscription",
            "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5d1fa46cc93b0afe1618f5c5150c931051feab9bb3182bf75296316e27066777.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-AddDeleteContentPlanFromSubscriptionLambda-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 900
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueForCreateSubscriptionProcessorF50BE4F3": {
                "id": "SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueForCreateSubscriptionProcessorF50BE4F3",
                "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueForCreateSubscriptionProcessorF50BE4F3",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueForCreateSubscriptionProcessorF50BE4F3/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "AddDeleteContentPlanFromSubscription43134AC8"
                        },
                        "batchSize": 1,
                        "enabled": true,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ContentPlanToFromSubscription",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              },
              "SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueDLQForCreateSubscriptionProcessorE07BACEE": {
                "id": "SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueDLQForCreateSubscriptionProcessorE07BACEE",
                "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueDLQForCreateSubscriptionProcessorE07BACEE",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddDeleteContentPlanFromSubscription/SqsEventSource:WebRestServiceSubscriptionsimportedAddDeleteContentPlanFromSubscriptionQueueDLQForCreateSubscriptionProcessorE07BACEE/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::Lambda::EventSourceMapping",
                      "aws:cdk:cloudformation:props": {
                        "functionName": {
                          "Ref": "AddDeleteContentPlanFromSubscription43134AC8"
                        },
                        "batchSize": 1,
                        "enabled": false,
                        "eventSourceArn": "arn:aws:sqs:us-east-1:993738567487:SubscriptionScheduler-ContentPlanToFromSubscription-DLQ",
                        "functionResponseTypes": [
                          "ReportBatchItemFailures"
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_lambda.CfnEventSourceMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.EventSourceMapping",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteSubscriptionPlanBotLambda": {
            "id": "DeleteSubscriptionPlanBotLambda",
            "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e6ade6e84b65bbc3ba92c62ab172edcd955c80da5f70fb26045f159adbe82cb7.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AddDeleteContentPlanFromSubscriptionQueueURL": {
                          "Fn::Join": [
                            "",
                            [
                              "https://sqs.us-east-1.",
                              {
                                "Ref": "AWS::URLSuffix"
                              },
                              "/993738567487/SubscriptionScheduler-ContentPlanToFromSubscription"
                            ]
                          ]
                        },
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansBot-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanBotLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListUserSubscriptionPlansChannelsLambda": {
            "id": "ListUserSubscriptionPlansChannelsLambda",
            "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3502774652bf253fe7bf11aa5b76e3d7110237b57434d4ceed4c29eedacd8caf.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListUserSubscriptionPlansChannelsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetSubscriptionPlanChannelLambda": {
            "id": "GetSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "ac508c3f1ead5c048d2764dc59ee1b400be575922c056ccc1b2020b6956f8e6c.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/GetSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddSubscriptionPlanChannelLambda": {
            "id": "AddSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "e4d0fb19b4fc6b829a6421bb837bf91208b9f5eee42fead7a33d69938a8ef907.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/AddSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditSubscriptionPlanChannelLambda": {
            "id": "EditSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4a174634c82f72f3c28e46d2734d2aabfe34d49cc98234f7ecf293c44bd7c2bf.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/EditSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteSubscriptionPlanChannelLambda": {
            "id": "DeleteSubscriptionPlanChannelLambda",
            "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "f11a014e44529ff43f83e1312fc52042e925b57bffe41380b7a15191cffc6b3b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-UserSubscriptionPlansChannel-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/DeleteSubscriptionPlanChannelLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "SubscribeToPaidSubscriptionLambda": {
            "id": "SubscribeToPaidSubscriptionLambda",
            "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c41fa1e73fb8ddd583d5b3287bbefef78f79ab06f62935357a89ed16fc368329.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-SubscribeToPaidSubscription-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/SubscribeToPaidSubscriptionLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListMasterManagerSubscriptionsLambda": {
            "id": "ListMasterManagerSubscriptionsLambda",
            "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "8902169bfc09357136cb8c02feffa6145604da23204c2fb2b47d46a1c1ac97d6.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "WebAppBotsSubdomainDistributionDomainName": "dxywl8hjigns.cloudfront.net",
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-MasterManager-ListSubscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceSubscriptions/ListMasterManagerSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceSubscriptions/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceSubscriptions/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceSubscriptions/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansBotsLambda8ABC0BCF\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanBotLambdaC174835F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanBotLambdaFB7D5F07\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanBotLambdaE9CE979C\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanBotLambda0DF8E1DA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListUserSubscriptionPlansChannelsLambda53E507FC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"GetSubscriptionPlanChannelLambdaECD513DE\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"AddSubscriptionPlanChannelLambda6DD69303\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"EditSubscriptionPlanChannelLambdaEFC3485D\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"DeleteSubscriptionPlanChannelLambdaE97A9809\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"SubscribeToPaidSubscriptionLambdaF0BF1717\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}",
                "path": "WebRestServiceSubscriptions/Exports/Output{\"Fn::GetAtt\":[\"ListMasterManagerSubscriptionsLambdaCEE81692\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceSubscriptions/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceSubscriptions/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceCRM": {
        "id": "WebRestServiceCRM",
        "path": "WebRestServiceCRM",
        "children": {
          "crmListMyUsersLambda": {
            "id": "crmListMyUsersLambda",
            "path": "WebRestServiceCRM/crmListMyUsersLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "96dacf164864af5432e0dbd1206c219bfd3c7e4460e8f0a8f1a6152d950a5f21.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Users-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmListMyUsersLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmListMyUsersLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "crmBotSubscriptionsLambda": {
            "id": "crmBotSubscriptionsLambda",
            "path": "WebRestServiceCRM/crmBotSubscriptionsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c73302f7db135a461fc4649fe5b198b1ca6fca02036e8cf1f16aee1af1a79735.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Subscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBotSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "crmBotSubscriptionsByUserLambda": {
            "id": "crmBotSubscriptionsByUserLambda",
            "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "78f0f038bd230755bb235a63e11ef3deaa6ed6b66d4b1f42db6f0f0b9af031cb.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Subscriptions-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBotSubscriptionsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "crmChannelSubscriptionsLambda": {
            "id": "crmChannelSubscriptionsLambda",
            "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0c09a41a4e411b66d299f0498d0e80f409ac86e3cd9f9e53e63f2a72f3558ab9.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Channel-Subscriptions-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "crmChannelSubscriptionsByUserLambda": {
            "id": "crmChannelSubscriptionsByUserLambda",
            "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "a14f0ff9807c63697e440b717912328da5170184e4a2697f03f4a66e730d4f98.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Channel-Subscriptions-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmChannelSubscriptionsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "botPaymentsLambda": {
            "id": "botPaymentsLambda",
            "path": "WebRestServiceCRM/botPaymentsLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/botPaymentsLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/botPaymentsLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/botPaymentsLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/botPaymentsLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "af9bfda3ce9ffb0202c3732d014bc71d90fa498f46d551fbead1790132223812.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Payments-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/botPaymentsLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/botPaymentsLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/botPaymentsLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "botPaymentsByUserLambda": {
            "id": "botPaymentsByUserLambda",
            "path": "WebRestServiceCRM/botPaymentsByUserLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5e5631bb644841112bdafd4794f70fed8d69db54e1d51f29595465e5b1795fee.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-Bot-Payments-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/botPaymentsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/botPaymentsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "scheduledPostsByUserLambda": {
            "id": "scheduledPostsByUserLambda",
            "path": "WebRestServiceCRM/scheduledPostsByUserLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "49259e9abb0d06d2fbe394c56c2698cddb0bd56d9e6285b21bf69282fc340771.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-ScheduledPosts-ByUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/scheduledPostsByUserLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/scheduledPostsByUserLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "crmUserProfileLambda": {
            "id": "crmUserProfileLambda",
            "path": "WebRestServiceCRM/crmUserProfileLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmUserProfileLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmUserProfileLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "5c08f902bd654d40055cee5fec79cb30fca1eb534fec4c5a8ff5af033401801a.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-UserProfile-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmUserProfileLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmUserProfileLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmUserProfileLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "crmBanLambda": {
            "id": "crmBanLambda",
            "path": "WebRestServiceCRM/crmBanLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmBanLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmBanLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmBanLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmBanLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "3c4adf089629c910e72f5094946b88ead5cc4bd2acbb9372bb9e54c0bc475469.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-BanUser-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmBanLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmBanLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmBanLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "crmEditUserNotesLambda": {
            "id": "crmEditUserNotesLambda",
            "path": "WebRestServiceCRM/crmEditUserNotesLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "cfbffbe5dd61f9ea5be57a0994b8601a1b4fd674d9325f40a200b2b0f8aebbcd.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-EditUserNotes-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/crmEditUserNotesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/crmEditUserNotesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetMyBotAnalitics": {
            "id": "GetMyBotAnalitics",
            "path": "WebRestServiceCRM/GetMyBotAnalitics",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2f0161adc73a40b3d2688ab64bb969547d8a7af234b687b46a1a1f8392e36a4b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-GetMyBot-Analitics-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/GetMyBotAnalitics/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/GetMyBotAnalitics/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ContentPlanPostStats": {
            "id": "ContentPlanPostStats",
            "path": "WebRestServiceCRM/ContentPlanPostStats",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/ContentPlanPostStats/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/ContentPlanPostStats/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/ContentPlanPostStats/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/ContentPlanPostStats/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "261b5593fdd72fa6b5a6da756bfc28f61e836f1c6c8d8c011d2e59608e77f1f6.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-ContentPlanPostStats-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/ContentPlanPostStats/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/ContentPlanPostStats/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/ContentPlanPostStats/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ContentPlanPostFeedBacks": {
            "id": "ContentPlanPostFeedBacks",
            "path": "WebRestServiceCRM/ContentPlanPostFeedBacks",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0a045c01a3f7423b8eccf04937766bb6b3abb8ab8811358ff7b662681388dcb7.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-ContentPlanPostFeedBacks-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/ContentPlanPostFeedBacks/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ContentPlanPostRates": {
            "id": "ContentPlanPostRates",
            "path": "WebRestServiceCRM/ContentPlanPostRates",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/ContentPlanPostRates/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/ContentPlanPostRates/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/ContentPlanPostRates/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/ContentPlanPostRates/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "45ab61effa99f3b64f87d965ac3969e714a9549b6aeaa61ec6bcb3180c457a13.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-ContentPlanPostRates-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/ContentPlanPostRates/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/ContentPlanPostRates/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/ContentPlanPostRates/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetAdminChatMessagesLambda": {
            "id": "GetAdminChatMessagesLambda",
            "path": "WebRestServiceCRM/GetAdminChatMessagesLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "508cf39543ea47d24c9a4bad6853f3532f5636bf7515ea91a23fb59b9399f5f5.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CRM-GetAdminChatMessages-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRM/GetAdminChatMessagesLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceCRM/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceCRM/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceCRM/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmListMyUsersLambda43CD8954\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsLambdaC994C5AC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsByUserLambda3D9A026A\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsByUserLambda3D9A026A\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBotSubscriptionsByUserLambda3D9A026A\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsLambdaF3058988\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsByUserLambdaE3D1967B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsByUserLambdaE3D1967B\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmChannelSubscriptionsByUserLambdaE3D1967B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"botPaymentsLambda42FF7FB1\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"botPaymentsLambda42FF7FB1\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"botPaymentsLambda42FF7FB1\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"botPaymentsByUserLambda37ECD412\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"botPaymentsByUserLambda37ECD412\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"botPaymentsByUserLambda37ECD412\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"scheduledPostsByUserLambda726BF336\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"scheduledPostsByUserLambda726BF336\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"scheduledPostsByUserLambda726BF336\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmUserProfileLambdaC702497F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmBanLambda32C771E6\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmBanLambda32C771E6\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmBanLambda32C771E6\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"crmEditUserNotesLambda504FE58B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"crmEditUserNotesLambda504FE58B\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"crmEditUserNotesLambda504FE58B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetMyBotAnaliticsF8D38A59\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetMyBotAnaliticsF8D38A59\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"GetMyBotAnaliticsF8D38A59\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ContentPlanPostStatsBFF3AF4D\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ContentPlanPostStatsBFF3AF4D\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"ContentPlanPostStatsBFF3AF4D\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ContentPlanPostFeedBacksD6116E27\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ContentPlanPostFeedBacksD6116E27\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"ContentPlanPostFeedBacksD6116E27\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ContentPlanPostRatesE97D20AA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ContentPlanPostRatesE97D20AA\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"ContentPlanPostRatesE97D20AA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetAdminChatMessagesLambdaF50073BA\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetAdminChatMessagesLambdaF50073BA\",\"Arn\"]}",
                "path": "WebRestServiceCRM/Exports/Output{\"Fn::GetAtt\":[\"GetAdminChatMessagesLambdaF50073BA\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceCRM/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceCRM/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceCRMCampaigns": {
        "id": "WebRestServiceCRMCampaigns",
        "path": "WebRestServiceCRMCampaigns",
        "children": {
          "ListCampaignsInternalLambda": {
            "id": "ListCampaignsInternalLambda",
            "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c064f9f545809ba0a47c93325a3e1ca8e1b03cda9e8f3ffd7398f435cdd58fb6.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsInternal-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsInternalLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetCampaignInternalLambda": {
            "id": "GetCampaignInternalLambda",
            "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0ed9fd7635f193bcaf0de0f9b5e691965f74cf3c2745b8befbd35e9046cabac3.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsInternal-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/GetCampaignInternalLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddCampaignInternalLambda": {
            "id": "AddCampaignInternalLambda",
            "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "c31ad6c5d84209a3d9f75a7564b36864990e738cef77d27768095891e9770c6b.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsInternal-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/AddCampaignInternalLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditCampaignInternalLambda": {
            "id": "EditCampaignInternalLambda",
            "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "b5db13a22a98128ebf797ff0ff5d0fde33a9f565c775603a8a7938f0674d0629.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsInternal-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/EditCampaignInternalLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteCampaignInternalLambda": {
            "id": "DeleteCampaignInternalLambda",
            "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0697911dd02981243a1c929bda38978894d783cebcd1b1e5155a02857bdf40ac.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsInternal-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignInternalLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "ListCampaignsUTMLambda": {
            "id": "ListCampaignsUTMLambda",
            "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "cad61483a6ce15175fe77966f98960ee3544dab37b78397f018f49150384a869.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsUTM-List-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/ListCampaignsUTMLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "GetCampaignUTMLambda": {
            "id": "GetCampaignUTMLambda",
            "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "af75db0e333c4efc4737121fcd0199323a8d4279e8573bf6209e7925e1f29da8.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsUTM-Get-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/GetCampaignUTMLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "AddCampaignUTMLambda": {
            "id": "AddCampaignUTMLambda",
            "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "2d79795dfa48c11d18e97fe6b2350d7c681ee7165f80b67a95d0b74d26ed5087.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsUTM-Add-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/AddCampaignUTMLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "EditCampaignUTMLambda": {
            "id": "EditCampaignUTMLambda",
            "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "04e6894530c8239e6e580ee38537063d194158b78cee139198544cbd144d5724.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsUTM-Edit-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/EditCampaignUTMLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "DeleteCampaignUTMLambda": {
            "id": "DeleteCampaignUTMLambda",
            "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "065dde8137ca56639874a5171189af332e48ef10ddd683df110b6b30d33f7981.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "CascadeDeleteTopic": "arn:aws:sns:us-east-1:993738567487:CascadeDeleteTopic.fifo",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-CampaignsUTM-Delete-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceCRMCampaigns/DeleteCampaignUTMLambda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceCRMCampaigns/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceCRMCampaigns/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceCRMCampaigns/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"ListCampaignsInternalLambda5F179309\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListCampaignsInternalLambda5F179309\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"ListCampaignsInternalLambda5F179309\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetCampaignInternalLambda54A78C80\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetCampaignInternalLambda54A78C80\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"GetCampaignInternalLambda54A78C80\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddCampaignInternalLambda4BE5231D\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddCampaignInternalLambda4BE5231D\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"AddCampaignInternalLambda4BE5231D\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditCampaignInternalLambda8358F0FC\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditCampaignInternalLambda8358F0FC\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"EditCampaignInternalLambda8358F0FC\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteCampaignInternalLambdaBDCD5E62\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteCampaignInternalLambdaBDCD5E62\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"DeleteCampaignInternalLambdaBDCD5E62\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"ListCampaignsUTMLambda5E201332\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"ListCampaignsUTMLambda5E201332\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"ListCampaignsUTMLambda5E201332\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetCampaignUTMLambda4C3748F8\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetCampaignUTMLambda4C3748F8\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"GetCampaignUTMLambda4C3748F8\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"AddCampaignUTMLambda3881BFE4\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"AddCampaignUTMLambda3881BFE4\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"AddCampaignUTMLambda3881BFE4\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"EditCampaignUTMLambda1DBDCD9B\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"EditCampaignUTMLambda1DBDCD9B\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"EditCampaignUTMLambda1DBDCD9B\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"DeleteCampaignUTMLambda6830D57F\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"DeleteCampaignUTMLambda6830D57F\",\"Arn\"]}",
                "path": "WebRestServiceCRMCampaigns/Exports/Output{\"Fn::GetAtt\":[\"DeleteCampaignUTMLambda6830D57F\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceCRMCampaigns/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceCRMCampaigns/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestServiceLanding": {
        "id": "WebRestServiceLanding",
        "path": "WebRestServiceLanding",
        "children": {
          "SetBotLandingPageLamda": {
            "id": "SetBotLandingPageLamda",
            "path": "WebRestServiceLanding/SetBotLandingPageLamda",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "4b5ba95969b454065f03d3a1c339c7cf53a5afb43f6545ab346e691510e4c3ae.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-Update-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceLanding/SetBotLandingPageLamda/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "GetBotLandingPrivate": {
            "id": "GetBotLandingPrivate",
            "path": "WebRestServiceLanding/GetBotLandingPrivate",
            "children": {
              "Code": {
                "id": "Code",
                "path": "WebRestServiceLanding/GetBotLandingPrivate/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "WebRestServiceLanding/GetBotLandingPrivate/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "WebRestServiceLanding/GetBotLandingPrivate/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "WebRestServiceLanding/GetBotLandingPrivate/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "0437bee7c2644edbf2fc95442890379afa3bea1170166ecdcf045d2a73007827.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "react-BotLanding-GetPrivate-Lambda",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 5
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "WebRestServiceLanding/GetBotLandingPrivate/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestServiceLanding/GetBotLandingPrivate/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "WebRestServiceLanding/GetBotLandingPrivate/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestServiceLanding/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestServiceLanding/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "Exports": {
            "id": "Exports",
            "path": "WebRestServiceLanding/Exports",
            "children": {
              "Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}",
                "path": "WebRestServiceLanding/Exports/Output{\"Fn::GetAtt\":[\"SetBotLandingPageLamda13B7B859\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Output{\"Fn::GetAtt\":[\"GetBotLandingPrivateD34067C9\",\"Arn\"]}": {
                "id": "Output{\"Fn::GetAtt\":[\"GetBotLandingPrivateD34067C9\",\"Arn\"]}",
                "path": "WebRestServiceLanding/Exports/Output{\"Fn::GetAtt\":[\"GetBotLandingPrivateD34067C9\",\"Arn\"]}",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestServiceLanding/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestServiceLanding/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebRestGatewayService": {
        "id": "WebRestGatewayService",
        "path": "WebRestGatewayService",
        "children": {
          "Zone": {
            "id": "Zone",
            "path": "WebRestGatewayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "importedAuthorizer": {
            "id": "importedAuthorizer",
            "path": "WebRestGatewayService/importedAuthorizer",
            "children": {
              "WebRestGatewayServiceWebRestGatewayServiceLambdaJWTAuthorizerObjectD9C1FB07:Permissions": {
                "id": "WebRestGatewayServiceWebRestGatewayServiceLambdaJWTAuthorizerObjectD9C1FB07:Permissions",
                "path": "WebRestGatewayService/importedAuthorizer/WebRestGatewayServiceWebRestGatewayServiceLambdaJWTAuthorizerObjectD9C1FB07:Permissions",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": "arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":execute-api:us-east-1:993738567487:",
                          {
                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                          },
                          "/authorizers/",
                          {
                            "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                          }
                        ]
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
              "version": "2.83.1"
            }
          },
          "WebRestGatewayService-LambdaJWTAuthorizerObject": {
            "id": "WebRestGatewayService-LambdaJWTAuthorizerObject",
            "path": "WebRestGatewayService/WebRestGatewayService-LambdaJWTAuthorizerObject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestGatewayService/WebRestGatewayService-LambdaJWTAuthorizerObject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebRestGatewayService-LambdaJWTAuthorizerObject",
                    "restApiId": {
                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                    },
                    "type": "REQUEST",
                    "authorizerResultTtlInSeconds": 0,
                    "authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda/invocations",
                    "identitySource": "method.request.header.cookie"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RequestAuthorizer",
              "version": "2.83.1"
            }
          },
          "WebRestGatewayService-GWAPI": {
            "id": "WebRestGatewayService-GWAPI",
            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebRestGatewayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.83.1"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebRestGatewayServiceGWAPICloudWatchRole0810C0ED",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.83.1"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.83.1"
                }
              },
              "DeploymentStage.SecureAPI": {
                "id": "DeploymentStage.SecureAPI",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/DeploymentStage.SecureAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/DeploymentStage.SecureAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                        },
                        "deploymentId": {
                          "Ref": "WebRestGatewayServiceGWAPIDeploymentDC8FF3A09c8950a40586535062f2c3dad2cd024c"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "SecureAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.83.1"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            },
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.83.1"
                    }
                  },
                  "Bots": {
                    "id": "Bots",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Bots",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsListFA9DC731"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotsLambdaC9B0E149Arn911E2DAF"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Bots/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsListFA9DC731"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotsLambdaC9B0E149Arn911E2DAF"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsAdd110A51F6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Bots.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Bots.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..Bots.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotLambda25A32D8FArn56F0CC80"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/Bots/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsAdd110A51F6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddBotLambda25A32D8FArn56F0CC80"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsGet21B4D384"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Bots.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotLambda0C4EA18FArn4F8416C0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Bots/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsGet21B4D384"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotLambda0C4EA18FArn4F8416C0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsEdit6406CE96"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotLambda82B1C036Arn196628BE"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Bots/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsEdit6406CE96"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotLambda82B1C036Arn196628BE"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Register": {
                        "id": "Register",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Register",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsRegister9663AA23"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Register": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Register",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.Register",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttRegisterBotLambda695100A4Arn6ABB23B6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Bots/Register"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Register/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsRegister9663AA23"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttRegisterBotLambda695100A4Arn6ABB23B6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "UnRegister": {
                        "id": "UnRegister",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "UnRegister",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsUnRegister0924FBE3"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.UnRegister": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.UnRegister",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Bots.UnRegister",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttUnRegisterBotLambda0B03CDDEArn070643C9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Bots/UnRegister"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/UnRegister/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsUnRegister0924FBE3"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttUnRegisterBotLambda0B03CDDEArn070643C9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBots59892E26"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsDeleteAC7BB984"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Bots.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Bots.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Bots.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotLambda6B24EC61ArnD57686A7"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/Bots/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Bots/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotsDeleteAC7BB984"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteBotLambda6B24EC61ArnD57686A7"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "BotCommands": {
                    "id": "BotCommands",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "BotCommands",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsListDECD89D4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotCommandsLambda223B4828Arn1F40E167"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/BotCommands/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsListDECD89D4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListBotCommandsLambda223B4828Arn1F40E167"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsGetADFC8902"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotCommands.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotCommandLambdaC92683CDArn891B4B9D"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/BotCommands/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsGetADFC8902"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotCommandLambdaC92683CDArn891B4B9D"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotCommandsD64DD4DC"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsEdit6724348B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotCommands.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotCommands.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotCommands.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotCommandLambda5F3C4BF1Arn7A6CAEE0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/BotCommands/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotCommands/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotCommandsEdit6724348B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotCommandLambda5F3C4BF1Arn7A6CAEE0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Channels": {
                    "id": "Channels",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Channels",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsList5213BEFB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListChannelsLambda0D2B8521Arn5D199E53"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Channels/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsList5213BEFB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListChannelsLambda0D2B8521Arn5D199E53"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsGetDF872E27"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Channels.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetChannelLambdaE5A9F403Arn6617CF58"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Channels/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsGetDF872E27"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetChannelLambdaE5A9F403Arn6617CF58"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsEditC1D53C64"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Channels.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Channels.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Channels.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditChannelLambdaAE9A056AArn8C776BEA"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/Channels/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsEditC1D53C64"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditChannelLambdaAE9A056AArn8C776BEA"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIChannels96BA5EA5"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsDelete1759DD5F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Channels.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Channels.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..Channels.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteChannelLambda8045FC58Arn562C1279"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/Channels/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Channels/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIChannelsDelete1759DD5F"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteChannelLambda8045FC58Arn562C1279"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "CalendarMeeting": {
                    "id": "CalendarMeeting",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "CalendarMeeting",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingList3E9A241E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListMeetingsLambdaF16F9182ArnDB09EC03"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/CalendarMeeting/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingList3E9A241E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListMeetingsLambdaF16F9182ArnDB09EC03"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingAdd346AFB8A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..CalendarMeeting.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..CalendarMeeting.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..CalendarMeeting.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddMeetingLambda16941AE7ArnF34C1764"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/CalendarMeeting/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingAdd346AFB8A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddMeetingLambda16941AE7ArnF34C1764"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingGetB292CC53"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetMeetingLambda5B5F43FBArnC2D7DED0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/CalendarMeeting/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingGetB292CC53"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetMeetingLambda5B5F43FBArnC2D7DED0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingEdit04EACEF7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..CalendarMeeting.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..CalendarMeeting.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..CalendarMeeting.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditMeetingLambdaF8CDD424Arn05F59C10"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/CalendarMeeting/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingEdit04EACEF7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditMeetingLambdaF8CDD424Arn05F59C10"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingDelete1AE17C0D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..CalendarMeeting.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..CalendarMeeting.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..CalendarMeeting.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteMeetingLambdaADE38392Arn0BF69B1E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/CalendarMeeting/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingDelete1AE17C0D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeleteMeetingLambdaADE38392Arn0BF69B1E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListParticipants": {
                        "id": "ListParticipants",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "ListParticipants",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingListParticipantsD4645675"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.ListParticipants": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.ListParticipants",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.ListParticipants",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListMeetingParticipantsLambdaF638D7BAArnAB86B129"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/CalendarMeeting/ListParticipants"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/ListParticipants/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingListParticipantsD4645675"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListMeetingParticipantsLambdaF638D7BAArnAB86B129"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "CheckAddMeetingLimit": {
                        "id": "CheckAddMeetingLimit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPICalendarMeeting18658F41"
                                },
                                "pathPart": "CheckAddMeetingLimit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingCheckAddMeetingLimitDBA156C1"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.CheckAddMeetingLimit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.CheckAddMeetingLimit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..CalendarMeeting.CheckAddMeetingLimit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttCheckAddMeetingSubscriptionLambdaC5500A8CArn8D62B886"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/CalendarMeeting/CheckAddMeetingLimit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/CalendarMeeting/CheckAddMeetingLimit/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPICalendarMeetingCheckAddMeetingLimitDBA156C1"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttCheckAddMeetingSubscriptionLambdaC5500A8CArn8D62B886"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "PaymentOptions": {
                    "id": "PaymentOptions",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "PaymentOptions",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsListF8AD74C6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListPaymentOptionsLambdaACAA5262Arn4EB69170"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/PaymentOptions/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsListF8AD74C6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListPaymentOptionsLambdaACAA5262Arn4EB69170"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsGetD8A08886"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..PaymentOptions.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetPaymentOptionLambdaD6DBF61AArn18D20D5D"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/PaymentOptions/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsGetD8A08886"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetPaymentOptionLambdaD6DBF61AArn18D20D5D"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsAddB6F04898"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..PaymentOptions.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..PaymentOptions.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..PaymentOptions.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddPaymentOptionLambdaBFF77B7FArn872A1AA4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/PaymentOptions/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsAddB6F04898"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttAddPaymentOptionLambdaBFF77B7FArn872A1AA4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsEdit1678C581"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PaymentOptions.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PaymentOptions.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PaymentOptions.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditPaymentOptionLambda398037A2Arn5595B7A0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/PaymentOptions/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsEdit1678C581"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditPaymentOptionLambda398037A2Arn5595B7A0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPaymentOptions63EAEA41"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsDeleteE89F8DB8"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..PaymentOptions.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..PaymentOptions.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..PaymentOptions.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeletePaymentOptionLambdaEC66351CArn3F9622FF"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/PaymentOptions/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PaymentOptions/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIPaymentOptionsDeleteE89F8DB8"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttDeletePaymentOptionLambdaEC66351CArn3F9622FF"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "BotMenuSettings": {
                    "id": "BotMenuSettings",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "BotMenuSettings",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsC168AA4D"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsC168AA4D"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsGet6FB8F318"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotMenuSettings.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotMenuSettings.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..BotMenuSettings.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotMenuSettingsLambda422E24D9Arn9191AE2F"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/BotMenuSettings/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsGet6FB8F318"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttGetBotMenuSettingsLambda422E24D9Arn9191AE2F"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsC168AA4D"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsEditDB0F006C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotMenuSettings.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotMenuSettings.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..BotMenuSettings.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotMenuSettingsLambda54B828C0ArnA1EF425B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/BotMenuSettings/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/BotMenuSettings/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIBotMenuSettingsEditDB0F006C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttEditBotMenuSettingsLambda54B828C0ArnA1EF425B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Notifications": {
                    "id": "Notifications",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Notifications",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPINotifications1388921F"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPINotifications1388921F"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPINotificationsList48A9404D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Notifications.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Notifications.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Notifications.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListNewNotificationsLambdaEE68088FArn054B8752"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/Notifications/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Notifications/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPINotificationsList48A9404D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMain:ExportsOutputFnGetAttListNewNotificationsLambdaEE68088FArn054B8752"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "TelegramFiles": {
                    "id": "TelegramFiles",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "TelegramFiles",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesListAB756C34"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListTelegramFilesLambda11E43599ArnC7D2F951"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/TelegramFiles/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesListAB756C34"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttListTelegramFilesLambda11E43599ArnC7D2F951"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesGetC9E7BBF4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..TelegramFiles.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetTelegramFileLambda0285A5D8Arn7A92FC36"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/TelegramFiles/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesGetC9E7BBF4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetTelegramFileLambda0285A5D8Arn7A92FC36"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesEdit1D4B4978"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..TelegramFiles.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..TelegramFiles.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..TelegramFiles.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditTelegramFileLambda541FB43BArn84EC7D28"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/TelegramFiles/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesEdit1D4B4978"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttEditTelegramFileLambda541FB43BArn84EC7D28"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPITelegramFiles9C43EC8D"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesDeleteC6B9FE8D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..TelegramFiles.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..TelegramFiles.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..TelegramFiles.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteTelegramFileLambdaF1882CC1Arn9F939F63"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/TelegramFiles/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/TelegramFiles/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPITelegramFilesDeleteC6B9FE8D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttDeleteTelegramFileLambdaF1882CC1Arn9F939F63"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "PreSignedUrls": {
                    "id": "PreSignedUrls",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "PreSignedUrls",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPreSignedUrls68F0A7FC"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "PUT": {
                        "id": "PUT",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/PUT",
                        "children": {
                          "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PreSignedUrls": {
                            "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PreSignedUrls",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..PreSignedUrls",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetGetPresignedUrlLambda43F48E6FArn38B1BA68"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                      },
                                      "/PUT/PreSignedUrls"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/PreSignedUrls/PUT/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "PUT",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIPreSignedUrls68F0A7FC"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceFiles:ExportsOutputFnGetAttGetGetPresignedUrlLambda43F48E6FArn38B1BA68"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "SendTestMessage": {
                    "id": "SendTestMessage",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "SendTestMessage",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "SendTestMessage": {
                        "id": "SendTestMessage",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "pathPart": "SendTestMessage",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageA6BDC546"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestMessage": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestMessage",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestMessage",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestMessageLambdaD3B92DD3Arn2DACEF4C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/SendTestMessage/SendTestMessage"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageA6BDC546"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestMessageLambdaD3B92DD3Arn2DACEF4C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "SendTestFile": {
                        "id": "SendTestFile",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "pathPart": "SendTestFile",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendTestFile354FB12E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestFile": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestFile",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendTestFile",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestFileLambda65A31CEBArn8F991A6C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/SendTestMessage/SendTestFile"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendTestFile/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendTestFile354FB12E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendTestFileLambda65A31CEBArn8F991A6C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "SendDirectMessage": {
                        "id": "SendDirectMessage",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPISendTestMessage5D5034DE"
                                },
                                "pathPart": "SendDirectMessage",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendDirectMessage681F9A31"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendDirectMessage": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendDirectMessage",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..SendTestMessage.SendDirectMessage",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendDirectMessageFromAdminLambda39C70282Arn806777E9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/SendTestMessage/SendDirectMessage"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/SendTestMessage/SendDirectMessage/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPISendTestMessageSendDirectMessage681F9A31"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttSendDirectMessageFromAdminLambda39C70282Arn806777E9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "DigitalStoreCategories": {
                    "id": "DigitalStoreCategories",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "DigitalStoreCategories",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategories1A93F837"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategories1A93F837"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesList2E1CC25C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreCategories.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreCategories.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreCategories.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListDigitalStoreCategoriesLambda6DBA20AEArn37A5480E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/DigitalStoreCategories/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesList2E1CC25C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListDigitalStoreCategoriesLambda6DBA20AEArn37A5480E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategories1A93F837"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesGet22ABA026"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreCategories.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreCategories.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreCategories.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttGetDigitalStoreCategoryLambdaDC94DDF8ArnCDAE8971"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/DigitalStoreCategories/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesGet22ABA026"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttGetDigitalStoreCategoryLambdaDC94DDF8ArnCDAE8971"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategories1A93F837"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesAdd1E041F0B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..DigitalStoreCategories.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..DigitalStoreCategories.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..DigitalStoreCategories.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttAddDigitalStoreCategoryLambda6A9CF57AArn55FA668C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/DigitalStoreCategories/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesAdd1E041F0B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttAddDigitalStoreCategoryLambda6A9CF57AArn55FA668C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategories1A93F837"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesEdit2A48B265"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..DigitalStoreCategories.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..DigitalStoreCategories.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..DigitalStoreCategories.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttEditDigitalStoreCategoryLambdaBFA95C19ArnD4AC2BE5"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/DigitalStoreCategories/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesEdit2A48B265"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttEditDigitalStoreCategoryLambdaBFA95C19ArnD4AC2BE5"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategories1A93F837"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesDelete4A21118C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..DigitalStoreCategories.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..DigitalStoreCategories.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..DigitalStoreCategories.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttDeleteDigitalStoreCategoryLambdaEEDC7382Arn6FE29EA9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/DigitalStoreCategories/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreCategories/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreCategoriesDelete4A21118C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttDeleteDigitalStoreCategoryLambdaEEDC7382Arn6FE29EA9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "DigitalStoreItems": {
                    "id": "DigitalStoreItems",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "DigitalStoreItems",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsListB644FCC5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListDigitalStoreItemsLambda8AE9AC9BArnD67E1AF0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/DigitalStoreItems/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsListB644FCC5"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListDigitalStoreItemsLambda8AE9AC9BArnD67E1AF0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListForPost": {
                        "id": "ListForPost",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "pathPart": "ListForPost",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsListForPost04A67784"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.ListForPost": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.ListForPost",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.ListForPost",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListDigitalStoreItemsForContentPlanPostLambdaC602A07FArnA1049898"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/DigitalStoreItems/ListForPost"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/ListForPost/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsListForPost04A67784"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttListDigitalStoreItemsForContentPlanPostLambdaC602A07FArnA1049898"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsGetBB70059C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..DigitalStoreItems.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttGetDigitalStoreItemLambdaF44BF501Arn0B622CE3"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/DigitalStoreItems/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsGetBB70059C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttGetDigitalStoreItemLambdaF44BF501Arn0B622CE3"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsAddB10B9CC4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..DigitalStoreItems.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..DigitalStoreItems.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..DigitalStoreItems.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttAddDigitalStoreItemLambda6822F670Arn2328B0A4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/DigitalStoreItems/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsAddB10B9CC4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttAddDigitalStoreItemLambda6822F670Arn2328B0A4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsEditAB50DF0D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..DigitalStoreItems.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..DigitalStoreItems.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..DigitalStoreItems.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttEditDigitalStoreItemLambda5AF818E1ArnC3B396A5"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/DigitalStoreItems/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsEditAB50DF0D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttEditDigitalStoreItemLambda5AF818E1ArnC3B396A5"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsD1978B37"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsDeleteB2E97243"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..DigitalStoreItems.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..DigitalStoreItems.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..DigitalStoreItems.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttDeleteDigitalStoreItemLambda946778DBArnF8EDFD81"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/DigitalStoreItems/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/DigitalStoreItems/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDigitalStoreItemsDeleteB2E97243"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttDeleteDigitalStoreItemLambda946778DBArnF8EDFD81"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "modul_ru": {
                    "id": "modul_ru",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "modul_ru",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPImodulru2BE4F7C1"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "GeneratePayment": {
                        "id": "GeneratePayment",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPImodulru2BE4F7C1"
                                },
                                "pathPart": "GeneratePayment",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPImodulruGeneratePayment9FAF790E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..modul_ru.GeneratePayment": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..modul_ru.GeneratePayment",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..modul_ru.GeneratePayment",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttModulPaymentGenerateDataFCE9EB60Arn0A530F46"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/modul_ru/GeneratePayment"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/modul_ru/GeneratePayment/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPImodulruGeneratePayment9FAF790E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceMessagesAndPayments:ExportsOutputFnGetAttModulPaymentGenerateDataFCE9EB60Arn0A530F46"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "ContentPlanPosts": {
                    "id": "ContentPlanPosts",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "ContentPlanPosts",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsListBB2D9C57"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlanPostsLambda80CD292FArn1C08CB12"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlanPosts/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsListBB2D9C57"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlanPostsLambda80CD292FArn1C08CB12"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsGetFFE6CC28"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlanPosts.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanPostLambdaA8AFC433Arn0B42A341"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlanPosts/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsGetFFE6CC28"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanPostLambdaA8AFC433Arn0B42A341"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsAdd75552A00"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlanPosts.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlanPosts.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlanPosts.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanPostLambda6114356CArn3F1CC64B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/ContentPlanPosts/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsAdd75552A00"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanPostLambda6114356CArn3F1CC64B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsEditD5F7AE62"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlanPosts.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlanPosts.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlanPosts.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanPostLambdaB4D253CEArnF266F911"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/ContentPlanPosts/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsEditD5F7AE62"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanPostLambdaB4D253CEArnF266F911"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlanPosts32A9A40C"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsDelete46F5F6E7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlanPosts.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlanPosts.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlanPosts.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanPostLambda9CD840D1Arn94C3F856"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/ContentPlanPosts/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlanPostsDelete46F5F6E7"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanPostLambda9CD840D1Arn94C3F856"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "ContentPlans": {
                    "id": "ContentPlans",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "ContentPlans",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansList33832890"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlansLambda95AC08D7Arn9EA4958E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlans/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansList33832890"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttListContentPlansLambda95AC08D7Arn9EA4958E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansGetC8561DB4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..ContentPlans.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanLambda45DE78B9ArnAA90AFA2"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/ContentPlans/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansGetC8561DB4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttGetContentPlanLambda45DE78B9ArnAA90AFA2"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansAddB8CA0143"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlans.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlans.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..ContentPlans.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanLambda2A50CDCCArn9274FE09"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/ContentPlans/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansAddB8CA0143"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttAddContentPlanLambda2A50CDCCArn9274FE09"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansEdit8C7C530A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlans.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlans.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..ContentPlans.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanLambdaA1D9BCEDArn67D08860"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/ContentPlans/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansEdit8C7C530A"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttEditContentPlanLambdaA1D9BCEDArn67D08860"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIContentPlansF25C4FC4"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansDelete19074E7E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlans.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlans.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..ContentPlans.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanLambda37ED3EAEArn7FB4BD17"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/ContentPlans/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/ContentPlans/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIContentPlansDelete19074E7E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServicePlansAndPosts:ExportsOutputFnGetAttDeleteContentPlanLambda37ED3EAEArn7FB4BD17"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "UserSubscriptionPlansBot": {
                    "id": "UserSubscriptionPlansBot",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "UserSubscriptionPlansBot",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotListDBB0AA1B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansBotsLambda8ABC0BCFArn71867F26"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansBot/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotListDBB0AA1B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansBotsLambda8ABC0BCFArn71867F26"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotGet263674B6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansBot.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanBotLambdaC174835FArn2A3E58D5"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansBot/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotGet263674B6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanBotLambdaC174835FArn2A3E58D5"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotAdd2F59206D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansBot.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansBot.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansBot.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanBotLambdaFB7D5F07Arn87E30106"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/UserSubscriptionPlansBot/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotAdd2F59206D"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanBotLambdaFB7D5F07Arn87E30106"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotEdit785514A2"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansBot.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansBot.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansBot.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanBotLambdaE9CE979CArn06838E5E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/UserSubscriptionPlansBot/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotEdit785514A2"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanBotLambdaE9CE979CArn06838E5E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBot0675052C"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotDeleteAEF27662"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansBot.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansBot.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansBot.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanBotLambda0DF8E1DAArnEFE65144"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/UserSubscriptionPlansBot/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansBot/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansBotDeleteAEF27662"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanBotLambda0DF8E1DAArnEFE65144"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "UserSubscriptionPlansChannel": {
                    "id": "UserSubscriptionPlansChannel",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "UserSubscriptionPlansChannel",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelList861BF3DF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.List": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.List",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansChannelsLambda53E507FCArn6B90CC61"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansChannel/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelList861BF3DF"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListUserSubscriptionPlansChannelsLambda53E507FCArn6B90CC61"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelGet8FC73797"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.Get": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.Get",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..UserSubscriptionPlansChannel.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanChannelLambdaECD513DEArn3491567A"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/UserSubscriptionPlansChannel/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelGet8FC73797"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttGetSubscriptionPlanChannelLambdaECD513DEArn3491567A"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelAddC6523151"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansChannel.Add": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansChannel.Add",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.POST..UserSubscriptionPlansChannel.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanChannelLambda6DD69303ArnB6102E9B"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/POST/UserSubscriptionPlansChannel/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelAddC6523151"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttAddSubscriptionPlanChannelLambda6DD69303ArnB6102E9B"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelEdit5C02ADCA"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansChannel.Edit": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansChannel.Edit",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..UserSubscriptionPlansChannel.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanChannelLambdaEFC3485DArnD5A6B091"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/UserSubscriptionPlansChannel/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelEdit5C02ADCA"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttEditSubscriptionPlanChannelLambdaEFC3485DArnD5A6B091"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannel8D1ED6FB"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelDelete0EE53039"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansChannel.Delete": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansChannel.Delete",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.DELETE..UserSubscriptionPlansChannel.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanChannelLambdaE97A9809Arn861C66D6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/DELETE/UserSubscriptionPlansChannel/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/UserSubscriptionPlansChannel/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIUserSubscriptionPlansChannelDelete0EE53039"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttDeleteSubscriptionPlanChannelLambdaE97A9809Arn861C66D6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "MasterManager": {
                    "id": "MasterManager",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "MasterManager",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "SubscribeToPaidSubscription": {
                        "id": "SubscribeToPaidSubscription",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "pathPart": "SubscribeToPaidSubscription",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerSubscribeToPaidSubscription915B229E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..MasterManager.SubscribeToPaidSubscription": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..MasterManager.SubscribeToPaidSubscription",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..MasterManager.SubscribeToPaidSubscription",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttSubscribeToPaidSubscriptionLambdaF0BF1717Arn1C0B4AD6"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/PUT/MasterManager/SubscribeToPaidSubscription"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/SubscribeToPaidSubscription/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerSubscribeToPaidSubscription915B229E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttSubscribeToPaidSubscriptionLambdaF0BF1717Arn1C0B4AD6"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMySubscriptions": {
                        "id": "ListMySubscriptions",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebRestGatewayServiceGWAPIMasterManagerC51AFBF0"
                                },
                                "pathPart": "ListMySubscriptions",
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerListMySubscriptionsFF82C433"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET",
                            "children": {
                              "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.ListMySubscriptions": {
                                "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.ListMySubscriptions",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..MasterManager.ListMySubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListMasterManagerSubscriptionsLambdaCEE81692Arn6EBFB4B0"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                          },
                                          "/GET/MasterManager/ListMySubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/MasterManager/ListMySubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebRestGatewayServiceGWAPIMasterManagerListMySubscriptionsFF82C433"
                                    },
                                    "restApiId": {
                                      "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceSubscriptions:ExportsOutputFnGetAttListMasterManagerSubscriptionsLambdaCEE81692Arn6EBFB4B0"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Landing": {
                    "id": "Landing",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebRestGatewayServiceGWAPIDAB8AE6A",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "Landing",
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPILandingB378EACF"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "PUT": {
                        "id": "PUT",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/PUT",
                        "children": {
                          "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Landing": {
                            "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Landing",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/PUT/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.PUT..Landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttSetBotLandingPageLamda13B7B859Arn11C00CF1"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                      },
                                      "/PUT/Landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/PUT/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "PUT",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPILandingB378EACF"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttSetBotLandingPageLamda13B7B859Arn11C00CF1"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "GET": {
                        "id": "GET",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/GET",
                        "children": {
                          "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Landing": {
                            "id": "ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Landing",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/GET/ApiPermission.WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D.GET..Landing",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                              "aws:cdk:cloudformation:props": {
                                "action": "lambda:InvokeFunction",
                                "functionName": {
                                  "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttGetBotLandingPrivateD34067C9Arn5B36310B"
                                },
                                "principal": "apigateway.amazonaws.com",
                                "sourceArn": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:",
                                      {
                                        "Ref": "AWS::Partition"
                                      },
                                      ":execute-api:us-east-1:993738567487:",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                      },
                                      "/",
                                      {
                                        "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                                      },
                                      "/GET/Landing"
                                    ]
                                  ]
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                              "version": "2.83.1"
                            }
                          },
                          "Resource": {
                            "id": "Resource",
                            "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/Default/Landing/GET/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "GET",
                                "resourceId": {
                                  "Ref": "WebRestGatewayServiceGWAPILandingB378EACF"
                                },
                                "restApiId": {
                                  "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                                },
                                "authorizationType": "CUSTOM",
                                "authorizerId": {
                                  "Ref": "WebRestGatewayServiceLambdaJWTAuthorizerObjectC904078A"
                                },
                                "integration": {
                                  "type": "AWS_PROXY",
                                  "uri": {
                                    "Fn::Join": [
                                      "",
                                      [
                                        "arn:",
                                        {
                                          "Ref": "AWS::Partition"
                                        },
                                        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                        {
                                          "Fn::ImportValue": "WebRestServiceLanding:ExportsOutputFnGetAttGetBotLandingPrivateD34067C9Arn5B36310B"
                                        },
                                        "/invocations"
                                      ]
                                    ]
                                  },
                                  "integrationHttpMethod": "POST"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.83.1"
                }
              },
              "WebRestGatewayService-GWAPI-UsagePlan": {
                "id": "WebRestGatewayService-GWAPI-UsagePlan",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            },
                            "stage": {
                              "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                            },
                            "throttle": {}
                          }
                        ],
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "WebRestGatewayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.83.1"
                }
              },
              "WebRestGatewayService-GW-SubDomain": {
                "id": "WebRestGatewayService-GW-SubDomain",
                "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "secure-api.pompona.net",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/d6dd0f38-40b6-45ba-a14d-e23f47f6dcf0"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.83.1"
                    }
                  },
                  "Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D": {
                    "id": "Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D",
                    "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain/Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebRestGatewayService/WebRestGatewayService-GWAPI/WebRestGatewayService-GW-SubDomain/Map:--=>WebRestGatewayServiceWebRestGatewayServiceGWAPI98E19A6D/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebRestGatewayServiceGWAPIWebRestGatewayServiceGWSubDomain2118EFBC"
                            },
                            "restApiId": {
                              "Ref": "WebRestGatewayServiceGWAPIDAB8AE6A"
                            },
                            "stage": {
                              "Ref": "WebRestGatewayServiceGWAPIDeploymentStageSecureAPI345F138C"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.83.1"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebRestGatewayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "WebRestGatewayService-ARecord": {
            "id": "WebRestGatewayService-ARecord",
            "path": "WebRestGatewayService/WebRestGatewayService-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebRestGatewayService/WebRestGatewayService-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "secure-api.pompona.net.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebRestGatewayServiceGWAPIWebRestGatewayServiceGWSubDomain2118EFBC",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebRestGatewayServiceGWAPIWebRestGatewayServiceGWSubDomain2118EFBC",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z03470091PWKKIZTYD5L4"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.83.1"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebRestGatewayService/WebRestGatewayService-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebRestGatewayService/WebRestGatewayService-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.83.1"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.83.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebRestGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.83.1"
            }
          },
          "WebRestGatewayService-APIGW-SecureAPI": {
            "id": "WebRestGatewayService-APIGW-SecureAPI",
            "path": "WebRestGatewayService/WebRestGatewayService-APIGW-SecureAPI",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebRestGatewayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebRestGatewayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebRestGatewayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebRestGatewayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "WebCRMGatewayService": {
        "id": "WebCRMGatewayService",
        "path": "WebCRMGatewayService",
        "children": {
          "Zone": {
            "id": "Zone",
            "path": "WebCRMGatewayService/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "importedAuthorizer": {
            "id": "importedAuthorizer",
            "path": "WebCRMGatewayService/importedAuthorizer",
            "children": {
              "WebCRMGatewayServiceWebCRMGatewayServiceLambdaJWTAuthorizerObject251FF955:Permissions": {
                "id": "WebCRMGatewayServiceWebCRMGatewayServiceLambdaJWTAuthorizerObject251FF955:Permissions",
                "path": "WebCRMGatewayService/importedAuthorizer/WebCRMGatewayServiceWebCRMGatewayServiceLambdaJWTAuthorizerObject251FF955:Permissions",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                  "aws:cdk:cloudformation:props": {
                    "action": "lambda:InvokeFunction",
                    "functionName": "arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda",
                    "principal": "apigateway.amazonaws.com",
                    "sourceArn": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":execute-api:us-east-1:993738567487:",
                          {
                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                          },
                          "/authorizers/",
                          {
                            "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                          }
                        ]
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda.FunctionBase",
              "version": "2.83.1"
            }
          },
          "WebCRMGatewayService-LambdaJWTAuthorizerObject": {
            "id": "WebCRMGatewayService-LambdaJWTAuthorizerObject",
            "path": "WebCRMGatewayService/WebCRMGatewayService-LambdaJWTAuthorizerObject",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-LambdaJWTAuthorizerObject/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Authorizer",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebCRMGatewayService-LambdaJWTAuthorizerObject",
                    "restApiId": {
                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                    },
                    "type": "REQUEST",
                    "authorizerResultTtlInSeconds": 0,
                    "authorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:993738567487:function:authorizer-RestServices-Lambda/invocations",
                    "identitySource": "method.request.header.cookie"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAuthorizer",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RequestAuthorizer",
              "version": "2.83.1"
            }
          },
          "WebCRMGatewayService-GWAPI": {
            "id": "WebCRMGatewayService-GWAPI",
            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "WebCRMGatewayService-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.83.1"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Account": {
                "id": "Account",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "WebCRMGatewayServiceGWAPICloudWatchRole0F3829E2",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.83.1"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.83.1"
                }
              },
              "DeploymentStage.SecureAPI": {
                "id": "DeploymentStage.SecureAPI",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/DeploymentStage.SecureAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/DeploymentStage.SecureAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                        },
                        "deploymentId": {
                          "Ref": "WebCRMGatewayServiceGWAPIDeployment559132D84d9626abd84e251c475936f8b4edc8c6"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "SecureAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.83.1"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Default": {
                "id": "Default",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "WebCRMGatewayServiceGWAPIB5A11A1F",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            },
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.83.1"
                    }
                  },
                  "CRM": {
                    "id": "CRM",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebCRMGatewayServiceGWAPIB5A11A1F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "CRM",
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyUsers": {
                        "id": "ListMyUsers",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyUsers",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyUsers0A1E9456"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyUsers": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyUsers",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyUsers",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmListMyUsersLambda43CD8954Arn6164C643"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyUsers"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyUsers/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyUsers0A1E9456"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmListMyUsersLambda43CD8954Arn6164C643"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyBotSubscriptions": {
                        "id": "ListMyBotSubscriptions",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotSubscriptions",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptions1F5D2157"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptions": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptions",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsLambdaC994C5ACArnC5D0423C"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotSubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptions1F5D2157"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsLambdaC994C5ACArnC5D0423C"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyBotSubscriptionsByUser": {
                        "id": "ListMyBotSubscriptionsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotSubscriptionsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptionsByUserF9C53966"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptionsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptionsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotSubscriptionsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsByUserLambda3D9A026AArn3E10B863"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotSubscriptionsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotSubscriptionsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotSubscriptionsByUserF9C53966"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBotSubscriptionsByUserLambda3D9A026AArn3E10B863"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyChannelsSubscriptions": {
                        "id": "ListMyChannelsSubscriptions",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyChannelsSubscriptions",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelsSubscriptions92EDBE0B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelsSubscriptions": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelsSubscriptions",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelsSubscriptions",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsLambdaF3058988Arn985ED147"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyChannelsSubscriptions"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelsSubscriptions/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelsSubscriptions92EDBE0B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsLambdaF3058988Arn985ED147"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyChannelSubscriptionsByUser": {
                        "id": "ListMyChannelSubscriptionsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyChannelSubscriptionsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelSubscriptionsByUserBF2C12B0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelSubscriptionsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelSubscriptionsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyChannelSubscriptionsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsByUserLambdaE3D1967BArnFDBB7C3A"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyChannelSubscriptionsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyChannelSubscriptionsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyChannelSubscriptionsByUserBF2C12B0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmChannelSubscriptionsByUserLambdaE3D1967BArnFDBB7C3A"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyBotPayments": {
                        "id": "ListMyBotPayments",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotPayments",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPayments2197A9BB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPayments": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPayments",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPayments",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsLambda42FF7FB1ArnBC6F8669"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotPayments"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPayments/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPayments2197A9BB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsLambda42FF7FB1ArnBC6F8669"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListMyBotPaymentsByUser": {
                        "id": "ListMyBotPaymentsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListMyBotPaymentsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPaymentsByUserDA0054A9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPaymentsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPaymentsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListMyBotPaymentsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsByUserLambda37ECD412Arn7BDAFF91"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListMyBotPaymentsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListMyBotPaymentsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListMyBotPaymentsByUserDA0054A9"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttbotPaymentsByUserLambda37ECD412Arn7BDAFF91"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ListScheduledPostsByUser": {
                        "id": "ListScheduledPostsByUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ListScheduledPostsByUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListScheduledPostsByUser763C054E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListScheduledPostsByUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListScheduledPostsByUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ListScheduledPostsByUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttscheduledPostsByUserLambda726BF336Arn196C2CB4"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ListScheduledPostsByUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ListScheduledPostsByUser/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMListScheduledPostsByUser763C054E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttscheduledPostsByUserLambda726BF336Arn196C2CB4"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "UserProfile": {
                        "id": "UserProfile",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "UserProfile",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMUserProfile1B2F2D01"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.UserProfile": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.UserProfile",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.UserProfile",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmUserProfileLambdaC702497FArn2EBB0E71"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/UserProfile"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/UserProfile/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMUserProfile1B2F2D01"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmUserProfileLambdaC702497FArn2EBB0E71"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "BanUser": {
                        "id": "BanUser",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "BanUser",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMBanUser67B5D2C0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/PUT",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.BanUser": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.BanUser",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/PUT/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.BanUser",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBanLambda32C771E6Arn384070CD"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/PUT/CRM/BanUser"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/BanUser/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMBanUser67B5D2C0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmBanLambda32C771E6Arn384070CD"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "EditUserNotes": {
                        "id": "EditUserNotes",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "EditUserNotes",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMEditUserNotesF5EE15EB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/PUT",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.EditUserNotes": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.EditUserNotes",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/PUT/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CRM.EditUserNotes",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmEditUserNotesLambda504FE58BArn687BCC76"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/PUT/CRM/EditUserNotes"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/EditUserNotes/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMEditUserNotesF5EE15EB"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttcrmEditUserNotesLambda504FE58BArn687BCC76"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "GetMyBotAnalitics": {
                        "id": "GetMyBotAnalitics",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "GetMyBotAnalitics",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetMyBotAnalitics4110010B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetMyBotAnalitics": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetMyBotAnalitics",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetMyBotAnalitics",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttGetMyBotAnaliticsF8D38A59Arn1426F978"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/GetMyBotAnalitics"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetMyBotAnalitics/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetMyBotAnalitics4110010B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttGetMyBotAnaliticsF8D38A59Arn1426F978"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "GetContentPlanPostStats": {
                        "id": "GetContentPlanPostStats",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "GetContentPlanPostStats",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetContentPlanPostStatsCBD6912C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetContentPlanPostStats": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetContentPlanPostStats",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetContentPlanPostStats",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttContentPlanPostStatsBFF3AF4DArn4957BFD7"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/GetContentPlanPostStats"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetContentPlanPostStats/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetContentPlanPostStatsCBD6912C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttContentPlanPostStatsBFF3AF4DArn4957BFD7"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ContentPlanPostFeedBacks": {
                        "id": "ContentPlanPostFeedBacks",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ContentPlanPostFeedBacks",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMContentPlanPostFeedBacks39B2DB8C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ContentPlanPostFeedBacks": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ContentPlanPostFeedBacks",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ContentPlanPostFeedBacks",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttContentPlanPostFeedBacksD6116E27Arn83AE38FE"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ContentPlanPostFeedBacks"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostFeedBacks/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMContentPlanPostFeedBacks39B2DB8C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttContentPlanPostFeedBacksD6116E27Arn83AE38FE"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "ContentPlanPostRates": {
                        "id": "ContentPlanPostRates",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "ContentPlanPostRates",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMContentPlanPostRatesCA0FD033"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ContentPlanPostRates": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ContentPlanPostRates",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.ContentPlanPostRates",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttContentPlanPostRatesE97D20AAArnCB7EE506"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/ContentPlanPostRates"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/ContentPlanPostRates/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMContentPlanPostRatesCA0FD033"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttContentPlanPostRatesE97D20AAArnCB7EE506"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "GetAdminChatMessages": {
                        "id": "GetAdminChatMessages",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICRM0DDB451C"
                                },
                                "pathPart": "GetAdminChatMessages",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetAdminChatMessagesD857E571"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetAdminChatMessages": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetAdminChatMessages",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CRM.GetAdminChatMessages",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttGetAdminChatMessagesLambdaF50073BAArn4A144F99"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CRM/GetAdminChatMessages"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CRM/GetAdminChatMessages/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICRMGetAdminChatMessagesD857E571"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRM:ExportsOutputFnGetAttGetAdminChatMessagesLambdaF50073BAArn4A144F99"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "CampaignsInternal": {
                    "id": "CampaignsInternal",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebCRMGatewayServiceGWAPIB5A11A1F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "CampaignsInternal",
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsInternal152D2F66"
                                },
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsInternal152D2F66"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalList9FC19650"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsInternal.List": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsInternal.List",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsInternal.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttListCampaignsInternalLambda5F179309ArnDFDC3EC9"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CampaignsInternal/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalList9FC19650"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttListCampaignsInternalLambda5F179309ArnDFDC3EC9"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsInternal152D2F66"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalGetCF7B8A1B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsInternal.Get": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsInternal.Get",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsInternal.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttGetCampaignInternalLambda54A78C80Arn374F6942"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CampaignsInternal/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalGetCF7B8A1B"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttGetCampaignInternalLambda54A78C80Arn374F6942"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsInternal152D2F66"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalAdd6FE8C26E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add/POST",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.POST..CampaignsInternal.Add": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.POST..CampaignsInternal.Add",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add/POST/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.POST..CampaignsInternal.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttAddCampaignInternalLambda4BE5231DArn7322D633"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/POST/CampaignsInternal/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalAdd6FE8C26E"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttAddCampaignInternalLambda4BE5231DArn7322D633"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsInternal152D2F66"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalEditE843DDC6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit/PUT",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CampaignsInternal.Edit": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CampaignsInternal.Edit",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit/PUT/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CampaignsInternal.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttEditCampaignInternalLambda8358F0FCArn958F057E"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/PUT/CampaignsInternal/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalEditE843DDC6"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttEditCampaignInternalLambda8358F0FCArn958F057E"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsInternal152D2F66"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalDelete1828BBA4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.DELETE..CampaignsInternal.Delete": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.DELETE..CampaignsInternal.Delete",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete/DELETE/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.DELETE..CampaignsInternal.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttDeleteCampaignInternalLambdaBDCD5E62Arn135FDC31"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/DELETE/CampaignsInternal/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsInternal/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsInternalDelete1828BBA4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttDeleteCampaignInternalLambdaBDCD5E62Arn135FDC31"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "CampaignsUTM": {
                    "id": "CampaignsUTM",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "WebCRMGatewayServiceGWAPIB5A11A1F",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "CampaignsUTM",
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsUTM8EBF191C"
                                },
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "List": {
                        "id": "List",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsUTM8EBF191C"
                                },
                                "pathPart": "List",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMListBACD78A4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsUTM.List": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsUTM.List",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsUTM.List",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttListCampaignsUTMLambda5E201332Arn6E090721"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CampaignsUTM/List"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/List/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMListBACD78A4"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttListCampaignsUTMLambda5E201332Arn6E090721"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Get": {
                        "id": "Get",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsUTM8EBF191C"
                                },
                                "pathPart": "Get",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMGetCE881C32"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "GET": {
                            "id": "GET",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get/GET",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsUTM.Get": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsUTM.Get",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get/GET/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.GET..CampaignsUTM.Get",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttGetCampaignUTMLambda4C3748F8Arn56AB3FEA"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/GET/CampaignsUTM/Get"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Get/GET/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "GET",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMGetCE881C32"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttGetCampaignUTMLambda4C3748F8Arn56AB3FEA"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Add": {
                        "id": "Add",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsUTM8EBF191C"
                                },
                                "pathPart": "Add",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMAddE87354A0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add/POST",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.POST..CampaignsUTM.Add": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.POST..CampaignsUTM.Add",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add/POST/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.POST..CampaignsUTM.Add",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttAddCampaignUTMLambda3881BFE4Arn30747FB3"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/POST/CampaignsUTM/Add"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Add/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMAddE87354A0"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttAddCampaignUTMLambda3881BFE4Arn30747FB3"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Edit": {
                        "id": "Edit",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsUTM8EBF191C"
                                },
                                "pathPart": "Edit",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMEdit07D4AF59"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "PUT": {
                            "id": "PUT",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit/PUT",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CampaignsUTM.Edit": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CampaignsUTM.Edit",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit/PUT/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.PUT..CampaignsUTM.Edit",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttEditCampaignUTMLambda1DBDCD9BArn8D6DD865"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/PUT/CampaignsUTM/Edit"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Edit/PUT/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "PUT",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMEdit07D4AF59"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttEditCampaignUTMLambda1DBDCD9BArn8D6DD865"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      },
                      "Delete": {
                        "id": "Delete",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "WebCRMGatewayServiceGWAPICampaignsUTM8EBF191C"
                                },
                                "pathPart": "Delete",
                                "restApiId": {
                                  "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMDeleteDF42971C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "DELETE": {
                            "id": "DELETE",
                            "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete/DELETE",
                            "children": {
                              "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.DELETE..CampaignsUTM.Delete": {
                                "id": "ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.DELETE..CampaignsUTM.Delete",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete/DELETE/ApiPermission.WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4.DELETE..CampaignsUTM.Delete",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttDeleteCampaignUTMLambda6830D57FArnA4C65688"
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                          },
                                          "/",
                                          {
                                            "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                                          },
                                          "/DELETE/CampaignsUTM/Delete"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/Default/CampaignsUTM/Delete/DELETE/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "DELETE",
                                    "resourceId": {
                                      "Ref": "WebCRMGatewayServiceGWAPICampaignsUTMDeleteDF42971C"
                                    },
                                    "restApiId": {
                                      "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                                    },
                                    "authorizationType": "CUSTOM",
                                    "authorizerId": {
                                      "Ref": "WebCRMGatewayServiceLambdaJWTAuthorizerObjectA975EDA9"
                                    },
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::ImportValue": "WebRestServiceCRMCampaigns:ExportsOutputFnGetAttDeleteCampaignUTMLambda6830D57FArnA4C65688"
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.83.1"
                }
              },
              "WebCRMGatewayService-GWAPI-UsagePlan": {
                "id": "WebCRMGatewayService-GWAPI-UsagePlan",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            },
                            "stage": {
                              "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                            },
                            "throttle": {}
                          }
                        ],
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "WebCRMGatewayService-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.83.1"
                }
              },
              "WebCRMGatewayService-GW-SubDomain": {
                "id": "WebCRMGatewayService-GW-SubDomain",
                "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "secure-crm.pompona.net",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/d6dd0f38-40b6-45ba-a14d-e23f47f6dcf0"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.83.1"
                    }
                  },
                  "Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4": {
                    "id": "Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain/Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "WebCRMGatewayService/WebCRMGatewayService-GWAPI/WebCRMGatewayService-GW-SubDomain/Map:--=>WebCRMGatewayServiceWebCRMGatewayServiceGWAPI968BDFD4/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "WebCRMGatewayServiceGWAPIWebCRMGatewayServiceGWSubDomain3F254E56"
                            },
                            "restApiId": {
                              "Ref": "WebCRMGatewayServiceGWAPIB5A11A1F"
                            },
                            "stage": {
                              "Ref": "WebCRMGatewayServiceGWAPIDeploymentStageSecureAPI99BA080A"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.83.1"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "WebCRMGatewayService/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "WebCRMGatewayService-ARecord": {
            "id": "WebCRMGatewayService-ARecord",
            "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "secure-crm.pompona.net.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "WebCRMGatewayServiceGWAPIWebCRMGatewayServiceGWSubDomain3F254E56",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "WebCRMGatewayServiceGWAPIWebCRMGatewayServiceGWSubDomain3F254E56",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z03470091PWKKIZTYD5L4"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.83.1"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "WebCRMGatewayService/WebCRMGatewayService-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.83.1"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.83.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "WebCRMGatewayService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.83.1"
            }
          },
          "WebCRMGatewayService-APIGW-SecureAPI": {
            "id": "WebCRMGatewayService-APIGW-SecureAPI",
            "path": "WebCRMGatewayService/WebCRMGatewayService-APIGW-SecureAPI",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnOutput",
              "version": "2.83.1"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "WebCRMGatewayService/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "WebCRMGatewayService/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "WebCRMGatewayService/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "WebCRMGatewayService/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "PaymentIntegrationsAndGateWay": {
        "id": "PaymentIntegrationsAndGateWay",
        "path": "PaymentIntegrationsAndGateWay",
        "children": {
          "Zone": {
            "id": "Zone",
            "path": "PaymentIntegrationsAndGateWay/Zone",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "imported-certificate": {
            "id": "imported-certificate",
            "path": "PaymentIntegrationsAndGateWay/imported-certificate",
            "constructInfo": {
              "fqn": "aws-cdk-lib.Resource",
              "version": "2.83.1"
            }
          },
          "PaymentIntegrationsAndGateWay-GWAPI": {
            "id": "PaymentIntegrationsAndGateWay-GWAPI",
            "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::RestApi",
                  "aws:cdk:cloudformation:props": {
                    "name": "PaymentIntegrationsAndGateWay-GWAPI"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnRestApi",
                  "version": "2.83.1"
                }
              },
              "CloudWatchRole": {
                "id": "CloudWatchRole",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/CloudWatchRole",
                "children": {
                  "ImportCloudWatchRole": {
                    "id": "ImportCloudWatchRole",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/CloudWatchRole/ImportCloudWatchRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/CloudWatchRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "apigateway.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Account": {
                "id": "Account",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Account",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Account",
                  "aws:cdk:cloudformation:props": {
                    "cloudWatchRoleArn": {
                      "Fn::GetAtt": [
                        "PaymentIntegrationsAndGateWayGWAPICloudWatchRole80FD2ED0",
                        "Arn"
                      ]
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.CfnAccount",
                  "version": "2.83.1"
                }
              },
              "Deployment": {
                "id": "Deployment",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Deployment",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Deployment/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Deployment",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                        },
                        "description": "Automatically created by the RestApi construct"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDeployment",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Deployment",
                  "version": "2.83.1"
                }
              },
              "DeploymentStage.pagesAPI": {
                "id": "DeploymentStage.pagesAPI",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/DeploymentStage.pagesAPI",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/DeploymentStage.pagesAPI/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::Stage",
                      "aws:cdk:cloudformation:props": {
                        "restApiId": {
                          "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                        },
                        "deploymentId": {
                          "Ref": "PaymentIntegrationsAndGateWayGWAPIDeployment04C49B89b8f00e1eab71f7ba8415aedf032c4db4"
                        },
                        "methodSettings": [
                          {
                            "httpMethod": "*",
                            "resourcePath": "/*",
                            "dataTraceEnabled": false,
                            "loggingLevel": "ERROR",
                            "metricsEnabled": true
                          }
                        ],
                        "stageName": "pagesAPI"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnStage",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.Stage",
                  "version": "2.83.1"
                }
              },
              "Endpoint": {
                "id": "Endpoint",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Endpoint",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnOutput",
                  "version": "2.83.1"
                }
              },
              "Default": {
                "id": "Default",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default",
                "children": {
                  "OPTIONS": {
                    "id": "OPTIONS",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/OPTIONS",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/OPTIONS/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                          "aws:cdk:cloudformation:props": {
                            "httpMethod": "OPTIONS",
                            "resourceId": {
                              "Fn::GetAtt": [
                                "PaymentIntegrationsAndGateWayGWAPI3FCE2609",
                                "RootResourceId"
                              ]
                            },
                            "restApiId": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                            },
                            "apiKeyRequired": false,
                            "authorizationType": "NONE",
                            "integration": {
                              "type": "MOCK",
                              "requestTemplates": {
                                "application/json": "{ statusCode: 200 }"
                              },
                              "integrationResponses": [
                                {
                                  "statusCode": "204",
                                  "responseParameters": {
                                    "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                    "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                    "method.response.header.Vary": "'Origin'",
                                    "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                    "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                  },
                                  "responseTemplates": {
                                    "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                  }
                                }
                              ]
                            },
                            "methodResponses": [
                              {
                                "statusCode": "204",
                                "responseParameters": {
                                  "method.response.header.Access-Control-Allow-Headers": true,
                                  "method.response.header.Access-Control-Allow-Origin": true,
                                  "method.response.header.Vary": true,
                                  "method.response.header.Access-Control-Allow-Methods": true,
                                  "method.response.header.Access-Control-Allow-Credentials": true
                                }
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Method",
                      "version": "2.83.1"
                    }
                  },
                  "modul_ru": {
                    "id": "modul_ru",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                          "aws:cdk:cloudformation:props": {
                            "parentId": {
                              "Fn::GetAtt": [
                                "PaymentIntegrationsAndGateWayGWAPI3FCE2609",
                                "RootResourceId"
                              ]
                            },
                            "pathPart": "modul_ru",
                            "restApiId": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                          "version": "2.83.1"
                        }
                      },
                      "OPTIONS": {
                        "id": "OPTIONS",
                        "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/OPTIONS",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/OPTIONS/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                              "aws:cdk:cloudformation:props": {
                                "httpMethod": "OPTIONS",
                                "resourceId": {
                                  "Ref": "PaymentIntegrationsAndGateWayGWAPImodulru6DA7FFD5"
                                },
                                "restApiId": {
                                  "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                                },
                                "apiKeyRequired": false,
                                "authorizationType": "NONE",
                                "integration": {
                                  "type": "MOCK",
                                  "requestTemplates": {
                                    "application/json": "{ statusCode: 200 }"
                                  },
                                  "integrationResponses": [
                                    {
                                      "statusCode": "204",
                                      "responseParameters": {
                                        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                        "method.response.header.Vary": "'Origin'",
                                        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                        "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                      },
                                      "responseTemplates": {
                                        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                      }
                                    }
                                  ]
                                },
                                "methodResponses": [
                                  {
                                    "statusCode": "204",
                                    "responseParameters": {
                                      "method.response.header.Access-Control-Allow-Headers": true,
                                      "method.response.header.Access-Control-Allow-Origin": true,
                                      "method.response.header.Vary": true,
                                      "method.response.header.Access-Control-Allow-Methods": true,
                                      "method.response.header.Access-Control-Allow-Credentials": true
                                    }
                                  }
                                ]
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Method",
                          "version": "2.83.1"
                        }
                      },
                      "callback": {
                        "id": "callback",
                        "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback",
                        "children": {
                          "Resource": {
                            "id": "Resource",
                            "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback/Resource",
                            "attributes": {
                              "aws:cdk:cloudformation:type": "AWS::ApiGateway::Resource",
                              "aws:cdk:cloudformation:props": {
                                "parentId": {
                                  "Ref": "PaymentIntegrationsAndGateWayGWAPImodulru6DA7FFD5"
                                },
                                "pathPart": "callback",
                                "restApiId": {
                                  "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.CfnResource",
                              "version": "2.83.1"
                            }
                          },
                          "OPTIONS": {
                            "id": "OPTIONS",
                            "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback/OPTIONS",
                            "children": {
                              "Resource": {
                                "id": "Resource",
                                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback/OPTIONS/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "OPTIONS",
                                    "resourceId": {
                                      "Ref": "PaymentIntegrationsAndGateWayGWAPImodulrucallback11C3F1F6"
                                    },
                                    "restApiId": {
                                      "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                                    },
                                    "apiKeyRequired": false,
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "MOCK",
                                      "requestTemplates": {
                                        "application/json": "{ statusCode: 200 }"
                                      },
                                      "integrationResponses": [
                                        {
                                          "statusCode": "204",
                                          "responseParameters": {
                                            "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
                                            "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
                                            "method.response.header.Vary": "'Origin'",
                                            "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
                                            "method.response.header.Access-Control-Allow-Credentials": "'true'"
                                          },
                                          "responseTemplates": {
                                            "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
                                          }
                                        }
                                      ]
                                    },
                                    "methodResponses": [
                                      {
                                        "statusCode": "204",
                                        "responseParameters": {
                                          "method.response.header.Access-Control-Allow-Headers": true,
                                          "method.response.header.Access-Control-Allow-Origin": true,
                                          "method.response.header.Vary": true,
                                          "method.response.header.Access-Control-Allow-Methods": true,
                                          "method.response.header.Access-Control-Allow-Credentials": true
                                        }
                                      }
                                    ]
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          },
                          "POST": {
                            "id": "POST",
                            "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback/POST",
                            "children": {
                              "ApiPermission.PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB.POST..modul_ru.callback": {
                                "id": "ApiPermission.PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB.POST..modul_ru.callback",
                                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback/POST/ApiPermission.PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB.POST..modul_ru.callback",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::Lambda::Permission",
                                  "aws:cdk:cloudformation:props": {
                                    "action": "lambda:InvokeFunction",
                                    "functionName": {
                                      "Fn::GetAtt": [
                                        "ModulPaymentCallBack85EC80ED",
                                        "Arn"
                                      ]
                                    },
                                    "principal": "apigateway.amazonaws.com",
                                    "sourceArn": {
                                      "Fn::Join": [
                                        "",
                                        [
                                          "arn:",
                                          {
                                            "Ref": "AWS::Partition"
                                          },
                                          ":execute-api:us-east-1:993738567487:",
                                          {
                                            "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                                          },
                                          "/",
                                          {
                                            "Ref": "PaymentIntegrationsAndGateWayGWAPIDeploymentStagepagesAPI69ECA298"
                                          },
                                          "/POST/modul_ru/callback"
                                        ]
                                      ]
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_lambda.CfnPermission",
                                  "version": "2.83.1"
                                }
                              },
                              "Resource": {
                                "id": "Resource",
                                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/Default/modul_ru/callback/POST/Resource",
                                "attributes": {
                                  "aws:cdk:cloudformation:type": "AWS::ApiGateway::Method",
                                  "aws:cdk:cloudformation:props": {
                                    "httpMethod": "POST",
                                    "resourceId": {
                                      "Ref": "PaymentIntegrationsAndGateWayGWAPImodulrucallback11C3F1F6"
                                    },
                                    "restApiId": {
                                      "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                                    },
                                    "authorizationType": "NONE",
                                    "integration": {
                                      "type": "AWS_PROXY",
                                      "uri": {
                                        "Fn::Join": [
                                          "",
                                          [
                                            "arn:",
                                            {
                                              "Ref": "AWS::Partition"
                                            },
                                            ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                                            {
                                              "Fn::GetAtt": [
                                                "ModulPaymentCallBack85EC80ED",
                                                "Arn"
                                              ]
                                            },
                                            "/invocations"
                                          ]
                                        ]
                                      },
                                      "integrationHttpMethod": "POST"
                                    }
                                  }
                                },
                                "constructInfo": {
                                  "fqn": "aws-cdk-lib.aws_apigateway.CfnMethod",
                                  "version": "2.83.1"
                                }
                              }
                            },
                            "constructInfo": {
                              "fqn": "aws-cdk-lib.aws_apigateway.Method",
                              "version": "2.83.1"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.Resource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.ResourceBase",
                  "version": "2.83.1"
                }
              },
              "PaymentIntegrationsAndGateWay-GWAPI-UsagePlan": {
                "id": "PaymentIntegrationsAndGateWay-GWAPI-UsagePlan",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/PaymentIntegrationsAndGateWay-GWAPI-UsagePlan",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/PaymentIntegrationsAndGateWay-GWAPI-UsagePlan/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::UsagePlan",
                      "aws:cdk:cloudformation:props": {
                        "apiStages": [
                          {
                            "apiId": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                            },
                            "stage": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPIDeploymentStagepagesAPI69ECA298"
                            },
                            "throttle": {}
                          }
                        ],
                        "quota": {
                          "limit": 10000000,
                          "period": "MONTH"
                        },
                        "throttle": {
                          "burstLimit": 10000,
                          "rateLimit": 1000
                        },
                        "usagePlanName": "PaymentIntegrationsAndGateWay-GWAPI-UsagePlan"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnUsagePlan",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.UsagePlan",
                  "version": "2.83.1"
                }
              },
              "PaymentIntegrationsAndGateWay-GW-SubDomain": {
                "id": "PaymentIntegrationsAndGateWay-GW-SubDomain",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/PaymentIntegrationsAndGateWay-GW-SubDomain",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/PaymentIntegrationsAndGateWay-GW-SubDomain/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ApiGateway::DomainName",
                      "aws:cdk:cloudformation:props": {
                        "domainName": "payments.pompona.net",
                        "endpointConfiguration": {
                          "types": [
                            "REGIONAL"
                          ]
                        },
                        "regionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/d6dd0f38-40b6-45ba-a14d-e23f47f6dcf0"
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.CfnDomainName",
                      "version": "2.83.1"
                    }
                  },
                  "Map:--=>PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB": {
                    "id": "Map:--=>PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/PaymentIntegrationsAndGateWay-GW-SubDomain/Map:--=>PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-GWAPI/PaymentIntegrationsAndGateWay-GW-SubDomain/Map:--=>PaymentIntegrationsAndGateWayPaymentIntegrationsAndGateWayGWAPI4B53A8DB/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ApiGateway::BasePathMapping",
                          "aws:cdk:cloudformation:props": {
                            "domainName": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPIPaymentIntegrationsAndGateWayGWSubDomain1E3A800E"
                            },
                            "restApiId": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPI3FCE2609"
                            },
                            "stage": {
                              "Ref": "PaymentIntegrationsAndGateWayGWAPIDeploymentStagepagesAPI69ECA298"
                            }
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_apigateway.CfnBasePathMapping",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_apigateway.BasePathMapping",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_apigateway.DomainName",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_apigateway.RestApi",
              "version": "2.83.1"
            }
          },
          "PaymentIntegrationsAndGateWay-ARecord": {
            "id": "PaymentIntegrationsAndGateWay-ARecord",
            "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-ARecord",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-ARecord/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Route53::RecordSet",
                  "aws:cdk:cloudformation:props": {
                    "name": "payments.pompona.net.",
                    "type": "A",
                    "aliasTarget": {
                      "dnsName": {
                        "Fn::GetAtt": [
                          "PaymentIntegrationsAndGateWayGWAPIPaymentIntegrationsAndGateWayGWSubDomain1E3A800E",
                          "RegionalDomainName"
                        ]
                      },
                      "hostedZoneId": {
                        "Fn::GetAtt": [
                          "PaymentIntegrationsAndGateWayGWAPIPaymentIntegrationsAndGateWayGWSubDomain1E3A800E",
                          "RegionalHostedZoneId"
                        ]
                      }
                    },
                    "hostedZoneId": "Z03470091PWKKIZTYD5L4"
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_route53.CfnRecordSet",
                  "version": "2.83.1"
                }
              },
              "DeleteExistingRecordSetCustomResource": {
                "id": "DeleteExistingRecordSetCustomResource",
                "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-ARecord/DeleteExistingRecordSetCustomResource",
                "children": {
                  "Default": {
                    "id": "Default",
                    "path": "PaymentIntegrationsAndGateWay/PaymentIntegrationsAndGateWay-ARecord/DeleteExistingRecordSetCustomResource/Default",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CustomResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_route53.ARecord",
              "version": "2.83.1"
            }
          },
          "Custom::DeleteExistingRecordSetCustomResourceProvider": {
            "id": "Custom::DeleteExistingRecordSetCustomResourceProvider",
            "path": "PaymentIntegrationsAndGateWay/Custom::DeleteExistingRecordSetCustomResourceProvider",
            "children": {
              "Staging": {
                "id": "Staging",
                "path": "PaymentIntegrationsAndGateWay/Custom::DeleteExistingRecordSetCustomResourceProvider/Staging",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.AssetStaging",
                  "version": "2.83.1"
                }
              },
              "Role": {
                "id": "Role",
                "path": "PaymentIntegrationsAndGateWay/Custom::DeleteExistingRecordSetCustomResourceProvider/Role",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              },
              "Handler": {
                "id": "Handler",
                "path": "PaymentIntegrationsAndGateWay/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.CustomResourceProvider",
              "version": "2.83.1"
            }
          },
          "ModulPaymentCallBack": {
            "id": "ModulPaymentCallBack",
            "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack",
            "children": {
              "Code": {
                "id": "Code",
                "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
                      "s3Key": "dbbe610fca92fd2742a755913b58ff7f768fb50a726ab8d29a23645cff69d453.zip"
                    },
                    "role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
                    "environment": {
                      "variables": {
                        "LOG_LEVEL": "info",
                        "NODE_ENV": "production",
                        "botFatherId": "5645439521",
                        "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
                        "tg_api_serverURI": "https://api.telegram.org",
                        "botsBucketName": "bots-bucket",
                        "tempUploadsBucketName": "message-files-temp-uploads-bucket",
                        "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
                        "mainDomainName": "pompona.net",
                        "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
                        "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
                        "botsTable": "bots",
                        "sessionsTable": "telegramSessions",
                        "rawStatsTable": "rawStats",
                        "processedStatsTable": "processedStats",
                        "region": "us-east-1",
                        "s3BotsBucket": "bots-bucket",
                        "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
                        "cookieDomain": "pompona.net",
                        "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
                        "managementBotAPIURL": "https://managementbot-face.pompona.net",
                        "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
                        "ClusterCount_SendMessage": "1",
                        "ClusterCount_Statistics": "1",
                        "coolDownPeriodMinutes": "1",
                        "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
                        "modulMerchantId": "46e90f0c-76da-4646-81ab-8890763b4316",
                        "modulSuccess_url": "https://admin.pompona.net/successfullPayment",
                        "modulCallback_url": "https://payments.pompona.net/modul_ru/callback",
                        "modulKey": "0DF051D1538CD086EC0A0F52ECFD84F3",
                        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                      }
                    },
                    "functionName": "paymentProcessor-ModulPayment-callback",
                    "handler": "index.handler",
                    "layers": [
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:778",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:492",
                      "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:74"
                    ],
                    "runtime": "nodejs16.x",
                    "timeout": 15
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_lambda.CfnFunction",
                  "version": "2.83.1"
                }
              },
              "LogRetention": {
                "id": "LogRetention",
                "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/LogRetention",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/LogRetention/Resource",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.CfnResource",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_logs.LogRetention",
                  "version": "2.83.1"
                }
              },
              "LogGroup": {
                "id": "LogGroup",
                "path": "PaymentIntegrationsAndGateWay/ModulPaymentCallBack/LogGroup",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.Resource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "aws-cdk-lib.aws_lambda_nodejs.NodejsFunction",
              "version": "2.83.1"
            }
          },
          "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a": {
            "id": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a",
            "children": {
              "Code": {
                "id": "Code",
                "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/Stage",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.AssetStaging",
                      "version": "2.83.1"
                    }
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Code/AssetBucket",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_s3.BucketBase",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_s3_assets.Asset",
                  "version": "2.83.1"
                }
              },
              "ServiceRole": {
                "id": "ServiceRole",
                "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole",
                "children": {
                  "ImportServiceRole": {
                    "id": "ImportServiceRole",
                    "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/ImportServiceRole",
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.Resource",
                      "version": "2.83.1"
                    }
                  },
                  "Resource": {
                    "id": "Resource",
                    "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": "lambda.amazonaws.com"
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "managedPolicyArns": [
                          {
                            "Fn::Join": [
                              "",
                              [
                                "arn:",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                              ]
                            ]
                          }
                        ]
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.CfnRole",
                      "version": "2.83.1"
                    }
                  },
                  "DefaultPolicy": {
                    "id": "DefaultPolicy",
                    "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                          "aws:cdk:cloudformation:props": {
                            "policyDocument": {
                              "Statement": [
                                {
                                  "Action": [
                                    "logs:PutRetentionPolicy",
                                    "logs:DeleteRetentionPolicy"
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*"
                                }
                              ],
                              "Version": "2012-10-17"
                            },
                            "policyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
                            "roles": [
                              {
                                "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
                              }
                            ]
                          }
                        },
                        "constructInfo": {
                          "fqn": "aws-cdk-lib.aws_iam.CfnPolicy",
                          "version": "2.83.1"
                        }
                      }
                    },
                    "constructInfo": {
                      "fqn": "aws-cdk-lib.aws_iam.Policy",
                      "version": "2.83.1"
                    }
                  }
                },
                "constructInfo": {
                  "fqn": "aws-cdk-lib.aws_iam.Role",
                  "version": "2.83.1"
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "PaymentIntegrationsAndGateWay/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "CDKMetadata": {
            "id": "CDKMetadata",
            "path": "PaymentIntegrationsAndGateWay/CDKMetadata",
            "children": {
              "Default": {
                "id": "Default",
                "path": "PaymentIntegrationsAndGateWay/CDKMetadata/Default",
                "constructInfo": {
                  "fqn": "aws-cdk-lib.CfnResource",
                  "version": "2.83.1"
                }
              }
            },
            "constructInfo": {
              "fqn": "constructs.Construct",
              "version": "10.2.50"
            }
          },
          "BootstrapVersion": {
            "id": "BootstrapVersion",
            "path": "PaymentIntegrationsAndGateWay/BootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnParameter",
              "version": "2.83.1"
            }
          },
          "CheckBootstrapVersion": {
            "id": "CheckBootstrapVersion",
            "path": "PaymentIntegrationsAndGateWay/CheckBootstrapVersion",
            "constructInfo": {
              "fqn": "aws-cdk-lib.CfnRule",
              "version": "2.83.1"
            }
          }
        },
        "constructInfo": {
          "fqn": "aws-cdk-lib.Stack",
          "version": "2.83.1"
        }
      },
      "Tree": {
        "id": "Tree",
        "path": "Tree",
        "constructInfo": {
          "fqn": "constructs.Construct",
          "version": "10.2.50"
        }
      }
    },
    "constructInfo": {
      "fqn": "aws-cdk-lib.App",
      "version": "2.83.1"
    }
  }
}