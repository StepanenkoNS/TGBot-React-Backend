{
 "Resources": {
  "WebNotAuthorizedPagesGWAPI97EAFC19": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "WebNotAuthorizedPages-GWAPI"
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPICloudWatchRoleF0C986B5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/CloudWatchRole/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIAccountD1BFC30B": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "WebNotAuthorizedPagesGWAPICloudWatchRoleF0C986B5",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "WebNotAuthorizedPagesGWAPI97EAFC19"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Account"
   }
  },
  "WebNotAuthorizedPagesGWAPIDeploymentD8F7DD97b51f6dbeec0d5957f3fd8a30261a4869": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "WebNotAuthorizedPagesGWAPIhelpcenterarticleGET15969842",
    "WebNotAuthorizedPagesGWAPIhelpcenterarticleOPTIONSA333C55F",
    "WebNotAuthorizedPagesGWAPIhelpcenterarticle7BA23A86",
    "WebNotAuthorizedPagesGWAPIhelpcenterlandingGET7E4A7DA7",
    "WebNotAuthorizedPagesGWAPIhelpcenterlandingOPTIONS2E999A92",
    "WebNotAuthorizedPagesGWAPIhelpcenterlanding6C4D5448",
    "WebNotAuthorizedPagesGWAPIhelpcenterOPTIONS020BD4CE",
    "WebNotAuthorizedPagesGWAPIhelpcenterF5625ED1",
    "WebNotAuthorizedPagesGWAPIhelpcentersubcategoryGET21BED81E",
    "WebNotAuthorizedPagesGWAPIhelpcentersubcategoryOPTIONS3C11C89F",
    "WebNotAuthorizedPagesGWAPIhelpcentersubcategory00576F93",
    "WebNotAuthorizedPagesGWAPIOPTIONSAF183470"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Deployment/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "DeploymentId": {
     "Ref": "WebNotAuthorizedPagesGWAPIDeploymentD8F7DD97b51f6dbeec0d5957f3fd8a30261a4869"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "ERROR",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "StageName": "pagesAPI"
   },
   "DependsOn": [
    "WebNotAuthorizedPagesGWAPIAccountD1BFC30B"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/DeploymentStage.pagesAPI/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIOPTIONSAF183470": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "WebNotAuthorizedPagesGWAPI97EAFC19",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/OPTIONS/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterF5625ED1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebNotAuthorizedPagesGWAPI97EAFC19",
      "RootResourceId"
     ]
    },
    "PathPart": "help-center",
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterOPTIONS020BD4CE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterF5625ED1"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/OPTIONS/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterlanding6C4D5448": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterF5625ED1"
    },
    "PathPart": "landing",
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/landing/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterlandingOPTIONS2E999A92": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterlanding6C4D5448"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/landing/OPTIONS/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterlandingGETApiPermissionWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CCGEThelpcenterlanding88E61BD7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetHCLandingLambda7205BD53",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
       },
       "/",
       {
        "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
       },
       "/GET/help-center/landing"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/landing/GET/ApiPermission.WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC.GET..help-center.landing"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterlandingGETApiPermissionTestWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CCGEThelpcenterlanding9A2EFF9C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetHCLandingLambda7205BD53",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
       },
       "/test-invoke-stage/GET/help-center/landing"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/landing/GET/ApiPermission.Test.WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC.GET..help-center.landing"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterlandingGET7E4A7DA7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterlanding6C4D5448"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetHCLandingLambda7205BD53",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/landing/GET/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcentersubcategory00576F93": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterF5625ED1"
    },
    "PathPart": "subcategory",
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/subcategory/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcentersubcategoryOPTIONS3C11C89F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcentersubcategory00576F93"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/subcategory/OPTIONS/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcentersubcategoryGETApiPermissionWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CCGEThelpcentersubcategory1501E8A4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetHCsubcategoryLambdaDF64526C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
       },
       "/",
       {
        "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
       },
       "/GET/help-center/subcategory"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/subcategory/GET/ApiPermission.WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC.GET..help-center.subcategory"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcentersubcategoryGETApiPermissionTestWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CCGEThelpcentersubcategory3F44B227": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetHCsubcategoryLambdaDF64526C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
       },
       "/test-invoke-stage/GET/help-center/subcategory"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/subcategory/GET/ApiPermission.Test.WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC.GET..help-center.subcategory"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcentersubcategoryGET21BED81E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcentersubcategory00576F93"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetHCsubcategoryLambdaDF64526C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/subcategory/GET/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterarticle7BA23A86": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterF5625ED1"
    },
    "PathPart": "article",
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/article/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterarticleOPTIONSA333C55F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterarticle7BA23A86"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/article/OPTIONS/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterarticleGETApiPermissionWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CCGEThelpcenterarticle3EE617B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetHCArticleLambda3857DD83",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
       },
       "/",
       {
        "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
       },
       "/GET/help-center/article"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/article/GET/ApiPermission.WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC.GET..help-center.article"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterarticleGETApiPermissionTestWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CCGEThelpcenterarticleBB7649B9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetHCArticleLambda3857DD83",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
       },
       "/test-invoke-stage/GET/help-center/article"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/article/GET/ApiPermission.Test.WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC.GET..help-center.article"
   }
  },
  "WebNotAuthorizedPagesGWAPIhelpcenterarticleGET15969842": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebNotAuthorizedPagesGWAPIhelpcenterarticle7BA23A86"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetHCArticleLambda3857DD83",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/Default/help-center/article/GET/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIWebNotAuthorizedPagesGWAPIUsagePlan76BD95F4": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
      },
      "Stage": {
       "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
      },
      "Throttle": {}
     }
    ],
    "Quota": {
     "Limit": 10000000,
     "Period": "MONTH"
    },
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 100
    },
    "UsagePlanName": "WebNotAuthorizedPages-GWAPI-UsagePlan"
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/WebNotAuthorizedPages-GWAPI-UsagePlan/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIWebNotAuthorizedPagesGWSubDomain446DBCE4": {
   "Type": "AWS::ApiGateway::DomainName",
   "Properties": {
    "DomainName": "pages.zuzona.com",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "RegionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/WebNotAuthorizedPages-GW-SubDomain/Resource"
   }
  },
  "WebNotAuthorizedPagesGWAPIWebNotAuthorizedPagesGWSubDomainMapWebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC933CBBFE": {
   "Type": "AWS::ApiGateway::BasePathMapping",
   "Properties": {
    "DomainName": {
     "Ref": "WebNotAuthorizedPagesGWAPIWebNotAuthorizedPagesGWSubDomain446DBCE4"
    },
    "RestApiId": {
     "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
    },
    "Stage": {
     "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-GWAPI/WebNotAuthorizedPages-GW-SubDomain/Map:--=>WebNotAuthorizedPagesWebNotAuthorizedPagesGWAPI6919D6CC/Resource"
   }
  },
  "GetHCLandingLambdaServiceRole49B6A35F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCLandingLambda/ServiceRole/Resource"
   }
  },
  "GetHCLandingLambdaServiceRoleDefaultPolicy885F4CFB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/web"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetHCLandingLambdaServiceRoleDefaultPolicy885F4CFB",
    "Roles": [
     {
      "Ref": "GetHCLandingLambdaServiceRole49B6A35F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCLandingLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetHCLandingLambda7205BD53": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "bad3775c53ae8eaca42dae259bed10bfddc845902b7c5c55bf35c2fac7a7d858.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetHCLandingLambdaServiceRole49B6A35F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "webTable": "web",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-getHC-Landing-Lambda",
    "Handler": "index.GetHCLandingLambdaHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:19",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:8",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:5"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetHCLandingLambdaServiceRoleDefaultPolicy885F4CFB",
    "GetHCLandingLambdaServiceRole49B6A35F"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCLandingLambda/Resource",
    "aws:asset:path": "asset.bad3775c53ae8eaca42dae259bed10bfddc845902b7c5c55bf35c2fac7a7d858",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetHCsubcategoryLambdaServiceRole5D0A48C2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCsubcategoryLambda/ServiceRole/Resource"
   }
  },
  "GetHCsubcategoryLambdaServiceRoleDefaultPolicyC6ACB76B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/web"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetHCsubcategoryLambdaServiceRoleDefaultPolicyC6ACB76B",
    "Roles": [
     {
      "Ref": "GetHCsubcategoryLambdaServiceRole5D0A48C2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCsubcategoryLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetHCsubcategoryLambdaDF64526C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "32ecf736c4e3f7658a12d20578de152cacae6dbf048d441e3f70090aaebad4e4.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetHCsubcategoryLambdaServiceRole5D0A48C2",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "webTable": "web",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-getHC-Subcategory-Lambda",
    "Handler": "index.GetHCsubcategoryLambdaHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:19",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:8",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:5"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetHCsubcategoryLambdaServiceRoleDefaultPolicyC6ACB76B",
    "GetHCsubcategoryLambdaServiceRole5D0A48C2"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCsubcategoryLambda/Resource",
    "aws:asset:path": "asset.32ecf736c4e3f7658a12d20578de152cacae6dbf048d441e3f70090aaebad4e4",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetHCArticleLambdaServiceRoleE865A3F8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCArticleLambda/ServiceRole/Resource"
   }
  },
  "GetHCArticleLambdaServiceRoleDefaultPolicy6EADEE79": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/web"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetHCArticleLambdaServiceRoleDefaultPolicy6EADEE79",
    "Roles": [
     {
      "Ref": "GetHCArticleLambdaServiceRoleE865A3F8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCArticleLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetHCArticleLambda3857DD83": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ec21e4c2794289d2984f2f84bbe21884912fb33fada9ec9b3a5859555f59e760.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetHCArticleLambdaServiceRoleE865A3F8",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "webTable": "web",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-getHC-Article-Lambda",
    "Handler": "index.GetHCArticleLambdaHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:19",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:8",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:5"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetHCArticleLambdaServiceRoleDefaultPolicy6EADEE79",
    "GetHCArticleLambdaServiceRoleE865A3F8"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/GetHCArticleLambda/Resource",
    "aws:asset:path": "asset.ec21e4c2794289d2984f2f84bbe21884912fb33fada9ec9b3a5859555f59e760",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "WebNotAuthorizedPagesARecord856A5FDE": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "pages.zuzona.com.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "WebNotAuthorizedPagesGWAPIWebNotAuthorizedPagesGWSubDomain446DBCE4",
       "RegionalDomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "WebNotAuthorizedPagesGWAPIWebNotAuthorizedPagesGWSubDomain446DBCE4",
       "RegionalHostedZoneId"
      ]
     }
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T"
   },
   "DependsOn": [
    "WebNotAuthorizedPagesARecordDeleteExistingRecordSetCustomResource995F204B"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-ARecord/Resource"
   }
  },
  "WebNotAuthorizedPagesARecordDeleteExistingRecordSetCustomResource995F204B": {
   "Type": "Custom::DeleteExistingRecordSet",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E",
      "Arn"
     ]
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T",
    "RecordName": "pages.zuzona.com.",
    "RecordType": "A"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/WebNotAuthorizedPages-ARecord/DeleteExistingRecordSetCustomResource/Default"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": "route53:GetChange",
         "Resource": "*"
        },
        {
         "Effect": "Allow",
         "Action": "route53:ListResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         }
        },
        {
         "Effect": "Allow",
         "Action": "route53:ChangeResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         },
         "Condition": {
          "ForAllValues:StringEquals": {
           "route53:ChangeResourceRecordSetsRecordTypes": [
            "A"
           ],
           "route53:ChangeResourceRecordSetsActions": [
            "DELETE"
           ]
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Role"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "04371e66614da6603a2d0caff555a5ee48172084069076b90c459275c26db019.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08"
   ],
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
    "aws:asset:path": "asset.04371e66614da6603a2d0caff555a5ee48172084069076b90c459275c26db019",
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RS2/CMAz+LbuHTAUh7VqGdgMq0M7IpB6kNEkVOyBU9b8vacbGpp38PRI/p3JeyOIJrjRR9XnS6oPsdwzqLLZILniFInr7Hjp9BMYr3GQfHS47LV4/7AMslXLBslhi17qbwQij+sBi2iMmLYN7/gUQihXyydXJ/ELf1XORjN8pfqxasEn9IUtnQNs1mPH1A0upK+DTCrpO22Ny/0iD0GDiRK7NlVKsXKvVLdGMBtGCOdQg+yShN5pIu7GHt2AVR3x/sreuxobkegx3V9BsD0TIJMsUIpeLoM7I4+zeBcb5TPblFpXzdR45oR3yMCS6CdwFFuPvtL1xmEDszL97+m1V3l10jX4QqTvZ0POleJHFNJ69Ia0nPl5NG5TbHD8BHlhFvhICAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebNotAuthorizedPages/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "WebNotAuthorizedPagesGWAPIEndpoint8EC3CEAB": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
      },
      "/"
     ]
    ]
   }
  },
  "WebNotAuthorizedPagesAPIGWPagesAPI": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebNotAuthorizedPagesGWAPI97EAFC19"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebNotAuthorizedPagesGWAPIDeploymentStagepagesAPI23617D29"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "WebNotAuthorizedPages-APIGW-PagesAPI"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}