{
 "Resources": {
  "BotFatherLambdaServiceRole2E79358E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BotFatherTheBot/BotFather-Lambda/ServiceRole/Resource"
   }
  },
  "BotFatherLambdaServiceRoleDefaultPolicy77C60D99": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "BotFatherTelegramFacingStuff:ExportsOutputFnGetAttBotFatherincomingBotEventsfifo329343C3Arn9D5437C4"
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::ImportValue": "BotFatherTelegramFacingStuff:ExportsOutputFnGetAttBotFatherincomingBotEventsdlqfifoA21DCF6CArnF826A76F"
       }
      },
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": "arn:aws:s3:::bots-bucket/*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/sessions"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "BotFatherLambdaServiceRoleDefaultPolicy77C60D99",
    "Roles": [
     {
      "Ref": "BotFatherLambdaServiceRole2E79358E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BotFatherTheBot/BotFather-Lambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "BotFatherLambdaDEDED5B3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "d993f0e07dff89011bbb71bb2e9e1ba40349d7311c9685af12334986588fb988.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "BotFatherLambdaServiceRole2E79358E",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "messagesTable": "messages",
      "sessionsTable": "sessions",
      "s3BotsBucket": "bots-bucket",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "BOT_FATHER_TOKEN": "5647754848:AAGoCADAcu0oDjvsVcWnWEJcazWg_kcCnvI",
      "botFatherId": "5647754848",
      "createPostTemplateSQSSURL": "https://sqs.us-east-1.amazonaws.com/993738567487/SendMessage-CreatePostTemplate.fifo",
      "tg_api_serverURI": "https://api.zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "BotFather-Lambda",
    "Handler": "index.botFatherHandler",
    "Layers": [],
    "Runtime": "nodejs16.x",
    "Timeout": 10
   },
   "DependsOn": [
    "BotFatherLambdaServiceRoleDefaultPolicy77C60D99",
    "BotFatherLambdaServiceRole2E79358E"
   ],
   "Metadata": {
    "aws:cdk:path": "BotFatherTheBot/BotFather-Lambda/Resource",
    "aws:asset:path": "/Users/nick.stepanenko/Projects/TGBotWorkSpace/TGBot-My-BotFather",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "BotFatherLambdaSqsEventSourceBotFatherTelegramFacingStuffBotFatherincomingBotEventsfifo01DC8F000A14BE4E": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "BotFatherLambdaDEDED5B3"
    },
    "BatchSize": 1,
    "Enabled": true,
    "EventSourceArn": {
     "Fn::ImportValue": "BotFatherTelegramFacingStuff:ExportsOutputFnGetAttBotFatherincomingBotEventsfifo329343C3Arn9D5437C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BotFatherTheBot/BotFather-Lambda/SqsEventSource:BotFatherTelegramFacingStuffBotFatherincomingBotEventsfifo01DC8F00/Resource"
   }
  },
  "BotFatherLambdaSqsEventSourceBotFatherTelegramFacingStuffBotFatherincomingBotEventsdlqfifo10B2856266C2E942": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "BotFatherLambdaDEDED5B3"
    },
    "BatchSize": 1,
    "Enabled": false,
    "EventSourceArn": {
     "Fn::ImportValue": "BotFatherTelegramFacingStuff:ExportsOutputFnGetAttBotFatherincomingBotEventsdlqfifoA21DCF6CArnF826A76F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BotFatherTheBot/BotFather-Lambda/SqsEventSource:BotFatherTelegramFacingStuffBotFatherincomingBotEventsdlqfifo10B28562/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/2WOyw6CMBBFv4V9GQVd6FKM7jQGPoCUMppCaQnTYgzpv8tD3bg68zy5MWz3sA74k0JR1qGSBQyZ5aJmKZJxnUA27vJB8aYoea5NiRXBdcbZaWGl0UzyBobUKGTHu555M0qK19QulWe0yTkRWoLDhLGHxIkabcIJ2aKHYXz4WU89apvNGS68baV+TL7/qfdsVo6xH5+jb3bPpsBQ0aqPdhDFEAUVSRl2TlvZIKQL364PeIgFAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "BotFatherTheBot/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}