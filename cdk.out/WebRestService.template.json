{
 "Resources": {
  "LambdaJWTAuthorizerServiceRole5D71D691": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/ServiceRole/Resource"
   }
  },
  "LambdaJWTAuthorizerServiceRoleDefaultPolicy2E3FC487": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaJWTAuthorizerServiceRoleDefaultPolicy2E3FC487",
    "Roles": [
     {
      "Ref": "LambdaJWTAuthorizerServiceRole5D71D691"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaJWTAuthorizerF61869D9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "1b0854cbc60ad7d92d30a3eb0061a9f5bd3a81fc01e22d1630a97c9f17337e92.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LambdaJWTAuthorizerServiceRole5D71D691",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "botsTable": "bots",
      "accessTokenExpirationMinutes": "60",
      "refreshTokenExpirationDays": "365",
      "allowedResources": "arn:aws:execute-api:us-east-1:993738567487:*",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "JWTAuthorizer-Lambda",
    "Handler": "index.LambdaJWTAuthorizerHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "LambdaJWTAuthorizerServiceRoleDefaultPolicy2E3FC487",
    "LambdaJWTAuthorizerServiceRole5D71D691"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/Resource",
    "aws:asset:path": "asset.1b0854cbc60ad7d92d30a3eb0061a9f5bd3a81fc01e22d1630a97c9f17337e92",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "LambdaJWTAuthorizerLogRetention603A8E46": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaJWTAuthorizerF61869D9"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/LogRetention/Resource"
   }
  },
  "LambdaJWTAuthorizerWebRestServiceWebRestServiceLambdaJWTAuthorizerObject99D0B0FAPermissions0F9F394F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaJWTAuthorizerF61869D9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/authorizers/",
       {
        "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/WebRestServiceWebRestServiceLambdaJWTAuthorizerObject99D0B0FA:Permissions"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WebRestServiceLambdaJWTAuthorizerObject90D15D2F": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "Name": "WebRestService-LambdaJWTAuthorizerObject",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Type": "REQUEST",
    "AuthorizerResultTtlInSeconds": 3600,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "LambdaJWTAuthorizerF61869D9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "LambdaJWTAuthorizerF61869D9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "LambdaJWTAuthorizerF61869D9",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.cookie"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-LambdaJWTAuthorizerObject/Resource"
   }
  },
  "WebRestServiceGWAPID1BA5018": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "WebRestService-GWAPI"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Resource"
   }
  },
  "WebRestServiceGWAPICloudWatchRoleDB7C4E5F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/CloudWatchRole/Resource"
   }
  },
  "WebRestServiceGWAPIAccountDC3CB312": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPICloudWatchRoleDB7C4E5F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "WebRestServiceGWAPID1BA5018"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Account"
   }
  },
  "WebRestServiceGWAPIDeploymentE0A23672c65c10582b2d319b17f4dc1dd2a4820b": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "WebRestServiceGWAPIBotsGetMyBotsGET0773596C",
    "WebRestServiceGWAPIBotsGetMyBotsOPTIONSA63AD8BA",
    "WebRestServiceGWAPIBotsGetMyBotsA76DBF06",
    "WebRestServiceGWAPIBotsOPTIONSB0668A3B",
    "WebRestServiceGWAPIBots64472057",
    "WebRestServiceGWAPIDefaultCurrencyGetGET8FC11C25",
    "WebRestServiceGWAPIDefaultCurrencyGetOPTIONSCF9E622D",
    "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24",
    "WebRestServiceGWAPIDefaultCurrencyOPTIONSA094FE46",
    "WebRestServiceGWAPIDefaultCurrency594708F8",
    "WebRestServiceGWAPIDefaultCurrencySetOPTIONSD95A251D",
    "WebRestServiceGWAPIDefaultCurrencySetPUT6192D82E",
    "WebRestServiceGWAPIDefaultCurrencySet16539C0F",
    "WebRestServiceGWAPIOPTIONS622B6CF2",
    "WebRestServiceGWAPIPaymentOptionsAddOPTIONSFA7317DC",
    "WebRestServiceGWAPIPaymentOptionsAddPOSTA8E96E4D",
    "WebRestServiceGWAPIPaymentOptionsAddED43A709",
    "WebRestServiceGWAPIPaymentOptionsDeleteDELETEE156F660",
    "WebRestServiceGWAPIPaymentOptionsDeleteOPTIONSB5072DA6",
    "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109",
    "WebRestServiceGWAPIPaymentOptionsEditOPTIONS26B676AE",
    "WebRestServiceGWAPIPaymentOptionsEditPUT9E17C24D",
    "WebRestServiceGWAPIPaymentOptionsEdit875D169E",
    "WebRestServiceGWAPIPaymentOptionsListGETB110FC75",
    "WebRestServiceGWAPIPaymentOptionsListOPTIONS9FF6A85D",
    "WebRestServiceGWAPIPaymentOptionsListF21F6B91",
    "WebRestServiceGWAPIPaymentOptionsOPTIONS0FEA12A9",
    "WebRestServiceGWAPIPaymentOptions9E07B8E5",
    "WebRestServiceGWAPISubscriptionOptionsAddOPTIONS5A5CC104",
    "WebRestServiceGWAPISubscriptionOptionsAddPOSTA37F84CB",
    "WebRestServiceGWAPISubscriptionOptionsAdd926241E1",
    "WebRestServiceGWAPISubscriptionOptionsDeleteDELETEECA6EB8C",
    "WebRestServiceGWAPISubscriptionOptionsDeleteOPTIONSCA74B769",
    "WebRestServiceGWAPISubscriptionOptionsDelete05FA8B22",
    "WebRestServiceGWAPISubscriptionOptionsEditOPTIONSA1E89273",
    "WebRestServiceGWAPISubscriptionOptionsEditPUT446D0928",
    "WebRestServiceGWAPISubscriptionOptionsEdit72A88937",
    "WebRestServiceGWAPISubscriptionOptionsListGET54B1DA14",
    "WebRestServiceGWAPISubscriptionOptionsListOPTIONS46B8A0B4",
    "WebRestServiceGWAPISubscriptionOptionsList32AC312E",
    "WebRestServiceGWAPISubscriptionOptionsOPTIONS5C7AA525",
    "WebRestServiceGWAPISubscriptionOptions151DF857"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Deployment/Resource"
   }
  },
  "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "DeploymentId": {
     "Ref": "WebRestServiceGWAPIDeploymentE0A23672c65c10582b2d319b17f4dc1dd2a4820b"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "StageName": "SecureAPI"
   },
   "DependsOn": [
    "WebRestServiceGWAPIAccountDC3CB312"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/DeploymentStage.SecureAPI/Resource"
   }
  },
  "WebRestServiceGWAPIOPTIONS622B6CF2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBots64472057": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "Bots",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Resource"
   }
  },
  "WebRestServiceGWAPIBotsOPTIONSB0668A3B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsA76DBF06": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "GetMyBots",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsOPTIONSA63AD8BA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsGetMyBotsA76DBF06"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsGetMyBots65F6DEA7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListBotsLambdaC9B0E149",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/Bots/GetMyBots"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.GetMyBots"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsGetMyBots6B7F325F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListBotsLambdaC9B0E149",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/Bots/GetMyBots"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.GetMyBots"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsGET0773596C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsGetMyBotsA76DBF06"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListBotsLambdaC9B0E149",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/GET/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrency594708F8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "DefaultCurrency",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyOPTIONSA094FE46": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetOPTIONSCF9E622D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETDefaultCurrencyGetFA955FDD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaCBDD42E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/DefaultCurrency/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..DefaultCurrency.Get"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETDefaultCurrencyGetB831D01E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaCBDD42E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/DefaultCurrency/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..DefaultCurrency.Get"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetGET8FC11C25": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCurrencySettingsLambdaCBDD42E1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySet16539C0F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "PathPart": "Set",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetOPTIONSD95A251D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencySet16539C0F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTDefaultCurrencySetA7F6846A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambda8DC44B43",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/DefaultCurrency/Set"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..DefaultCurrency.Set"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTDefaultCurrencySet56711419": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambda8DC44B43",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/DefaultCurrency/Set"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..DefaultCurrency.Set"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetPUT6192D82E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencySet16539C0F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditCurrencySettingsLambda8DC44B43",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptions9E07B8E5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "PaymentOptions",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsOPTIONS0FEA12A9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListF21F6B91": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListOPTIONS9FF6A85D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsListF21F6B91"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsList4807FEDC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaACAA5262",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/PaymentOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.List"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsList5EC93259": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaACAA5262",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/PaymentOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.List"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETB110FC75": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsListF21F6B91"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListPaymentOptionsLambdaACAA5262",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddED43A709": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddOPTIONSFA7317DC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsAddED43A709"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsAdd58D4B42E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaBFF77B7F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/PaymentOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Add"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsAdd4DDD81B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaBFF77B7F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/PaymentOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Add"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTA8E96E4D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsAddED43A709"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddPaymentOptionLambdaBFF77B7F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteOPTIONSB5072DA6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEPaymentOptionsDeleteA5F28725": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaEC66351C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/PaymentOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..PaymentOptions.Delete"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEPaymentOptionsDeleteD99E768E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaEC66351C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/PaymentOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..PaymentOptions.Delete"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEE156F660": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeletePaymentOptionLambdaEC66351C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEdit875D169E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditOPTIONS26B676AE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsEdit875D169E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPaymentOptionsEdit0C85BB15": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambda398037A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/PaymentOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PaymentOptions.Edit"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPaymentOptionsEditA5F013B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambda398037A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/PaymentOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PaymentOptions.Edit"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUT9E17C24D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsEdit875D169E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditPaymentOptionLambda398037A2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptions151DF857": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "SubscriptionOptions",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsOPTIONS5C7AA525": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptions151DF857"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsList32AC312E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptions151DF857"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/List/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsListOPTIONS46B8A0B4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsList32AC312E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionOptionsList8959F725": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListSubscriptionOptionsLambda69F2B5B8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/SubscriptionOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionOptions.List"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionOptionsList942FB682": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListSubscriptionOptionsLambda69F2B5B8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/SubscriptionOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionOptions.List"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsListGET54B1DA14": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsList32AC312E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListSubscriptionOptionsLambda69F2B5B8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsAdd926241E1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptions151DF857"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Add/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsAddOPTIONS5A5CC104": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsAdd926241E1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionOptionsAdd05CF3635": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddSubscriptionOptionLambdaAD82601B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/SubscriptionOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionOptions.Add"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionOptionsAdd28EFA12E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddSubscriptionOptionLambdaAD82601B",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/SubscriptionOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionOptions.Add"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsAddPOSTA37F84CB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsAdd926241E1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddSubscriptionOptionLambdaAD82601B",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsDelete05FA8B22": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptions151DF857"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Delete/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsDeleteOPTIONSCA74B769": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsDelete05FA8B22"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETESubscriptionOptionsDeleteC6189F6D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteSubscriptionOptionLambda8A54B876",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/SubscriptionOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..SubscriptionOptions.Delete"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETESubscriptionOptionsDeleteD6F0B82A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteSubscriptionOptionLambda8A54B876",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/SubscriptionOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..SubscriptionOptions.Delete"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsDeleteDELETEECA6EB8C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsDelete05FA8B22"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteSubscriptionOptionLambda8A54B876",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsEdit72A88937": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptions151DF857"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Edit/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsEditOPTIONSA1E89273": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsEdit72A88937"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTSubscriptionOptionsEditB594A3F8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditSubscriptionOptionLambda2AC18E92",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/SubscriptionOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..SubscriptionOptions.Edit"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTSubscriptionOptionsEditA58ACAEE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditSubscriptionOptionLambda2AC18E92",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/SubscriptionOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..SubscriptionOptions.Edit"
   }
  },
  "WebRestServiceGWAPISubscriptionOptionsEditPUT446D0928": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionOptionsEdit72A88937"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditSubscriptionOptionLambda2AC18E92",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionOptions/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWAPIUsagePlan476AD6E9": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      "Stage": {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "Throttle": {}
     }
    ],
    "Quota": {
     "Limit": 10000000,
     "Period": "MONTH"
    },
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 100
    },
    "UsagePlanName": "WebRestService-GWAPI-UsagePlan"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GWAPI-UsagePlan/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1": {
   "Type": "AWS::ApiGateway::DomainName",
   "Properties": {
    "DomainName": "secure-api.zuzona.com",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "RegionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GW-SubDomain/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWSubDomainMapWebRestServiceWebRestServiceGWAPIA25BC9C13DA8860E": {
   "Type": "AWS::ApiGateway::BasePathMapping",
   "Properties": {
    "DomainName": {
     "Ref": "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Stage": {
     "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GW-SubDomain/Map:--=>WebRestServiceWebRestServiceGWAPIA25BC9C1/Resource"
   }
  },
  "WebRestServiceARecord98E8B946": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "secure-api.zuzona.com.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1",
       "RegionalDomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1",
       "RegionalHostedZoneId"
      ]
     }
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T"
   },
   "DependsOn": [
    "WebRestServiceARecordDeleteExistingRecordSetCustomResource7B895BB7"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-ARecord/Resource"
   }
  },
  "WebRestServiceARecordDeleteExistingRecordSetCustomResource7B895BB7": {
   "Type": "Custom::DeleteExistingRecordSet",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E",
      "Arn"
     ]
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T",
    "RecordName": "secure-api.zuzona.com.",
    "RecordType": "A"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-ARecord/DeleteExistingRecordSetCustomResource/Default"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": "route53:GetChange",
         "Resource": "*"
        },
        {
         "Effect": "Allow",
         "Action": "route53:ListResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         }
        },
        {
         "Effect": "Allow",
         "Action": "route53:ChangeResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         },
         "Condition": {
          "ForAllValues:StringEquals": {
           "route53:ChangeResourceRecordSetsRecordTypes": [
            "A"
           ],
           "route53:ChangeResourceRecordSetsActions": [
            "DELETE"
           ]
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "04371e66614da6603a2d0caff555a5ee48172084069076b90c459275c26db019.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
    "aws:asset:path": "asset.04371e66614da6603a2d0caff555a5ee48172084069076b90c459275c26db019",
    "aws:asset:property": "Code"
   }
  },
  "ListBotsLambdaServiceRoleA6E24787": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/ServiceRole/Resource"
   }
  },
  "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
    "Roles": [
     {
      "Ref": "ListBotsLambdaServiceRoleA6E24787"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListBotsLambdaC9B0E149": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "9bee861f3aad76c112b2cd9b674616a7922a38c344954efe00a92f69e0612cb5.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListBotsLambdaServiceRoleA6E24787",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ListBots-Lambda",
    "Handler": "index.ListMyBotsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
    "ListBotsLambdaServiceRoleA6E24787"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/Resource",
    "aws:asset:path": "asset.9bee861f3aad76c112b2cd9b674616a7922a38c344954efe00a92f69e0612cb5",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetCurrencySettingsLambdaServiceRole33B26775": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/ServiceRole/Resource"
   }
  },
  "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3",
    "Roles": [
     {
      "Ref": "GetCurrencySettingsLambdaServiceRole33B26775"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCurrencySettingsLambdaCBDD42E1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "8730c5a15e9312b29c7004201c56f4230c8263efd302dcd04d367219b0ee62e3.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaServiceRole33B26775",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-GetCurrencySettings-Lambda",
    "Handler": "index.GetCurrencySettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3",
    "GetCurrencySettingsLambdaServiceRole33B26775"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/Resource",
    "aws:asset:path": "asset.8730c5a15e9312b29c7004201c56f4230c8263efd302dcd04d367219b0ee62e3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditCurrencySettingsLambdaServiceRole9008F6CB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/ServiceRole/Resource"
   }
  },
  "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478",
    "Roles": [
     {
      "Ref": "EditCurrencySettingsLambdaServiceRole9008F6CB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditCurrencySettingsLambda8DC44B43": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "9322557b604551ec41f059db0df0ed3b9bf249f48e92713faa1e71d78346ed86.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambdaServiceRole9008F6CB",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-EditCurrencySettings-Lambda",
    "Handler": "index.EditCurrencySettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478",
    "EditCurrencySettingsLambdaServiceRole9008F6CB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/Resource",
    "aws:asset:path": "asset.9322557b604551ec41f059db0df0ed3b9bf249f48e92713faa1e71d78346ed86",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListPaymentOptionsLambdaServiceRoleD3A97E58": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/ServiceRole/Resource"
   }
  },
  "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
    "Roles": [
     {
      "Ref": "ListPaymentOptionsLambdaServiceRoleD3A97E58"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListPaymentOptionsLambdaACAA5262": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "1290f0c335435d81cf3ceb7a9f87ad965b78b2216235a62afe301b0e28f47cd1.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaServiceRoleD3A97E58",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ListPaymentOptions-Lambda",
    "Handler": "index.ListPaymentOptionsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
    "ListPaymentOptionsLambdaServiceRoleD3A97E58"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/Resource",
    "aws:asset:path": "asset.1290f0c335435d81cf3ceb7a9f87ad965b78b2216235a62afe301b0e28f47cd1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddPaymentOptionLambdaServiceRole15897195": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
    "Roles": [
     {
      "Ref": "AddPaymentOptionLambdaServiceRole15897195"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddPaymentOptionLambdaBFF77B7F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "72b6b099c02889051ffd19496da99340f19f6553e5b8f4ec3cb3c02c36774a15.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaServiceRole15897195",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-AddPaymentOption-Lambda",
    "Handler": "index.AddPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
    "AddPaymentOptionLambdaServiceRole15897195"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.72b6b099c02889051ffd19496da99340f19f6553e5b8f4ec3cb3c02c36774a15",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditPaymentOptionLambdaServiceRole73BB83E4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
    "Roles": [
     {
      "Ref": "EditPaymentOptionLambdaServiceRole73BB83E4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditPaymentOptionLambda398037A2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "7cf093c518f372964dc059089a303729fe60592ddaf358c085014e58f4a4d5af.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambdaServiceRole73BB83E4",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-EditPaymentOption-Lambda",
    "Handler": "index.EditPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
    "EditPaymentOptionLambdaServiceRole73BB83E4"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.7cf093c518f372964dc059089a303729fe60592ddaf358c085014e58f4a4d5af",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeletePaymentOptionLambdaServiceRoleB4EBD3CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
    "Roles": [
     {
      "Ref": "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeletePaymentOptionLambdaEC66351C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "0ca5861c09ff18bf09e9902854ce01b25ee5429de08cc523ab90264f5d9b4220.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaServiceRoleB4EBD3CA",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-DeletePaymentOption-Lambda",
    "Handler": "index.DeletePaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
    "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/Resource",
    "aws:asset:path": "asset.0ca5861c09ff18bf09e9902854ce01b25ee5429de08cc523ab90264f5d9b4220",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListSubscriptionOptionsLambdaServiceRole3156759B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionOptionsLambda/ServiceRole/Resource"
   }
  },
  "ListSubscriptionOptionsLambdaServiceRoleDefaultPolicy169A18BC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListSubscriptionOptionsLambdaServiceRoleDefaultPolicy169A18BC",
    "Roles": [
     {
      "Ref": "ListSubscriptionOptionsLambdaServiceRole3156759B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionOptionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListSubscriptionOptionsLambda69F2B5B8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ef8c1c14987c8f3ac7ba1f187059735dca516649d2a3088cb9d7ea063b3ea83a.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListSubscriptionOptionsLambdaServiceRole3156759B",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ListSubscriptionOptions-Lambda",
    "Handler": "index.ListSubscriptionOptionsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListSubscriptionOptionsLambdaServiceRoleDefaultPolicy169A18BC",
    "ListSubscriptionOptionsLambdaServiceRole3156759B"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionOptionsLambda/Resource",
    "aws:asset:path": "asset.ef8c1c14987c8f3ac7ba1f187059735dca516649d2a3088cb9d7ea063b3ea83a",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddSubscriptionOptionLambdaServiceRoleD682BAAD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionOptionLambda/ServiceRole/Resource"
   }
  },
  "AddSubscriptionOptionLambdaServiceRoleDefaultPolicy6993A0BC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddSubscriptionOptionLambdaServiceRoleDefaultPolicy6993A0BC",
    "Roles": [
     {
      "Ref": "AddSubscriptionOptionLambdaServiceRoleD682BAAD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddSubscriptionOptionLambdaAD82601B": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "8c4777d9322eef375490590e1ac0d5667ec7a1d28eded257fee50039ea6c9ba3.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddSubscriptionOptionLambdaServiceRoleD682BAAD",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-AddSubscription-Lambda",
    "Handler": "index.AddSubscriptionOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "AddSubscriptionOptionLambdaServiceRoleDefaultPolicy6993A0BC",
    "AddSubscriptionOptionLambdaServiceRoleD682BAAD"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionOptionLambda/Resource",
    "aws:asset:path": "asset.8c4777d9322eef375490590e1ac0d5667ec7a1d28eded257fee50039ea6c9ba3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditSubscriptionOptionLambdaServiceRole58C7D02B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionOptionLambda/ServiceRole/Resource"
   }
  },
  "EditSubscriptionOptionLambdaServiceRoleDefaultPolicy89E7A583": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditSubscriptionOptionLambdaServiceRoleDefaultPolicy89E7A583",
    "Roles": [
     {
      "Ref": "EditSubscriptionOptionLambdaServiceRole58C7D02B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditSubscriptionOptionLambda2AC18E92": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "800f8d5b4afc8fc29d06e21bfdac8e1021b20e51b2c9b2aa1e4fc2c8faad2265.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditSubscriptionOptionLambdaServiceRole58C7D02B",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-EditSubscription-Lambda",
    "Handler": "index.EditSubscriptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditSubscriptionOptionLambdaServiceRoleDefaultPolicy89E7A583",
    "EditSubscriptionOptionLambdaServiceRole58C7D02B"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionOptionLambda/Resource",
    "aws:asset:path": "asset.800f8d5b4afc8fc29d06e21bfdac8e1021b20e51b2c9b2aa1e4fc2c8faad2265",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteSubscriptionOptionLambdaServiceRole13C39553": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionOptionLambda/ServiceRole/Resource"
   }
  },
  "DeleteSubscriptionOptionLambdaServiceRoleDefaultPolicyD5922560": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteSubscriptionOptionLambdaServiceRoleDefaultPolicyD5922560",
    "Roles": [
     {
      "Ref": "DeleteSubscriptionOptionLambdaServiceRole13C39553"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteSubscriptionOptionLambda8A54B876": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "a449d211d1f6e88ac68905e84ef1daf7b2b48214f018283a63cfda4e884cba36.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteSubscriptionOptionLambdaServiceRole13C39553",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-DeleteSubscription-Lambda",
    "Handler": "index.DeleteSubscriptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:30",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:4",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:13",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:6"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DeleteSubscriptionOptionLambdaServiceRoleDefaultPolicyD5922560",
    "DeleteSubscriptionOptionLambdaServiceRole13C39553"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionOptionLambda/Resource",
    "aws:asset:path": "asset.a449d211d1f6e88ac68905e84ef1daf7b2b48214f018283a63cfda4e884cba36",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11SwW7CMAz9lt1DpoKQdi1DOwGrinZGIfVKoIm7OAGxqv++JGXQ7eT34vjZfsmUzzOePYkLTWR1mjRqz7utE/LESiD0VgILuV3XCL2vxM5gBUfimxTevJFOoWFKaN6V2AB7/TQpFtgoeY10QD2j2U4QgSOexxA4X3h5ArcQBGyQ510ouKvGYrBaEQXWswZr4iusS3Bg0gXRqlo4uIhr6A5fHsjl3h3Qqm+wsXzEyphsVRrwAXMp0RvHltA2eNVBN56OWLCiTlsN4NeTNPMagnoVkzd0d2xoMuAPCoVFI9I+D7JELZTZCJ1uj1iULoQ7rEXbKlPH7L+jnln0DuYz3uUlSLTV0DCiLbi+Z8nhOPFNYDzYu3etD2t6cqgfiT+0sHhWFdiexffmR3o+Zy88m4aPciSlJjZ4pjTwcog/yOCPZ0QCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "WebRestServiceGWAPIEndpoint497456A8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "/"
     ]
    ]
   }
  },
  "WebRestServiceAPIGWSecureAPI": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "WebRestService-APIGW-SecureAPI"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}