{
 "Resources": {
  "LambdaJWTAuthorizerServiceRole5D71D691": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/ServiceRole/Resource"
   }
  },
  "LambdaJWTAuthorizerServiceRoleDefaultPolicy2E3FC487": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LambdaJWTAuthorizerServiceRoleDefaultPolicy2E3FC487",
    "Roles": [
     {
      "Ref": "LambdaJWTAuthorizerServiceRole5D71D691"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LambdaJWTAuthorizerF61869D9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "1b0854cbc60ad7d92d30a3eb0061a9f5bd3a81fc01e22d1630a97c9f17337e92.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LambdaJWTAuthorizerServiceRole5D71D691",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "botsTable": "bots",
      "accessTokenExpirationMinutes": "60",
      "refreshTokenExpirationDays": "365",
      "allowedResources": "arn:aws:execute-api:us-east-1:993738567487:*",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "JWTAuthorizer-Lambda",
    "Handler": "index.LambdaJWTAuthorizerHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "LambdaJWTAuthorizerServiceRoleDefaultPolicy2E3FC487",
    "LambdaJWTAuthorizerServiceRole5D71D691"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/Resource",
    "aws:asset:path": "asset.1b0854cbc60ad7d92d30a3eb0061a9f5bd3a81fc01e22d1630a97c9f17337e92",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "LambdaJWTAuthorizerLogRetention603A8E46": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LambdaJWTAuthorizerF61869D9"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/LogRetention/Resource"
   }
  },
  "LambdaJWTAuthorizerWebRestServiceWebRestServiceLambdaJWTAuthorizerObject99D0B0FAPermissions0F9F394F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "LambdaJWTAuthorizerF61869D9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/authorizers/",
       {
        "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LambdaJWTAuthorizer/WebRestServiceWebRestServiceLambdaJWTAuthorizerObject99D0B0FA:Permissions"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.eb5b005c858404ea0c8f68098ed5dcdf5340e02461f149751d10f59c210d5ef8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WebRestServiceLambdaJWTAuthorizerObject90D15D2F": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "Name": "WebRestService-LambdaJWTAuthorizerObject",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Type": "REQUEST",
    "AuthorizerResultTtlInSeconds": 3600,
    "AuthorizerUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "LambdaJWTAuthorizerF61869D9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":apigateway:",
       {
        "Fn::Select": [
         3,
         {
          "Fn::Split": [
           ":",
           {
            "Fn::GetAtt": [
             "LambdaJWTAuthorizerF61869D9",
             "Arn"
            ]
           }
          ]
         }
        ]
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "LambdaJWTAuthorizerF61869D9",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    },
    "IdentitySource": "method.request.header.cookie"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-LambdaJWTAuthorizerObject/Resource"
   }
  },
  "WebRestServiceGWAPID1BA5018": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "WebRestService-GWAPI"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Resource"
   }
  },
  "WebRestServiceGWAPICloudWatchRoleDB7C4E5F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/CloudWatchRole/Resource"
   }
  },
  "WebRestServiceGWAPIAccountDC3CB312": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPICloudWatchRoleDB7C4E5F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "WebRestServiceGWAPID1BA5018"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Account"
   }
  },
  "WebRestServiceGWAPIDeploymentE0A236723ea2a9f30f3e5c006be6dee3aaa60014": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "WebRestServiceGWAPIBotsGetMyBotsGET0773596C",
    "WebRestServiceGWAPIBotsGetMyBotsOPTIONSA63AD8BA",
    "WebRestServiceGWAPIBotsGetMyBotsA76DBF06",
    "WebRestServiceGWAPIBotsOPTIONSB0668A3B",
    "WebRestServiceGWAPIBots64472057",
    "WebRestServiceGWAPIContentPlansAddOPTIONS237499A8",
    "WebRestServiceGWAPIContentPlansAddPOSTA28A4804",
    "WebRestServiceGWAPIContentPlansAdd33EA37BD",
    "WebRestServiceGWAPIContentPlansDeleteDELETE9F81289F",
    "WebRestServiceGWAPIContentPlansDeleteOPTIONSF52BFEF4",
    "WebRestServiceGWAPIContentPlansDelete6CA4B161",
    "WebRestServiceGWAPIContentPlansEditOPTIONS05FB454C",
    "WebRestServiceGWAPIContentPlansEditPUTCFC5FBAA",
    "WebRestServiceGWAPIContentPlansEditD345A8E1",
    "WebRestServiceGWAPIContentPlansGetOPTIONS42CE981B",
    "WebRestServiceGWAPIContentPlansGetPOST8CDC2663",
    "WebRestServiceGWAPIContentPlansGetDD882AFD",
    "WebRestServiceGWAPIContentPlansListGET592A5C97",
    "WebRestServiceGWAPIContentPlansListOPTIONSE4291FD6",
    "WebRestServiceGWAPIContentPlansListBEEB280F",
    "WebRestServiceGWAPIContentPlansOPTIONSF41A55F4",
    "WebRestServiceGWAPIContentPlans5CB61612",
    "WebRestServiceGWAPIDefaultCurrencyGetGET8FC11C25",
    "WebRestServiceGWAPIDefaultCurrencyGetOPTIONSCF9E622D",
    "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24",
    "WebRestServiceGWAPIDefaultCurrencyOPTIONSA094FE46",
    "WebRestServiceGWAPIDefaultCurrency594708F8",
    "WebRestServiceGWAPIDefaultCurrencySetOPTIONSD95A251D",
    "WebRestServiceGWAPIDefaultCurrencySetPUT6192D82E",
    "WebRestServiceGWAPIDefaultCurrencySet16539C0F",
    "WebRestServiceGWAPIOPTIONS622B6CF2",
    "WebRestServiceGWAPIPaymentOptionsAddOPTIONSFA7317DC",
    "WebRestServiceGWAPIPaymentOptionsAddPOSTA8E96E4D",
    "WebRestServiceGWAPIPaymentOptionsAddED43A709",
    "WebRestServiceGWAPIPaymentOptionsDeleteDELETEE156F660",
    "WebRestServiceGWAPIPaymentOptionsDeleteOPTIONSB5072DA6",
    "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109",
    "WebRestServiceGWAPIPaymentOptionsEditOPTIONS26B676AE",
    "WebRestServiceGWAPIPaymentOptionsEditPUT9E17C24D",
    "WebRestServiceGWAPIPaymentOptionsEdit875D169E",
    "WebRestServiceGWAPIPaymentOptionsGetOPTIONS83BA526C",
    "WebRestServiceGWAPIPaymentOptionsGetPOST40834812",
    "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE",
    "WebRestServiceGWAPIPaymentOptionsListGETB110FC75",
    "WebRestServiceGWAPIPaymentOptionsListOPTIONS9FF6A85D",
    "WebRestServiceGWAPIPaymentOptionsListF21F6B91",
    "WebRestServiceGWAPIPaymentOptionsOPTIONS0FEA12A9",
    "WebRestServiceGWAPIPaymentOptions9E07B8E5",
    "WebRestServiceGWAPISubscriptionPlansAddOPTIONS7F69D6BD",
    "WebRestServiceGWAPISubscriptionPlansAddPOST91D09D07",
    "WebRestServiceGWAPISubscriptionPlansAddBD572942",
    "WebRestServiceGWAPISubscriptionPlansDeleteDELETEBB0F9A7A",
    "WebRestServiceGWAPISubscriptionPlansDeleteOPTIONSCCE97906",
    "WebRestServiceGWAPISubscriptionPlansDelete1277CC44",
    "WebRestServiceGWAPISubscriptionPlansEditOPTIONS92474053",
    "WebRestServiceGWAPISubscriptionPlansEditPUT52353490",
    "WebRestServiceGWAPISubscriptionPlansEdit50005E39",
    "WebRestServiceGWAPISubscriptionPlansGetOPTIONS967ECA8D",
    "WebRestServiceGWAPISubscriptionPlansGetPOST12BB776F",
    "WebRestServiceGWAPISubscriptionPlansGet7B3121EE",
    "WebRestServiceGWAPISubscriptionPlansListGET12C816F5",
    "WebRestServiceGWAPISubscriptionPlansListOPTIONS9639A412",
    "WebRestServiceGWAPISubscriptionPlansList976233C4",
    "WebRestServiceGWAPISubscriptionPlansOPTIONS103BD4D4",
    "WebRestServiceGWAPISubscriptionPlansDD34CD79"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Deployment/Resource"
   }
  },
  "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "DeploymentId": {
     "Ref": "WebRestServiceGWAPIDeploymentE0A236723ea2a9f30f3e5c006be6dee3aaa60014"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "INFO",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "StageName": "SecureAPI"
   },
   "DependsOn": [
    "WebRestServiceGWAPIAccountDC3CB312"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/DeploymentStage.SecureAPI/Resource"
   }
  },
  "WebRestServiceGWAPIOPTIONS622B6CF2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBots64472057": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "Bots",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Resource"
   }
  },
  "WebRestServiceGWAPIBotsOPTIONSB0668A3B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsA76DBF06": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "GetMyBots",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsOPTIONSA63AD8BA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsGetMyBotsA76DBF06"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsGetMyBots65F6DEA7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListBotsLambdaC9B0E149",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/Bots/GetMyBots"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.GetMyBots"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsGetMyBots6B7F325F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListBotsLambdaC9B0E149",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/Bots/GetMyBots"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.GetMyBots"
   }
  },
  "WebRestServiceGWAPIBotsGetMyBotsGET0773596C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsGetMyBotsA76DBF06"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListBotsLambdaC9B0E149",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/GetMyBots/GET/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrency594708F8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "DefaultCurrency",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyOPTIONSA094FE46": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetOPTIONSCF9E622D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETDefaultCurrencyGetFA955FDD": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaCBDD42E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/DefaultCurrency/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..DefaultCurrency.Get"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETDefaultCurrencyGetB831D01E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaCBDD42E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/DefaultCurrency/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..DefaultCurrency.Get"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGetGET8FC11C25": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencyGetFA1B9B24"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCurrencySettingsLambdaCBDD42E1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySet16539C0F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "PathPart": "Set",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetOPTIONSD95A251D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencySet16539C0F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTDefaultCurrencySetA7F6846A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambda8DC44B43",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/DefaultCurrency/Set"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..DefaultCurrency.Set"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTDefaultCurrencySet56711419": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambda8DC44B43",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/DefaultCurrency/Set"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..DefaultCurrency.Set"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencySetPUT6192D82E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrencySet16539C0F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditCurrencySettingsLambda8DC44B43",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Set/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptions9E07B8E5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "PaymentOptions",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsOPTIONS0FEA12A9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListF21F6B91": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListOPTIONS9FF6A85D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsListF21F6B91"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsList4807FEDC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaACAA5262",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/PaymentOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.List"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsList5EC93259": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaACAA5262",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/PaymentOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.List"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETB110FC75": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsListF21F6B91"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListPaymentOptionsLambdaACAA5262",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetOPTIONS83BA526C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsGet722ADE7C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetPaymentOptionLambdaD6DBF61A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/PaymentOptions/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Get"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsGetC541804B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetPaymentOptionLambdaD6DBF61A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/PaymentOptions/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Get"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetPOST40834812": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetPaymentOptionLambdaD6DBF61A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/POST/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddED43A709": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddOPTIONSFA7317DC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsAddED43A709"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsAdd58D4B42E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaBFF77B7F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/PaymentOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Add"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsAdd4DDD81B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaBFF77B7F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/PaymentOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Add"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTA8E96E4D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsAddED43A709"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddPaymentOptionLambdaBFF77B7F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteOPTIONSB5072DA6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEPaymentOptionsDeleteA5F28725": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaEC66351C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/PaymentOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..PaymentOptions.Delete"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEPaymentOptionsDeleteD99E768E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaEC66351C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/PaymentOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..PaymentOptions.Delete"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEE156F660": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeletePaymentOptionLambdaEC66351C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEdit875D169E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditOPTIONS26B676AE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsEdit875D169E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPaymentOptionsEdit0C85BB15": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambda398037A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/PaymentOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PaymentOptions.Edit"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPaymentOptionsEditA5F013B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambda398037A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/PaymentOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PaymentOptions.Edit"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUT9E17C24D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsEdit875D169E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditPaymentOptionLambda398037A2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDD34CD79": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "SubscriptionPlans",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansOPTIONS103BD4D4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansList976233C4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListOPTIONS9639A412": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansList976233C4"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionPlansList27FC104A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListSubscriptionPlansLambdaC114B87D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/SubscriptionPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionPlans.List"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionPlansListA89C8E67": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListSubscriptionPlansLambdaC114B87D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/SubscriptionPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionPlans.List"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListGET12C816F5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansList976233C4"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListSubscriptionPlansLambdaC114B87D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGet7B3121EE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetOPTIONS967ECA8D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansGet7B3121EE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionPlansGetF35E2256": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSubscriptionPlanLambda38ECFF18",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/SubscriptionPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionPlans.Get"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionPlansGetFE1D2446": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSubscriptionPlanLambda38ECFF18",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/SubscriptionPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionPlans.Get"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetPOST12BB776F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansGet7B3121EE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetSubscriptionPlanLambda38ECFF18",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/POST/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddBD572942": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddOPTIONS7F69D6BD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansAddBD572942"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionPlansAdd69359059": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddSubscriptionPlanLambdaCAFEE16F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/SubscriptionPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionPlans.Add"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionPlansAdd4F270A2B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddSubscriptionPlanLambdaCAFEE16F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/SubscriptionPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionPlans.Add"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddPOST91D09D07": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansAddBD572942"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddSubscriptionPlanLambdaCAFEE16F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEdit50005E39": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditOPTIONS92474053": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansEdit50005E39"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTSubscriptionPlansEditFF525E08": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditSubscriptionPlanLambdaDEE52D77",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/SubscriptionPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..SubscriptionPlans.Edit"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTSubscriptionPlansEdit82368915": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditSubscriptionPlanLambdaDEE52D77",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/SubscriptionPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..SubscriptionPlans.Edit"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditPUT52353490": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansEdit50005E39"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditSubscriptionPlanLambdaDEE52D77",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDelete1277CC44": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteOPTIONSCCE97906": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDelete1277CC44"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETESubscriptionPlansDeleteB27CF1D9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteSubscriptionPlanLambda97210FAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/SubscriptionPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..SubscriptionPlans.Delete"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETESubscriptionPlansDeleteA66F1A27": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteSubscriptionPlanLambda97210FAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/SubscriptionPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..SubscriptionPlans.Delete"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteDELETEBB0F9A7A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDelete1277CC44"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteSubscriptionPlanLambda97210FAF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlans5CB61612": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "ContentPlans",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansOPTIONSF41A55F4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansListBEEB280F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansListOPTIONSE4291FD6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansListBEEB280F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlansList4BC6A369": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListContentPlansLambda95AC08D7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/ContentPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlans.List"
   }
  },
  "WebRestServiceGWAPIContentPlansListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlansListC5AF6F6B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListContentPlansLambda95AC08D7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/ContentPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlans.List"
   }
  },
  "WebRestServiceGWAPIContentPlansListGET592A5C97": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansListBEEB280F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListContentPlansLambda95AC08D7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansGetDD882AFD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansGetOPTIONS42CE981B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansGetDD882AFD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansGetPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlansGet6A271010": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetContentPlanLambda45DE78B9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/ContentPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlans.Get"
   }
  },
  "WebRestServiceGWAPIContentPlansGetPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlansGetD7C57828": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetContentPlanLambda45DE78B9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/ContentPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlans.Get"
   }
  },
  "WebRestServiceGWAPIContentPlansGetPOST8CDC2663": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansGetDD882AFD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetContentPlanLambda45DE78B9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/POST/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansAdd33EA37BD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansAddOPTIONS237499A8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansAdd33EA37BD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlansAdd49C5C41F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddContentPlanLambda2A50CDCC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/ContentPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlans.Add"
   }
  },
  "WebRestServiceGWAPIContentPlansAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlansAddF79BC0A8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddContentPlanLambda2A50CDCC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/ContentPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlans.Add"
   }
  },
  "WebRestServiceGWAPIContentPlansAddPOSTA28A4804": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansAdd33EA37BD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddContentPlanLambda2A50CDCC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansEditD345A8E1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansEditOPTIONS05FB454C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansEditD345A8E1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTContentPlansEdit89E82FE0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditContentPlanLambdaA1D9BCED",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/ContentPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..ContentPlans.Edit"
   }
  },
  "WebRestServiceGWAPIContentPlansEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTContentPlansEditF8B16CC1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditContentPlanLambdaA1D9BCED",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/ContentPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..ContentPlans.Edit"
   }
  },
  "WebRestServiceGWAPIContentPlansEditPUTCFC5FBAA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansEditD345A8E1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditContentPlanLambdaA1D9BCED",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansDelete6CA4B161": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteOPTIONSF52BFEF4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansDelete6CA4B161"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"http://127.0.0.1\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEContentPlansDelete9B489851": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteContentPlanLambda37ED3EAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/ContentPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..ContentPlans.Delete"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEContentPlansDelete5CFE5EF7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteContentPlanLambda37ED3EAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/ContentPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..ContentPlans.Delete"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteDELETE9F81289F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansDelete6CA4B161"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteContentPlanLambda37ED3EAE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWAPIUsagePlan476AD6E9": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      "Stage": {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "Throttle": {}
     }
    ],
    "Quota": {
     "Limit": 10000000,
     "Period": "MONTH"
    },
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 100
    },
    "UsagePlanName": "WebRestService-GWAPI-UsagePlan"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GWAPI-UsagePlan/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1": {
   "Type": "AWS::ApiGateway::DomainName",
   "Properties": {
    "DomainName": "secure-api.zuzona.com",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "RegionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GW-SubDomain/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWSubDomainMapWebRestServiceWebRestServiceGWAPIA25BC9C13DA8860E": {
   "Type": "AWS::ApiGateway::BasePathMapping",
   "Properties": {
    "DomainName": {
     "Ref": "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Stage": {
     "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GW-SubDomain/Map:--=>WebRestServiceWebRestServiceGWAPIA25BC9C1/Resource"
   }
  },
  "WebRestServiceARecord98E8B946": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "secure-api.zuzona.com.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1",
       "RegionalDomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1",
       "RegionalHostedZoneId"
      ]
     }
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T"
   },
   "DependsOn": [
    "WebRestServiceARecordDeleteExistingRecordSetCustomResource7B895BB7"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-ARecord/Resource"
   }
  },
  "WebRestServiceARecordDeleteExistingRecordSetCustomResource7B895BB7": {
   "Type": "Custom::DeleteExistingRecordSet",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E",
      "Arn"
     ]
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T",
    "RecordName": "secure-api.zuzona.com.",
    "RecordType": "A"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-ARecord/DeleteExistingRecordSetCustomResource/Default"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": "route53:GetChange",
         "Resource": "*"
        },
        {
         "Effect": "Allow",
         "Action": "route53:ListResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         }
        },
        {
         "Effect": "Allow",
         "Action": "route53:ChangeResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         },
         "Condition": {
          "ForAllValues:StringEquals": {
           "route53:ChangeResourceRecordSetsRecordTypes": [
            "A"
           ],
           "route53:ChangeResourceRecordSetsActions": [
            "DELETE"
           ]
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "04371e66614da6603a2d0caff555a5ee48172084069076b90c459275c26db019.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
    "aws:asset:path": "asset.04371e66614da6603a2d0caff555a5ee48172084069076b90c459275c26db019",
    "aws:asset:property": "Code"
   }
  },
  "ListBotsLambdaServiceRoleA6E24787": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/ServiceRole/Resource"
   }
  },
  "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
    "Roles": [
     {
      "Ref": "ListBotsLambdaServiceRoleA6E24787"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListBotsLambdaC9B0E149": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "9bee861f3aad76c112b2cd9b674616a7922a38c344954efe00a92f69e0612cb5.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListBotsLambdaServiceRoleA6E24787",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-List-Lambda",
    "Handler": "index.ListMyBotsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
    "ListBotsLambdaServiceRoleA6E24787"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/Resource",
    "aws:asset:path": "asset.9bee861f3aad76c112b2cd9b674616a7922a38c344954efe00a92f69e0612cb5",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetCurrencySettingsLambdaServiceRole33B26775": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/ServiceRole/Resource"
   }
  },
  "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3",
    "Roles": [
     {
      "Ref": "GetCurrencySettingsLambdaServiceRole33B26775"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCurrencySettingsLambdaCBDD42E1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "2546082db141da65d4f84929fee6619f953703194787e53619f3f047e2a48112.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaServiceRole33B26775",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-CurrencySettings-Get-Lambda",
    "Handler": "index.GetCurrencySettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3",
    "GetCurrencySettingsLambdaServiceRole33B26775"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/Resource",
    "aws:asset:path": "asset.2546082db141da65d4f84929fee6619f953703194787e53619f3f047e2a48112",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditCurrencySettingsLambdaServiceRole9008F6CB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/ServiceRole/Resource"
   }
  },
  "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478",
    "Roles": [
     {
      "Ref": "EditCurrencySettingsLambdaServiceRole9008F6CB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditCurrencySettingsLambda8DC44B43": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ee87dd897ceb610f2133415850fee85bcd57d879d538b0fcba5efc75b4a9be89.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambdaServiceRole9008F6CB",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-CurrencySettings-Update-Lambda",
    "Handler": "index.EditCurrencySettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478",
    "EditCurrencySettingsLambdaServiceRole9008F6CB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/Resource",
    "aws:asset:path": "asset.ee87dd897ceb610f2133415850fee85bcd57d879d538b0fcba5efc75b4a9be89",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListPaymentOptionsLambdaServiceRoleD3A97E58": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/ServiceRole/Resource"
   }
  },
  "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
    "Roles": [
     {
      "Ref": "ListPaymentOptionsLambdaServiceRoleD3A97E58"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListPaymentOptionsLambdaACAA5262": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "dcfdf7c8e3dfbe25390c9a9b7cd32af54f3b92e571d71d2defff17cf8f19425b.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaServiceRoleD3A97E58",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-List-Lambda",
    "Handler": "index.ListPaymentOptionsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
    "ListPaymentOptionsLambdaServiceRoleD3A97E58"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/Resource",
    "aws:asset:path": "asset.dcfdf7c8e3dfbe25390c9a9b7cd32af54f3b92e571d71d2defff17cf8f19425b",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetPaymentOptionLambdaServiceRoleDC5B8DC2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304",
    "Roles": [
     {
      "Ref": "GetPaymentOptionLambdaServiceRoleDC5B8DC2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetPaymentOptionLambdaD6DBF61A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ef4948e06de552f9c05bceea4762da1e75e4e6bfe5ae6998179fcbedadc765c1.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetPaymentOptionLambdaServiceRoleDC5B8DC2",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Get-Lambda",
    "Handler": "index.GetPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304",
    "GetPaymentOptionLambdaServiceRoleDC5B8DC2"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.ef4948e06de552f9c05bceea4762da1e75e4e6bfe5ae6998179fcbedadc765c1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddPaymentOptionLambdaServiceRole15897195": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
    "Roles": [
     {
      "Ref": "AddPaymentOptionLambdaServiceRole15897195"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddPaymentOptionLambdaBFF77B7F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "f49922dbb0fafa26ecfe1aee145c372dba2adcf3fdcf449af0bdda8fc4b977d9.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaServiceRole15897195",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Add-Lambda",
    "Handler": "index.AddPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
    "AddPaymentOptionLambdaServiceRole15897195"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.f49922dbb0fafa26ecfe1aee145c372dba2adcf3fdcf449af0bdda8fc4b977d9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditPaymentOptionLambdaServiceRole73BB83E4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
    "Roles": [
     {
      "Ref": "EditPaymentOptionLambdaServiceRole73BB83E4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditPaymentOptionLambda398037A2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "d3b7e97515ae4c4704d7418180eeee95d6f46cf1838d8de20c38b664b609cc89.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambdaServiceRole73BB83E4",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Edit-Lambda",
    "Handler": "index.EditPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
    "EditPaymentOptionLambdaServiceRole73BB83E4"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.d3b7e97515ae4c4704d7418180eeee95d6f46cf1838d8de20c38b664b609cc89",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeletePaymentOptionLambdaServiceRoleB4EBD3CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
    "Roles": [
     {
      "Ref": "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeletePaymentOptionLambdaEC66351C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "319abedaae0cdf4389bb730fa66633b0a6344bad5190b7ab5b3a6fc339de37b9.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaServiceRoleB4EBD3CA",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Delete-Lambda",
    "Handler": "index.DeletePaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
    "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/Resource",
    "aws:asset:path": "asset.319abedaae0cdf4389bb730fa66633b0a6344bad5190b7ab5b3a6fc339de37b9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListSubscriptionPlansLambdaServiceRole3C8B5C31": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/ServiceRole/Resource"
   }
  },
  "ListSubscriptionPlansLambdaServiceRoleDefaultPolicyAA0E051A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListSubscriptionPlansLambdaServiceRoleDefaultPolicyAA0E051A",
    "Roles": [
     {
      "Ref": "ListSubscriptionPlansLambdaServiceRole3C8B5C31"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListSubscriptionPlansLambdaC114B87D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "b0bbf3f8ea1594b71396e46fa3f2b5c5700c6524f171fe6d3b3d3b9d53d31249.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListSubscriptionPlansLambdaServiceRole3C8B5C31",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-List-Lambda",
    "Handler": "index.ListSubscriptionPlansHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListSubscriptionPlansLambdaServiceRoleDefaultPolicyAA0E051A",
    "ListSubscriptionPlansLambdaServiceRole3C8B5C31"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/Resource",
    "aws:asset:path": "asset.b0bbf3f8ea1594b71396e46fa3f2b5c5700c6524f171fe6d3b3d3b9d53d31249",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetSubscriptionPlanLambdaServiceRoleEE9C6B15": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "GetSubscriptionPlanLambdaServiceRoleDefaultPolicy03037E09": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetSubscriptionPlanLambdaServiceRoleDefaultPolicy03037E09",
    "Roles": [
     {
      "Ref": "GetSubscriptionPlanLambdaServiceRoleEE9C6B15"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetSubscriptionPlanLambda38ECFF18": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "e5c913c64b9833287fc522f7598b531d07f40dcd94b6e0165d7752a9c9ada3c7.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetSubscriptionPlanLambdaServiceRoleEE9C6B15",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Get-Lambda",
    "Handler": "index.GetSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetSubscriptionPlanLambdaServiceRoleDefaultPolicy03037E09",
    "GetSubscriptionPlanLambdaServiceRoleEE9C6B15"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.e5c913c64b9833287fc522f7598b531d07f40dcd94b6e0165d7752a9c9ada3c7",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddSubscriptionPlanLambdaServiceRole8024442A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "AddSubscriptionPlanLambdaServiceRoleDefaultPolicy97E5D84B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddSubscriptionPlanLambdaServiceRoleDefaultPolicy97E5D84B",
    "Roles": [
     {
      "Ref": "AddSubscriptionPlanLambdaServiceRole8024442A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddSubscriptionPlanLambdaCAFEE16F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "d7d194e8a1312c783fbbb468e424a37f5bd64ea288e63d6ce6f6f39dc5f1a17f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddSubscriptionPlanLambdaServiceRole8024442A",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Add-Lambda",
    "Handler": "index.AddSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "AddSubscriptionPlanLambdaServiceRoleDefaultPolicy97E5D84B",
    "AddSubscriptionPlanLambdaServiceRole8024442A"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.d7d194e8a1312c783fbbb468e424a37f5bd64ea288e63d6ce6f6f39dc5f1a17f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditSubscriptionPlanLambdaServiceRoleEBD8353A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "EditSubscriptionPlanLambdaServiceRoleDefaultPolicy0E8B20B2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditSubscriptionPlanLambdaServiceRoleDefaultPolicy0E8B20B2",
    "Roles": [
     {
      "Ref": "EditSubscriptionPlanLambdaServiceRoleEBD8353A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditSubscriptionPlanLambdaDEE52D77": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "862832c7ffb6b59379034ec92fcec85234d8cf70f73905d2c62902d7c9d823d5.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditSubscriptionPlanLambdaServiceRoleEBD8353A",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Edit-Lambda",
    "Handler": "index.EditSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditSubscriptionPlanLambdaServiceRoleDefaultPolicy0E8B20B2",
    "EditSubscriptionPlanLambdaServiceRoleEBD8353A"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.862832c7ffb6b59379034ec92fcec85234d8cf70f73905d2c62902d7c9d823d5",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "DeleteSubscriptionPlanLambdaServiceRoleDefaultPolicy6880D94D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteSubscriptionPlanLambdaServiceRoleDefaultPolicy6880D94D",
    "Roles": [
     {
      "Ref": "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteSubscriptionPlanLambda97210FAF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "86146cb22b4e81a116e0946b523deb59ea7f4c483e217ab03e88557bbef9e038.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Delete-Lambda",
    "Handler": "index.DeleteSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DeleteSubscriptionPlanLambdaServiceRoleDefaultPolicy6880D94D",
    "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.86146cb22b4e81a116e0946b523deb59ea7f4c483e217ab03e88557bbef9e038",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListContentPlansLambdaServiceRole367A02FD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/ServiceRole/Resource"
   }
  },
  "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248",
    "Roles": [
     {
      "Ref": "ListContentPlansLambdaServiceRole367A02FD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListContentPlansLambda95AC08D7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "dd07b06a3358efb8ac9a87353c748f4e11e8015a104d6276efd88137fb6bf5f8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListContentPlansLambdaServiceRole367A02FD",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-List-Lambda",
    "Handler": "index.ListContentPlansHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248",
    "ListContentPlansLambdaServiceRole367A02FD"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/Resource",
    "aws:asset:path": "asset.dd07b06a3358efb8ac9a87353c748f4e11e8015a104d6276efd88137fb6bf5f8",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetContentPlanLambdaServiceRole2D75CA0E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/ServiceRole/Resource"
   }
  },
  "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A",
    "Roles": [
     {
      "Ref": "GetContentPlanLambdaServiceRole2D75CA0E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetContentPlanLambda45DE78B9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "49898775bc16e29731727901966e1d8dcd32d28d426cc1e532c7b06a9ccc6d9e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetContentPlanLambdaServiceRole2D75CA0E",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Get-Lambda",
    "Handler": "index.GetContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A",
    "GetContentPlanLambdaServiceRole2D75CA0E"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/Resource",
    "aws:asset:path": "asset.49898775bc16e29731727901966e1d8dcd32d28d426cc1e532c7b06a9ccc6d9e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddContentPlanLambdaServiceRole69887C26": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/ServiceRole/Resource"
   }
  },
  "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9",
    "Roles": [
     {
      "Ref": "AddContentPlanLambdaServiceRole69887C26"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddContentPlanLambda2A50CDCC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "31eec3617073c58a5d49ad9194ef72e460903d369766fda5cd55b486318363b0.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddContentPlanLambdaServiceRole69887C26",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Add-Lambda",
    "Handler": "index.AddContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9",
    "AddContentPlanLambdaServiceRole69887C26"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/Resource",
    "aws:asset:path": "asset.31eec3617073c58a5d49ad9194ef72e460903d369766fda5cd55b486318363b0",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditContentPlanLambdaServiceRole25A19D33": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/ServiceRole/Resource"
   }
  },
  "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3",
    "Roles": [
     {
      "Ref": "EditContentPlanLambdaServiceRole25A19D33"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditContentPlanLambdaA1D9BCED": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "38f17f89cc32d0f99affde551935ea5a0db44803ceae2953b84ef4ea023b2f3f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditContentPlanLambdaServiceRole25A19D33",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Edit-Lambda",
    "Handler": "index.EditContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3",
    "EditContentPlanLambdaServiceRole25A19D33"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/Resource",
    "aws:asset:path": "asset.38f17f89cc32d0f99affde551935ea5a0db44803ceae2953b84ef4ea023b2f3f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteContentPlanLambdaServiceRoleAD676078": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/ServiceRole/Resource"
   }
  },
  "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":dynamodb:us-east-1:993738567487:table/bots"
          ]
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0",
    "Roles": [
     {
      "Ref": "DeleteContentPlanLambdaServiceRoleAD676078"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteContentPlanLambda37ED3EAE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "c58143c6250f321c011b5bf578e071e4b07f8cf80da2b8a6047059e49720206f.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteContentPlanLambdaServiceRoleAD676078",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,http://127.0.0.1",
      "cookieDomain": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Delete-Lambda",
    "Handler": "index.DeleteContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:57",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:11",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:34",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:10"
    ],
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0",
    "DeleteContentPlanLambdaServiceRoleAD676078"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/Resource",
    "aws:asset:path": "asset.c58143c6250f321c011b5bf578e071e4b07f8cf80da2b8a6047059e49720206f",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11SwW7CMAz9lt1DpoKQdi1DOwGrinZGIfVKoIm7OAGxqv++JGXQ7eT34vjZfsmUzzOePYkLTWR1mjRqz7utE/LESiD0VgILuV3XCL2vxM5gBUfimxTevJFOoWFKaN6V2AB7/TQpFtgoeY10QD2j2U4QgSOexxA4X3h5ArcQBGyQ510ouKvGYrBaEQXWswZr4iusS3Bg0gXRqlo4uIhr6A5fHsjl3h3Qqm+wsXzEyphsVRrwAXMp0RvHltA2eNVBN56OWLCiTlsN4NeTNPMagnoVkzd0d2xoMuAPCoVFI9I+D7JELZTZCJ1uj1iULoQ7rEXbKlPH7L+jnln0DuYz3uUlSLTV0DCiLbi+Z8nhOPFNYDzYu3etD2t6cqgfiT+0sHhWFdiexffmR3o+Zy88m4aPciSlJjZ4pjTwcog/yOCPZ0QCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "WebRestServiceGWAPIEndpoint497456A8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "/"
     ]
    ]
   }
  },
  "WebRestServiceAPIGWSecureAPI": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "WebRestService-APIGW-SecureAPI"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}