{
 "Resources": {
  "importedAuthorizerWebRestServiceWebRestServiceLambdaJWTAuthorizerObject99D0B0FAPermissions132299D9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": "arn:aws:lambda:us-east-1:993738567487:function:JWTAuthorizer-Lambda",
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/authorizers/",
       {
        "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/importedAuthorizer/WebRestServiceWebRestServiceLambdaJWTAuthorizerObject99D0B0FA:Permissions"
   }
  },
  "WebRestServiceLambdaJWTAuthorizerObject90D15D2F": {
   "Type": "AWS::ApiGateway::Authorizer",
   "Properties": {
    "Name": "WebRestService-LambdaJWTAuthorizerObject",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Type": "REQUEST",
    "AuthorizerResultTtlInSeconds": 0,
    "AuthorizerUri": "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:993738567487:function:JWTAuthorizer-Lambda/invocations",
    "IdentitySource": "method.request.header.cookie"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-LambdaJWTAuthorizerObject/Resource"
   }
  },
  "WebRestServiceGWAPID1BA5018": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "WebRestService-GWAPI"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Resource"
   }
  },
  "WebRestServiceGWAPICloudWatchRoleDB7C4E5F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/CloudWatchRole/Resource"
   }
  },
  "WebRestServiceGWAPIAccountDC3CB312": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPICloudWatchRoleDB7C4E5F",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "WebRestServiceGWAPID1BA5018"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Account"
   }
  },
  "WebRestServiceGWAPIDeploymentE0A23672974bb780964d6a6e09a66ec63b379258": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "WebRestServiceGWAPIActiveSubscriptionGETF2E5F11F",
    "WebRestServiceGWAPIActiveSubscriptionOPTIONSEC83F987",
    "WebRestServiceGWAPIActiveSubscription608E0F3D",
    "WebRestServiceGWAPIBotsAddOPTIONS9C9469F7",
    "WebRestServiceGWAPIBotsAddPOSTFC2AF30A",
    "WebRestServiceGWAPIBotsAdd9E0027BA",
    "WebRestServiceGWAPIBotsDeleteDELETEC9EC9F7A",
    "WebRestServiceGWAPIBotsDeleteOPTIONS3076A53A",
    "WebRestServiceGWAPIBotsDelete19F0D3AB",
    "WebRestServiceGWAPIBotsEditOPTIONS5CC8FB50",
    "WebRestServiceGWAPIBotsEditPUT86545163",
    "WebRestServiceGWAPIBotsEditBBBC709C",
    "WebRestServiceGWAPIBotsGetGETED2528E1",
    "WebRestServiceGWAPIBotsGetOPTIONSFAB56703",
    "WebRestServiceGWAPIBotsGet3C04210F",
    "WebRestServiceGWAPIBotsListGET559D6B3D",
    "WebRestServiceGWAPIBotsListOPTIONSF1167672",
    "WebRestServiceGWAPIBotsList72667DDB",
    "WebRestServiceGWAPIBotsOPTIONSB0668A3B",
    "WebRestServiceGWAPIBotsRegisterOPTIONS56DF6AA9",
    "WebRestServiceGWAPIBotsRegisterPUT2B56AC1C",
    "WebRestServiceGWAPIBotsRegister2CB78075",
    "WebRestServiceGWAPIBots64472057",
    "WebRestServiceGWAPIBotsUnRegisterOPTIONSFD490015",
    "WebRestServiceGWAPIBotsUnRegisterPUT097DCF55",
    "WebRestServiceGWAPIBotsUnRegister76E683F6",
    "WebRestServiceGWAPIContentPlanPostsAddOPTIONS61720DDC",
    "WebRestServiceGWAPIContentPlanPostsAddPOSTBB97C0AC",
    "WebRestServiceGWAPIContentPlanPostsAdd40F1E0CA",
    "WebRestServiceGWAPIContentPlanPostsDeleteDELETE6639B88A",
    "WebRestServiceGWAPIContentPlanPostsDeleteOPTIONSBA0F61FB",
    "WebRestServiceGWAPIContentPlanPostsDeleteC7BBCDFB",
    "WebRestServiceGWAPIContentPlanPostsEditOPTIONS41F2BEFF",
    "WebRestServiceGWAPIContentPlanPostsEditPUTDA9B067A",
    "WebRestServiceGWAPIContentPlanPostsEdit5CC7884E",
    "WebRestServiceGWAPIContentPlanPostsGetGET82981A04",
    "WebRestServiceGWAPIContentPlanPostsGetOPTIONSC7C6B351",
    "WebRestServiceGWAPIContentPlanPostsGetC665E064",
    "WebRestServiceGWAPIContentPlanPostsListGET90443260",
    "WebRestServiceGWAPIContentPlanPostsListOPTIONS75597C46",
    "WebRestServiceGWAPIContentPlanPostsListD46D76B6",
    "WebRestServiceGWAPIContentPlanPostsOPTIONSA1D4D121",
    "WebRestServiceGWAPIContentPlanPosts7FE454CE",
    "WebRestServiceGWAPIContentPlansAddOPTIONS237499A8",
    "WebRestServiceGWAPIContentPlansAddPOSTA28A4804",
    "WebRestServiceGWAPIContentPlansAdd33EA37BD",
    "WebRestServiceGWAPIContentPlansDeleteDELETE9F81289F",
    "WebRestServiceGWAPIContentPlansDeleteOPTIONSF52BFEF4",
    "WebRestServiceGWAPIContentPlansDelete6CA4B161",
    "WebRestServiceGWAPIContentPlansEditOPTIONS05FB454C",
    "WebRestServiceGWAPIContentPlansEditPUTCFC5FBAA",
    "WebRestServiceGWAPIContentPlansEditD345A8E1",
    "WebRestServiceGWAPIContentPlansGetGET2CA5D1F4",
    "WebRestServiceGWAPIContentPlansGetOPTIONS42CE981B",
    "WebRestServiceGWAPIContentPlansGetDD882AFD",
    "WebRestServiceGWAPIContentPlansListGET592A5C97",
    "WebRestServiceGWAPIContentPlansListOPTIONSE4291FD6",
    "WebRestServiceGWAPIContentPlansListBEEB280F",
    "WebRestServiceGWAPIContentPlansOPTIONSF41A55F4",
    "WebRestServiceGWAPIContentPlans5CB61612",
    "WebRestServiceGWAPIDefaultCurrencyGET00789A3A",
    "WebRestServiceGWAPIDefaultCurrencyOPTIONSA094FE46",
    "WebRestServiceGWAPIDefaultCurrencyPUT2E03073B",
    "WebRestServiceGWAPIDefaultCurrency594708F8",
    "WebRestServiceGWAPIMessageFilesAddOPTIONSED8E506D",
    "WebRestServiceGWAPIMessageFilesAddPOST22B94D8E",
    "WebRestServiceGWAPIMessageFilesAdd1A54AFE1",
    "WebRestServiceGWAPIMessageFilesDeleteDELETE4AB2855E",
    "WebRestServiceGWAPIMessageFilesDeleteOPTIONS8E09527E",
    "WebRestServiceGWAPIMessageFilesDelete83470B4C",
    "WebRestServiceGWAPIMessageFilesEditOPTIONS3B609296",
    "WebRestServiceGWAPIMessageFilesEditPUTC2B06BDB",
    "WebRestServiceGWAPIMessageFilesEdit64F5ED92",
    "WebRestServiceGWAPIMessageFilesGetGETDB00F4D9",
    "WebRestServiceGWAPIMessageFilesGetOPTIONSDB219378",
    "WebRestServiceGWAPIMessageFilesGet678DE630",
    "WebRestServiceGWAPIMessageFilesListGETEAD810E4",
    "WebRestServiceGWAPIMessageFilesListOPTIONS54B46F37",
    "WebRestServiceGWAPIMessageFilesList268DAC09",
    "WebRestServiceGWAPIMessageFilesOPTIONSB2879F81",
    "WebRestServiceGWAPIMessageFilesEFD4F953",
    "WebRestServiceGWAPIOPTIONS622B6CF2",
    "WebRestServiceGWAPIPaymentOptionsAddOPTIONSFA7317DC",
    "WebRestServiceGWAPIPaymentOptionsAddPOSTA8E96E4D",
    "WebRestServiceGWAPIPaymentOptionsAddED43A709",
    "WebRestServiceGWAPIPaymentOptionsDeleteDELETEE156F660",
    "WebRestServiceGWAPIPaymentOptionsDeleteOPTIONSB5072DA6",
    "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109",
    "WebRestServiceGWAPIPaymentOptionsEditOPTIONS26B676AE",
    "WebRestServiceGWAPIPaymentOptionsEditPUT9E17C24D",
    "WebRestServiceGWAPIPaymentOptionsEdit875D169E",
    "WebRestServiceGWAPIPaymentOptionsGetGETCE6937DF",
    "WebRestServiceGWAPIPaymentOptionsGetOPTIONS83BA526C",
    "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE",
    "WebRestServiceGWAPIPaymentOptionsListGETB110FC75",
    "WebRestServiceGWAPIPaymentOptionsListOPTIONS9FF6A85D",
    "WebRestServiceGWAPIPaymentOptionsListF21F6B91",
    "WebRestServiceGWAPIPaymentOptionsOPTIONS0FEA12A9",
    "WebRestServiceGWAPIPaymentOptions9E07B8E5",
    "WebRestServiceGWAPIPreSignedUrlsOPTIONSE7C58CAF",
    "WebRestServiceGWAPIPreSignedUrlsPUT8488033B",
    "WebRestServiceGWAPIPreSignedUrls22D05D55",
    "WebRestServiceGWAPISendTestMessageOPTIONSE053BF4C",
    "WebRestServiceGWAPISendTestMessage53C4A557",
    "WebRestServiceGWAPISendTestMessageOPTIONS13C6B564",
    "WebRestServiceGWAPISendTestMessagePOSTCD6BD006",
    "WebRestServiceGWAPISendTestMessageCDD3102E",
    "WebRestServiceGWAPISubscriptionPlansAddOPTIONS7F69D6BD",
    "WebRestServiceGWAPISubscriptionPlansAddPOST91D09D07",
    "WebRestServiceGWAPISubscriptionPlansAddBD572942",
    "WebRestServiceGWAPISubscriptionPlansDeleteDELETEBB0F9A7A",
    "WebRestServiceGWAPISubscriptionPlansDeleteOPTIONSCCE97906",
    "WebRestServiceGWAPISubscriptionPlansDelete1277CC44",
    "WebRestServiceGWAPISubscriptionPlansEditOPTIONS92474053",
    "WebRestServiceGWAPISubscriptionPlansEditPUT52353490",
    "WebRestServiceGWAPISubscriptionPlansEdit50005E39",
    "WebRestServiceGWAPISubscriptionPlansGetGET339E492F",
    "WebRestServiceGWAPISubscriptionPlansGetOPTIONS967ECA8D",
    "WebRestServiceGWAPISubscriptionPlansGet7B3121EE",
    "WebRestServiceGWAPISubscriptionPlansListGET12C816F5",
    "WebRestServiceGWAPISubscriptionPlansListOPTIONS9639A412",
    "WebRestServiceGWAPISubscriptionPlansList976233C4",
    "WebRestServiceGWAPISubscriptionPlansOPTIONS103BD4D4",
    "WebRestServiceGWAPISubscriptionPlansDD34CD79"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Deployment/Resource"
   }
  },
  "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "DeploymentId": {
     "Ref": "WebRestServiceGWAPIDeploymentE0A23672974bb780964d6a6e09a66ec63b379258"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "ERROR",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "StageName": "SecureAPI"
   },
   "DependsOn": [
    "WebRestServiceGWAPIAccountDC3CB312"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/DeploymentStage.SecureAPI/Resource"
   }
  },
  "WebRestServiceGWAPIOPTIONS622B6CF2": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesEFD4F953": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "MessageFiles",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesOPTIONSB2879F81": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEFD4F953"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesList268DAC09": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEFD4F953"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/List/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesListOPTIONS54B46F37": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesList268DAC09"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETMessageFilesList39075D33": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListMessageFilesLambdaA8A6DBEA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/MessageFiles/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..MessageFiles.List"
   }
  },
  "WebRestServiceGWAPIMessageFilesListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETMessageFilesList8F48A457": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListMessageFilesLambdaA8A6DBEA",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/MessageFiles/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..MessageFiles.List"
   }
  },
  "WebRestServiceGWAPIMessageFilesListGETEAD810E4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesList268DAC09"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListMessageFilesLambdaA8A6DBEA",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesGet678DE630": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEFD4F953"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Get/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesGetOPTIONSDB219378": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesGet678DE630"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETMessageFilesGetE9D6746E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMessageFileLambdaDF57EDB2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/MessageFiles/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..MessageFiles.Get"
   }
  },
  "WebRestServiceGWAPIMessageFilesGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETMessageFilesGet426646B7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetMessageFileLambdaDF57EDB2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/MessageFiles/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..MessageFiles.Get"
   }
  },
  "WebRestServiceGWAPIMessageFilesGetGETDB00F4D9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesGet678DE630"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetMessageFileLambdaDF57EDB2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesAdd1A54AFE1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEFD4F953"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Add/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesAddOPTIONSED8E506D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesAdd1A54AFE1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTMessageFilesAdd1508C8A4": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddMessageFileLambda2C734180",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/MessageFiles/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..MessageFiles.Add"
   }
  },
  "WebRestServiceGWAPIMessageFilesAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTMessageFilesAddCBAD02EF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddMessageFileLambda2C734180",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/MessageFiles/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..MessageFiles.Add"
   }
  },
  "WebRestServiceGWAPIMessageFilesAddPOST22B94D8E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesAdd1A54AFE1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddMessageFileLambda2C734180",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesEdit64F5ED92": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEFD4F953"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesEditOPTIONS3B609296": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEdit64F5ED92"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTMessageFilesEdit37806333": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditMessageFileLambda395F8673",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/MessageFiles/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..MessageFiles.Edit"
   }
  },
  "WebRestServiceGWAPIMessageFilesEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTMessageFilesEditF82B0856": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditMessageFileLambda395F8673",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/MessageFiles/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..MessageFiles.Edit"
   }
  },
  "WebRestServiceGWAPIMessageFilesEditPUTC2B06BDB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEdit64F5ED92"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditMessageFileLambda395F8673",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesDelete83470B4C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIMessageFilesEFD4F953"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesDeleteOPTIONS8E09527E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesDelete83470B4C"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIMessageFilesDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEMessageFilesDeleteB0880350": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteMessageFileLambdaE4E88A6A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/MessageFiles/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..MessageFiles.Delete"
   }
  },
  "WebRestServiceGWAPIMessageFilesDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEMessageFilesDelete247AA648": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteMessageFileLambdaE4E88A6A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/MessageFiles/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..MessageFiles.Delete"
   }
  },
  "WebRestServiceGWAPIMessageFilesDeleteDELETE4AB2855E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIMessageFilesDelete83470B4C"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteMessageFileLambdaE4E88A6A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/MessageFiles/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIPreSignedUrls22D05D55": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "PreSignedUrls",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PreSignedUrls/Resource"
   }
  },
  "WebRestServiceGWAPIPreSignedUrlsOPTIONSE7C58CAF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPreSignedUrls22D05D55"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PreSignedUrls/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPreSignedUrlsPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPreSignedUrlsF5399178": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetGetPresignedUrlLambda43F48E6F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/PreSignedUrls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PreSignedUrls/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PreSignedUrls"
   }
  },
  "WebRestServiceGWAPIPreSignedUrlsPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPreSignedUrls6C8EE65B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetGetPresignedUrlLambda43F48E6F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/PreSignedUrls"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PreSignedUrls/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PreSignedUrls"
   }
  },
  "WebRestServiceGWAPIPreSignedUrlsPUT8488033B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPreSignedUrls22D05D55"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetGetPresignedUrlLambda43F48E6F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PreSignedUrls/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIBots64472057": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "Bots",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Resource"
   }
  },
  "WebRestServiceGWAPIBotsOPTIONSB0668A3B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsList72667DDB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/List/Resource"
   }
  },
  "WebRestServiceGWAPIBotsListOPTIONSF1167672": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsList72667DDB"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsList311DFB5B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListBotsLambdaC9B0E149",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/Bots/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.List"
   }
  },
  "WebRestServiceGWAPIBotsListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsList7174E6D9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListBotsLambdaC9B0E149",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/Bots/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.List"
   }
  },
  "WebRestServiceGWAPIBotsListGET559D6B3D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsList72667DDB"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListBotsLambdaC9B0E149",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGet3C04210F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Get/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetOPTIONSFAB56703": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsGet3C04210F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsGetFC224603": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetBotLambda0C4EA18F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/Bots/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.Get"
   }
  },
  "WebRestServiceGWAPIBotsGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETBotsGet96E71D71": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetBotLambda0C4EA18F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/Bots/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..Bots.Get"
   }
  },
  "WebRestServiceGWAPIBotsGetGETED2528E1": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsGet3C04210F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetBotLambda0C4EA18F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIBotsAdd9E0027BA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Add/Resource"
   }
  },
  "WebRestServiceGWAPIBotsAddOPTIONS9C9469F7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsAdd9E0027BA"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTBotsAddABD40875": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddBotLambda25A32D8F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/Bots/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..Bots.Add"
   }
  },
  "WebRestServiceGWAPIBotsAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTBotsAdd5073D556": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddBotLambda25A32D8F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/Bots/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..Bots.Add"
   }
  },
  "WebRestServiceGWAPIBotsAddPOSTFC2AF30A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsAdd9E0027BA"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddBotLambda25A32D8F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIBotsEditBBBC709C": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIBotsEditOPTIONS5CC8FB50": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsEditBBBC709C"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTBotsEdit7FA6F2A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditBotLambda82B1C036",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/Bots/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..Bots.Edit"
   }
  },
  "WebRestServiceGWAPIBotsEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTBotsEditF6CB8A22": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditBotLambda82B1C036",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/Bots/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..Bots.Edit"
   }
  },
  "WebRestServiceGWAPIBotsEditPUT86545163": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsEditBBBC709C"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditBotLambda82B1C036",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIBotsRegister2CB78075": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "Register",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Register/Resource"
   }
  },
  "WebRestServiceGWAPIBotsRegisterOPTIONS56DF6AA9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsRegister2CB78075"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Register/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsRegisterPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTBotsRegisterC9B63065": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RegisterBotLambda695100A4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/Bots/Register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Register/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..Bots.Register"
   }
  },
  "WebRestServiceGWAPIBotsRegisterPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTBotsRegisterF81D76F5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "RegisterBotLambda695100A4",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/Bots/Register"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Register/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..Bots.Register"
   }
  },
  "WebRestServiceGWAPIBotsRegisterPUT2B56AC1C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsRegister2CB78075"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "RegisterBotLambda695100A4",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Register/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIBotsUnRegister76E683F6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "UnRegister",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/UnRegister/Resource"
   }
  },
  "WebRestServiceGWAPIBotsUnRegisterOPTIONSFD490015": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsUnRegister76E683F6"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/UnRegister/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsUnRegisterPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTBotsUnRegisterE7A6B379": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UnRegisterBotLambda0B03CDDE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/Bots/UnRegister"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/UnRegister/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..Bots.UnRegister"
   }
  },
  "WebRestServiceGWAPIBotsUnRegisterPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTBotsUnRegisterEF254111": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "UnRegisterBotLambda0B03CDDE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/Bots/UnRegister"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/UnRegister/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..Bots.UnRegister"
   }
  },
  "WebRestServiceGWAPIBotsUnRegisterPUT097DCF55": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsUnRegister76E683F6"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "UnRegisterBotLambda0B03CDDE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/UnRegister/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIBotsDelete19F0D3AB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIBots64472057"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIBotsDeleteOPTIONS3076A53A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsDelete19F0D3AB"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIBotsDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEBotsDelete920DBA59": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteBotLambda6B24EC61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/Bots/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..Bots.Delete"
   }
  },
  "WebRestServiceGWAPIBotsDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEBotsDelete9CEC195A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteBotLambda6B24EC61",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/Bots/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..Bots.Delete"
   }
  },
  "WebRestServiceGWAPIBotsDeleteDELETEC9EC9F7A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIBotsDelete19F0D3AB"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteBotLambda6B24EC61",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/Bots/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPosts7FE454CE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "ContentPlanPosts",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsOPTIONSA1D4D121": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPosts7FE454CE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsListD46D76B6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlanPosts7FE454CE"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/List/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsListOPTIONS75597C46": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsListD46D76B6"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlanPostsList3213E6B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListContentPlanPostsLambda80CD292F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/ContentPlanPosts/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlanPosts.List"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlanPostsList72A1DB6E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListContentPlanPostsLambda80CD292F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/ContentPlanPosts/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlanPosts.List"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsListGET90443260": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsListD46D76B6"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListContentPlanPostsLambda80CD292F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsGetC665E064": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlanPosts7FE454CE"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Get/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsGetOPTIONSC7C6B351": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsGetC665E064"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlanPostsGetA5C77A18": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetContentPlanPostLambdaA8AFC433",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/ContentPlanPosts/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlanPosts.Get"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlanPostsGet1B21044C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetContentPlanPostLambdaA8AFC433",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/ContentPlanPosts/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlanPosts.Get"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsGetGET82981A04": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsGetC665E064"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetContentPlanPostLambdaA8AFC433",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsAdd40F1E0CA": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlanPosts7FE454CE"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Add/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsAddOPTIONS61720DDC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsAdd40F1E0CA"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlanPostsAdd14707DBC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddContentPlanPostLambda6114356C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/ContentPlanPosts/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlanPosts.Add"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlanPostsAdd48D58908": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddContentPlanPostLambda6114356C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/ContentPlanPosts/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlanPosts.Add"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsAddPOSTBB97C0AC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsAdd40F1E0CA"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddContentPlanPostLambda6114356C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsEdit5CC7884E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlanPosts7FE454CE"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsEditOPTIONS41F2BEFF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsEdit5CC7884E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTContentPlanPostsEdit4F73F909": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditContentPlanPostLambdaB4D253CE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/ContentPlanPosts/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..ContentPlanPosts.Edit"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTContentPlanPostsEditD3937C5C": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditContentPlanPostLambdaB4D253CE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/ContentPlanPosts/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..ContentPlanPosts.Edit"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsEditPUTDA9B067A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsEdit5CC7884E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditContentPlanPostLambdaB4D253CE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsDeleteC7BBCDFB": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlanPosts7FE454CE"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsDeleteOPTIONSBA0F61FB": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsDeleteC7BBCDFB"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEContentPlanPostsDeleteE0880D4B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteContentPlanPostLambda9CD840D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/ContentPlanPosts/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..ContentPlanPosts.Delete"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEContentPlanPostsDelete5C872630": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteContentPlanPostLambda9CD840D1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/ContentPlanPosts/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..ContentPlanPosts.Delete"
   }
  },
  "WebRestServiceGWAPIContentPlanPostsDeleteDELETE6639B88A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlanPostsDeleteC7BBCDFB"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteContentPlanPostLambda9CD840D1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlanPosts/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlans5CB61612": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "ContentPlans",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansOPTIONSF41A55F4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansListBEEB280F": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansListOPTIONSE4291FD6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansListBEEB280F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlansList4BC6A369": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListContentPlansLambda95AC08D7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/ContentPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlans.List"
   }
  },
  "WebRestServiceGWAPIContentPlansListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlansListC5AF6F6B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListContentPlansLambda95AC08D7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/ContentPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlans.List"
   }
  },
  "WebRestServiceGWAPIContentPlansListGET592A5C97": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansListBEEB280F"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListContentPlansLambda95AC08D7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansGetDD882AFD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansGetOPTIONS42CE981B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansGetDD882AFD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlansGet23E8ECBE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetContentPlanLambda45DE78B9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/ContentPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlans.Get"
   }
  },
  "WebRestServiceGWAPIContentPlansGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETContentPlansGetEE8D075E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetContentPlanLambda45DE78B9",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/ContentPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ContentPlans.Get"
   }
  },
  "WebRestServiceGWAPIContentPlansGetGET2CA5D1F4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansGetDD882AFD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetContentPlanLambda45DE78B9",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansAdd33EA37BD": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansAddOPTIONS237499A8": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansAdd33EA37BD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlansAdd49C5C41F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddContentPlanLambda2A50CDCC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/ContentPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlans.Add"
   }
  },
  "WebRestServiceGWAPIContentPlansAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTContentPlansAddF79BC0A8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddContentPlanLambda2A50CDCC",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/ContentPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..ContentPlans.Add"
   }
  },
  "WebRestServiceGWAPIContentPlansAddPOSTA28A4804": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansAdd33EA37BD"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddContentPlanLambda2A50CDCC",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansEditD345A8E1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansEditOPTIONS05FB454C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansEditD345A8E1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTContentPlansEdit89E82FE0": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditContentPlanLambdaA1D9BCED",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/ContentPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..ContentPlans.Edit"
   }
  },
  "WebRestServiceGWAPIContentPlansEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTContentPlansEditF8B16CC1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditContentPlanLambdaA1D9BCED",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/ContentPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..ContentPlans.Edit"
   }
  },
  "WebRestServiceGWAPIContentPlansEditPUTCFC5FBAA": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansEditD345A8E1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditContentPlanLambdaA1D9BCED",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansDelete6CA4B161": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIContentPlans5CB61612"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteOPTIONSF52BFEF4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansDelete6CA4B161"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEContentPlansDelete9B489851": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteContentPlanLambda37ED3EAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/ContentPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..ContentPlans.Delete"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEContentPlansDelete5CFE5EF7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteContentPlanLambda37ED3EAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/ContentPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..ContentPlans.Delete"
   }
  },
  "WebRestServiceGWAPIContentPlansDeleteDELETE9F81289F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIContentPlansDelete6CA4B161"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteContentPlanLambda37ED3EAE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ContentPlans/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrency594708F8": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "DefaultCurrency",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyOPTIONSA094FE46": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETDefaultCurrency082EBEBB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaCBDD42E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/DefaultCurrency"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..DefaultCurrency"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETDefaultCurrencyE33A8727": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaCBDD42E1",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/DefaultCurrency"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..DefaultCurrency"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyGET00789A3A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetCurrencySettingsLambdaCBDD42E1",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/GET/Resource"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTDefaultCurrencyB7DCB834": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambda8DC44B43",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/DefaultCurrency"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..DefaultCurrency"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTDefaultCurrency49204428": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambda8DC44B43",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/DefaultCurrency"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..DefaultCurrency"
   }
  },
  "WebRestServiceGWAPIDefaultCurrencyPUT2E03073B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIDefaultCurrency594708F8"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditCurrencySettingsLambda8DC44B43",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/DefaultCurrency/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptions9E07B8E5": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "PaymentOptions",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsOPTIONS0FEA12A9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListF21F6B91": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListOPTIONS9FF6A85D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsListF21F6B91"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsList4807FEDC": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaACAA5262",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/PaymentOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.List"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsList5EC93259": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaACAA5262",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/PaymentOptions/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.List"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsListGETB110FC75": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsListF21F6B91"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListPaymentOptionsLambdaACAA5262",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetOPTIONS83BA526C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsGetB756947B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetPaymentOptionLambdaD6DBF61A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/PaymentOptions/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.Get"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETPaymentOptionsGetC833CD7F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetPaymentOptionLambdaD6DBF61A",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/PaymentOptions/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..PaymentOptions.Get"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsGetGETCE6937DF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsGetE77EBDDE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetPaymentOptionLambdaD6DBF61A",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddED43A709": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddOPTIONSFA7317DC": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsAddED43A709"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsAdd58D4B42E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaBFF77B7F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/PaymentOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Add"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTPaymentOptionsAdd4DDD81B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaBFF77B7F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/PaymentOptions/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..PaymentOptions.Add"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsAddPOSTA8E96E4D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsAddED43A709"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddPaymentOptionLambdaBFF77B7F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteOPTIONSB5072DA6": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEPaymentOptionsDeleteA5F28725": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaEC66351C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/PaymentOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..PaymentOptions.Delete"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETEPaymentOptionsDeleteD99E768E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaEC66351C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/PaymentOptions/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..PaymentOptions.Delete"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsDeleteDELETEE156F660": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsDelete7D6AE109"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeletePaymentOptionLambdaEC66351C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEdit875D169E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPIPaymentOptions9E07B8E5"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditOPTIONS26B676AE": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsEdit875D169E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPaymentOptionsEdit0C85BB15": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambda398037A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/PaymentOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PaymentOptions.Edit"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTPaymentOptionsEditA5F013B6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambda398037A2",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/PaymentOptions/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..PaymentOptions.Edit"
   }
  },
  "WebRestServiceGWAPIPaymentOptionsEditPUT9E17C24D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIPaymentOptionsEdit875D169E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditPaymentOptionLambda398037A2",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/PaymentOptions/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPIActiveSubscription608E0F3D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "ActiveSubscription",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ActiveSubscription/Resource"
   }
  },
  "WebRestServiceGWAPIActiveSubscriptionOPTIONSEC83F987": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIActiveSubscription608E0F3D"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ActiveSubscription/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPIActiveSubscriptionGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETActiveSubscription6342865F": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSubscriptionSettingsLambdaD3B798F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/ActiveSubscription"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ActiveSubscription/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ActiveSubscription"
   }
  },
  "WebRestServiceGWAPIActiveSubscriptionGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETActiveSubscriptionF25D688B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSubscriptionSettingsLambdaD3B798F7",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/ActiveSubscription"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ActiveSubscription/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..ActiveSubscription"
   }
  },
  "WebRestServiceGWAPIActiveSubscriptionGETF2E5F11F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPIActiveSubscription608E0F3D"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetSubscriptionSettingsLambdaD3B798F7",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/ActiveSubscription/GET/Resource"
   }
  },
  "WebRestServiceGWAPISendTestMessage53C4A557": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "SendTestMessage",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/Resource"
   }
  },
  "WebRestServiceGWAPISendTestMessageOPTIONSE053BF4C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISendTestMessage53C4A557"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISendTestMessageCDD3102E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISendTestMessage53C4A557"
    },
    "PathPart": "SendTestMessage",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/SendTestMessage/Resource"
   }
  },
  "WebRestServiceGWAPISendTestMessageOPTIONS13C6B564": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISendTestMessageCDD3102E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/SendTestMessage/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISendTestMessagePOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSendTestMessageSendTestMessage789FE117": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SendTestMessageLambdaD3B92DD3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/SendTestMessage/SendTestMessage"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SendTestMessage.SendTestMessage"
   }
  },
  "WebRestServiceGWAPISendTestMessagePOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSendTestMessageSendTestMessageEE9090A6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "SendTestMessageLambdaD3B92DD3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/SendTestMessage/SendTestMessage"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SendTestMessage.SendTestMessage"
   }
  },
  "WebRestServiceGWAPISendTestMessagePOSTCD6BD006": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISendTestMessageCDD3102E"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "SendTestMessageLambdaD3B92DD3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SendTestMessage/SendTestMessage/POST/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDD34CD79": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebRestServiceGWAPID1BA5018",
      "RootResourceId"
     ]
    },
    "PathPart": "SubscriptionPlans",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansOPTIONS103BD4D4": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansList976233C4": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "List",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListOPTIONS9639A412": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansList976233C4"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionPlansList27FC104A": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListSubscriptionPlansLambdaC114B87D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/SubscriptionPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionPlans.List"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionPlansListA89C8E67": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "ListSubscriptionPlansLambdaC114B87D",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/SubscriptionPlans/List"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionPlans.List"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansListGET12C816F5": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansList976233C4"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "ListSubscriptionPlansLambdaC114B87D",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/List/GET/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGet7B3121EE": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Get",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetOPTIONS967ECA8D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansGet7B3121EE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetGETApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionPlansGet3FC52F81": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSubscriptionPlanLambda38ECFF18",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/GET/SubscriptionPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/GET/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionPlans.Get"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetGETApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1GETSubscriptionPlansGet78E33ED8": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "GetSubscriptionPlanLambda38ECFF18",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/GET/SubscriptionPlans/Get"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/GET/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.GET..SubscriptionPlans.Get"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansGetGET339E492F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansGet7B3121EE"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "GetSubscriptionPlanLambda38ECFF18",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Get/GET/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddBD572942": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Add",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddOPTIONS7F69D6BD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansAddBD572942"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddPOSTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionPlansAdd69359059": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddSubscriptionPlanLambdaCAFEE16F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/POST/SubscriptionPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/POST/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionPlans.Add"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddPOSTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1POSTSubscriptionPlansAdd4F270A2B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AddSubscriptionPlanLambdaCAFEE16F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/POST/SubscriptionPlans/Add"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/POST/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.POST..SubscriptionPlans.Add"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansAddPOST91D09D07": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansAddBD572942"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AddSubscriptionPlanLambdaCAFEE16F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Add/POST/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEdit50005E39": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Edit",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditOPTIONS92474053": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansEdit50005E39"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditPUTApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1PUTSubscriptionPlansEditFF525E08": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditSubscriptionPlanLambdaDEE52D77",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/PUT/SubscriptionPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/PUT/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..SubscriptionPlans.Edit"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditPUTApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1PUTSubscriptionPlansEdit82368915": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "EditSubscriptionPlanLambdaDEE52D77",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/PUT/SubscriptionPlans/Edit"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/PUT/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.PUT..SubscriptionPlans.Edit"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansEditPUT52353490": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "PUT",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansEdit50005E39"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "EditSubscriptionPlanLambdaDEE52D77",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Edit/PUT/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDelete1277CC44": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDD34CD79"
    },
    "PathPart": "Delete",
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteOPTIONSCCE97906": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDelete1277CC44"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST, GET,DELETE,PUT'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"https://zuzona.com\") || $origin.matches(\"https://*.zuzona.com\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"zuzona.com\") || $origin.matches(\"*.zuzona.com\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/OPTIONS/Resource"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteDELETEApiPermissionWebRestServiceWebRestServiceGWAPIA25BC9C1DELETESubscriptionPlansDeleteB27CF1D9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteSubscriptionPlanLambda97210FAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/",
       {
        "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
       },
       "/DELETE/SubscriptionPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/DELETE/ApiPermission.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..SubscriptionPlans.Delete"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteDELETEApiPermissionTestWebRestServiceWebRestServiceGWAPIA25BC9C1DELETESubscriptionPlansDeleteA66F1A27": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DeleteSubscriptionPlanLambda97210FAF",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebRestServiceGWAPID1BA5018"
       },
       "/test-invoke-stage/DELETE/SubscriptionPlans/Delete"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/DELETE/ApiPermission.Test.WebRestServiceWebRestServiceGWAPIA25BC9C1.DELETE..SubscriptionPlans.Delete"
   }
  },
  "WebRestServiceGWAPISubscriptionPlansDeleteDELETEBB0F9A7A": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "DELETE",
    "ResourceId": {
     "Ref": "WebRestServiceGWAPISubscriptionPlansDelete1277CC44"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "AuthorizationType": "CUSTOM",
    "AuthorizerId": {
     "Ref": "WebRestServiceLambdaJWTAuthorizerObject90D15D2F"
    },
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DeleteSubscriptionPlanLambda97210FAF",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/Default/SubscriptionPlans/Delete/DELETE/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWAPIUsagePlan476AD6E9": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      "Stage": {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "Throttle": {}
     }
    ],
    "Quota": {
     "Limit": 10000000,
     "Period": "MONTH"
    },
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 100
    },
    "UsagePlanName": "WebRestService-GWAPI-UsagePlan"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GWAPI-UsagePlan/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1": {
   "Type": "AWS::ApiGateway::DomainName",
   "Properties": {
    "DomainName": "secure-api.zuzona.com",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "RegionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/664961d6-43be-4044-b8e6-fdfb850ddbed"
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GW-SubDomain/Resource"
   }
  },
  "WebRestServiceGWAPIWebRestServiceGWSubDomainMapWebRestServiceWebRestServiceGWAPIA25BC9C13DA8860E": {
   "Type": "AWS::ApiGateway::BasePathMapping",
   "Properties": {
    "DomainName": {
     "Ref": "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1"
    },
    "RestApiId": {
     "Ref": "WebRestServiceGWAPID1BA5018"
    },
    "Stage": {
     "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-GWAPI/WebRestService-GW-SubDomain/Map:--=>WebRestServiceWebRestServiceGWAPIA25BC9C1/Resource"
   }
  },
  "WebRestServiceARecord98E8B946": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "secure-api.zuzona.com.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1",
       "RegionalDomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "WebRestServiceGWAPIWebRestServiceGWSubDomain3CF214C1",
       "RegionalHostedZoneId"
      ]
     }
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T"
   },
   "DependsOn": [
    "WebRestServiceARecordDeleteExistingRecordSetCustomResource7B895BB7"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-ARecord/Resource"
   }
  },
  "WebRestServiceARecordDeleteExistingRecordSetCustomResource7B895BB7": {
   "Type": "Custom::DeleteExistingRecordSet",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E",
      "Arn"
     ]
    },
    "HostedZoneId": "Z08669732ES7CY5LRF03T",
    "RecordName": "secure-api.zuzona.com.",
    "RecordType": "A"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebRestService/WebRestService-ARecord/DeleteExistingRecordSetCustomResource/Default"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": "route53:GetChange",
         "Resource": "*"
        },
        {
         "Effect": "Allow",
         "Action": "route53:ListResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         }
        },
        {
         "Effect": "Allow",
         "Action": "route53:ChangeResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z08669732ES7CY5LRF03T"
           ]
          ]
         },
         "Condition": {
          "ForAllValues:StringEquals": {
           "route53:ChangeResourceRecordSetsRecordTypes": [
            "A"
           ],
           "route53:ChangeResourceRecordSetsActions": [
            "DELETE"
           ]
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "34beac7d160965a96ce896871cfbdca28814200989c74fab0e1ef0f4bfcec123.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08",
      "Arn"
     ]
    },
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
    "aws:asset:path": "asset.34beac7d160965a96ce896871cfbdca28814200989c74fab0e1ef0f4bfcec123",
    "aws:asset:property": "Code"
   }
  },
  "ListMessageFilesLambdaServiceRole27E6A9BF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListMessageFilesLambda/ServiceRole/Resource"
   }
  },
  "ListMessageFilesLambdaServiceRoleDefaultPolicyBAFFF0C6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListMessageFilesLambdaServiceRoleDefaultPolicyBAFFF0C6",
    "Roles": [
     {
      "Ref": "ListMessageFilesLambdaServiceRole27E6A9BF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListMessageFilesLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListMessageFilesLambdaA8A6DBEA": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "d15c4560622f5528e3b429bd16fc721cf825eab5570bdd62f5be51b9d3e1b90e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListMessageFilesLambdaServiceRole27E6A9BF",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-MessageFiles-List-Lambda",
    "Handler": "index.ListMessageFilesHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "ListMessageFilesLambdaServiceRoleDefaultPolicyBAFFF0C6",
    "ListMessageFilesLambdaServiceRole27E6A9BF"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListMessageFilesLambda/Resource",
    "aws:asset:path": "asset.d15c4560622f5528e3b429bd16fc721cf825eab5570bdd62f5be51b9d3e1b90e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListMessageFilesLambdaLogRetentionFAAC6125": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListMessageFilesLambdaA8A6DBEA"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListMessageFilesLambda/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs14.x",
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "GetMessageFileLambdaServiceRole69400E26": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetMessageFileLambda/ServiceRole/Resource"
   }
  },
  "GetMessageFileLambdaServiceRoleDefaultPolicy8F726EE9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetMessageFileLambdaServiceRoleDefaultPolicy8F726EE9",
    "Roles": [
     {
      "Ref": "GetMessageFileLambdaServiceRole69400E26"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetMessageFileLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetMessageFileLambdaDF57EDB2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "75d0de6dc373d79ec972eff64e979d4dd4fe00320021e78b3b410fb759d041ab.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetMessageFileLambdaServiceRole69400E26",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-MessageFiles-Get-Lambda",
    "Handler": "index.GetMessageFileHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetMessageFileLambdaServiceRoleDefaultPolicy8F726EE9",
    "GetMessageFileLambdaServiceRole69400E26"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetMessageFileLambda/Resource",
    "aws:asset:path": "asset.75d0de6dc373d79ec972eff64e979d4dd4fe00320021e78b3b410fb759d041ab",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetMessageFileLambdaLogRetention135A8CFD": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetMessageFileLambdaDF57EDB2"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetMessageFileLambda/LogRetention/Resource"
   }
  },
  "AddMessageFileLambdaServiceRoleBE2D7298": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddMessageFileLambda/ServiceRole/Resource"
   }
  },
  "AddMessageFileLambdaServiceRoleDefaultPolicyE45FE77C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddMessageFileLambdaServiceRoleDefaultPolicyE45FE77C",
    "Roles": [
     {
      "Ref": "AddMessageFileLambdaServiceRoleBE2D7298"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddMessageFileLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddMessageFileLambda2C734180": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "fca90b8e72671a0dbfad0abc2ddc6849c3755ed642e9e255b9f81820499040d7.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddMessageFileLambdaServiceRoleBE2D7298",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-MessageFiles-Add-Lambda",
    "Handler": "index.AddMessageFileHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "AddMessageFileLambdaServiceRoleDefaultPolicyE45FE77C",
    "AddMessageFileLambdaServiceRoleBE2D7298"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddMessageFileLambda/Resource",
    "aws:asset:path": "asset.fca90b8e72671a0dbfad0abc2ddc6849c3755ed642e9e255b9f81820499040d7",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddMessageFileLambdaLogRetentionCEFE6D0D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AddMessageFileLambda2C734180"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddMessageFileLambda/LogRetention/Resource"
   }
  },
  "EditMessageFileLambdaServiceRoleD51D4A28": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditMessageFileLambda/ServiceRole/Resource"
   }
  },
  "EditMessageFileLambdaServiceRoleDefaultPolicy707E1526": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditMessageFileLambdaServiceRoleDefaultPolicy707E1526",
    "Roles": [
     {
      "Ref": "EditMessageFileLambdaServiceRoleD51D4A28"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditMessageFileLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditMessageFileLambda395F8673": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "0a3ea7b9f367221c018bc70a5374c4ce2082a53e2ebbae9543dc267e81d49e96.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditMessageFileLambdaServiceRoleD51D4A28",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-MessageFiles-Edit-Lambda",
    "Handler": "index.EditMessageFileHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "EditMessageFileLambdaServiceRoleDefaultPolicy707E1526",
    "EditMessageFileLambdaServiceRoleD51D4A28"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditMessageFileLambda/Resource",
    "aws:asset:path": "asset.0a3ea7b9f367221c018bc70a5374c4ce2082a53e2ebbae9543dc267e81d49e96",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditMessageFileLambdaLogRetention5FC7160D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditMessageFileLambda395F8673"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditMessageFileLambda/LogRetention/Resource"
   }
  },
  "DeleteMessageFileLambdaServiceRole72930807": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteMessageFileLambda/ServiceRole/Resource"
   }
  },
  "DeleteMessageFileLambdaServiceRoleDefaultPolicy062F48D7": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteMessageFileLambdaServiceRoleDefaultPolicy062F48D7",
    "Roles": [
     {
      "Ref": "DeleteMessageFileLambdaServiceRole72930807"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteMessageFileLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteMessageFileLambdaE4E88A6A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "3d5fc11f6012312c2cdaa33535f66d8a256a7af316351e731193edcdafdbb4b9.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteMessageFileLambdaServiceRole72930807",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-MessageFiles-Delete-Lambda",
    "Handler": "index.DeleteMessageFileHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "DeleteMessageFileLambdaServiceRoleDefaultPolicy062F48D7",
    "DeleteMessageFileLambdaServiceRole72930807"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteMessageFileLambda/Resource",
    "aws:asset:path": "asset.3d5fc11f6012312c2cdaa33535f66d8a256a7af316351e731193edcdafdbb4b9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteMessageFileLambdaLogRetentionC9372832": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeleteMessageFileLambdaE4E88A6A"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteMessageFileLambda/LogRetention/Resource"
   }
  },
  "GetGetPresignedUrlLambdaServiceRole6568E3BF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetGetPresignedUrlLambda/ServiceRole/Resource"
   }
  },
  "GetGetPresignedUrlLambdaServiceRoleDefaultPolicy8389685E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetGetPresignedUrlLambdaServiceRoleDefaultPolicy8389685E",
    "Roles": [
     {
      "Ref": "GetGetPresignedUrlLambdaServiceRole6568E3BF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetGetPresignedUrlLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetGetPresignedUrlLambda43F48E6F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "8f2fbb95c3124c273b8d9e729c7bf799d2e4621aaf5292357622692928058ae6.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetGetPresignedUrlLambdaServiceRole6568E3BF",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-GetPresignedUrl-Lambda",
    "Handler": "index.GetPreSignedUrlHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetGetPresignedUrlLambdaServiceRoleDefaultPolicy8389685E",
    "GetGetPresignedUrlLambdaServiceRole6568E3BF"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetGetPresignedUrlLambda/Resource",
    "aws:asset:path": "asset.8f2fbb95c3124c273b8d9e729c7bf799d2e4621aaf5292357622692928058ae6",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetGetPresignedUrlLambdaLogRetention3BCDA4A2": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetGetPresignedUrlLambda43F48E6F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetGetPresignedUrlLambda/LogRetention/Resource"
   }
  },
  "ListBotsLambdaServiceRoleA6E24787": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/ServiceRole/Resource"
   }
  },
  "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
    "Roles": [
     {
      "Ref": "ListBotsLambdaServiceRoleA6E24787"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListBotsLambdaC9B0E149": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "4eaffb5f7ba8986172f75c23657b6e3a7b28092a8761b302b3401edc486a1024.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListBotsLambdaServiceRoleA6E24787",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-List-Lambda",
    "Handler": "index.ListBotsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "ListBotsLambdaServiceRoleDefaultPolicyCDDF57E4",
    "ListBotsLambdaServiceRoleA6E24787"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/Resource",
    "aws:asset:path": "asset.4eaffb5f7ba8986172f75c23657b6e3a7b28092a8761b302b3401edc486a1024",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListBotsLambdaLogRetention8177B538": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListBotsLambdaC9B0E149"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListBotsLambda/LogRetention/Resource"
   }
  },
  "GetBotLambdaServiceRoleC26C83F1": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetBotLambda/ServiceRole/Resource"
   }
  },
  "GetBotLambdaServiceRoleDefaultPolicy4267B667": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetBotLambdaServiceRoleDefaultPolicy4267B667",
    "Roles": [
     {
      "Ref": "GetBotLambdaServiceRoleC26C83F1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetBotLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetBotLambda0C4EA18F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "08ffe6591a70f95b1a3dfcc7205cab6f70e7649ce8c8ea2816c923a5ae449f6d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetBotLambdaServiceRoleC26C83F1",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-Get-Lambda",
    "Handler": "index.GetBotHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetBotLambdaServiceRoleDefaultPolicy4267B667",
    "GetBotLambdaServiceRoleC26C83F1"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetBotLambda/Resource",
    "aws:asset:path": "asset.08ffe6591a70f95b1a3dfcc7205cab6f70e7649ce8c8ea2816c923a5ae449f6d",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetBotLambdaLogRetention079BCCC8": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetBotLambda0C4EA18F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetBotLambda/LogRetention/Resource"
   }
  },
  "AddBotLambdaServiceRole3893B7F5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddBotLambda/ServiceRole/Resource"
   }
  },
  "AddBotLambdaServiceRoleDefaultPolicy840C6C96": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddBotLambdaServiceRoleDefaultPolicy840C6C96",
    "Roles": [
     {
      "Ref": "AddBotLambdaServiceRole3893B7F5"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddBotLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddBotLambda25A32D8F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "c734c3bcaeb9c89c9472c7fa384c65b3dcf0c4ae364248c1c6d1cd76ad11ed34.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddBotLambdaServiceRole3893B7F5",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-Add-Lambda",
    "Handler": "index.AddBotHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "AddBotLambdaServiceRoleDefaultPolicy840C6C96",
    "AddBotLambdaServiceRole3893B7F5"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddBotLambda/Resource",
    "aws:asset:path": "asset.c734c3bcaeb9c89c9472c7fa384c65b3dcf0c4ae364248c1c6d1cd76ad11ed34",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddBotLambdaLogRetention28399598": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AddBotLambda25A32D8F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddBotLambda/LogRetention/Resource"
   }
  },
  "RegisterBotLambdaServiceRole6F8C4E1E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/RegisterBotLambda/ServiceRole/Resource"
   }
  },
  "RegisterBotLambdaServiceRoleDefaultPolicy08459592": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RegisterBotLambdaServiceRoleDefaultPolicy08459592",
    "Roles": [
     {
      "Ref": "RegisterBotLambdaServiceRole6F8C4E1E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/RegisterBotLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "RegisterBotLambda695100A4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "3aa584132998ae6eafb7a8ce5e274f588e96f4eff8ba8e770e6cd3c6fd99bfe1.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "RegisterBotLambdaServiceRole6F8C4E1E",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "telegramFacingAPIurl": "https://uoxpmw3g77.execute-api.us-east-1.amazonaws.com/prod/",
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "WebAppBotsSubdomainDistributionDomainName": "dwfdswom3t1vk.cloudfront.net",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-Register-Lambda",
    "Handler": "index.RegisterBotHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "RegisterBotLambdaServiceRoleDefaultPolicy08459592",
    "RegisterBotLambdaServiceRole6F8C4E1E"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/RegisterBotLambda/Resource",
    "aws:asset:path": "asset.3aa584132998ae6eafb7a8ce5e274f588e96f4eff8ba8e770e6cd3c6fd99bfe1",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "RegisterBotLambdaLogRetentionA5CEA523": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "RegisterBotLambda695100A4"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/RegisterBotLambda/LogRetention/Resource"
   }
  },
  "UnRegisterBotLambdaServiceRole2048DD2D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/UnRegisterBotLambda/ServiceRole/Resource"
   }
  },
  "UnRegisterBotLambdaServiceRoleDefaultPolicyF9271B9B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "UnRegisterBotLambdaServiceRoleDefaultPolicyF9271B9B",
    "Roles": [
     {
      "Ref": "UnRegisterBotLambdaServiceRole2048DD2D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/UnRegisterBotLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "UnRegisterBotLambda0B03CDDE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "6c077984a468cf0ec4d36a74e8f886cc31a28300fb92203d85727097fa28591d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "UnRegisterBotLambdaServiceRole2048DD2D",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "telegramFacingAPIurl": "https://uoxpmw3g77.execute-api.us-east-1.amazonaws.com/prod/",
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-UnRegister-Lambda",
    "Handler": "index.UnRegisterBotHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "UnRegisterBotLambdaServiceRoleDefaultPolicyF9271B9B",
    "UnRegisterBotLambdaServiceRole2048DD2D"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/UnRegisterBotLambda/Resource",
    "aws:asset:path": "asset.6c077984a468cf0ec4d36a74e8f886cc31a28300fb92203d85727097fa28591d",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "UnRegisterBotLambdaLogRetention8D1336C0": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "UnRegisterBotLambda0B03CDDE"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/UnRegisterBotLambda/LogRetention/Resource"
   }
  },
  "EditBotLambdaServiceRole67F2A33A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditBotLambda/ServiceRole/Resource"
   }
  },
  "EditBotLambdaServiceRoleDefaultPolicyD972E5A3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditBotLambdaServiceRoleDefaultPolicyD972E5A3",
    "Roles": [
     {
      "Ref": "EditBotLambdaServiceRole67F2A33A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditBotLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditBotLambda82B1C036": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "be166527df36f2d1ec6283bb23bd89a4575fc0dca00aa08f3a87fc8875d8fa32.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditBotLambdaServiceRole67F2A33A",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-Edit-Lambda",
    "Handler": "index.EditBotHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "EditBotLambdaServiceRoleDefaultPolicyD972E5A3",
    "EditBotLambdaServiceRole67F2A33A"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditBotLambda/Resource",
    "aws:asset:path": "asset.be166527df36f2d1ec6283bb23bd89a4575fc0dca00aa08f3a87fc8875d8fa32",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditBotLambdaLogRetentionEE3A2D07": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditBotLambda82B1C036"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditBotLambda/LogRetention/Resource"
   }
  },
  "DeleteBotLambdaServiceRoleEE3D337F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteBotLambda/ServiceRole/Resource"
   }
  },
  "DeleteBotLambdaServiceRoleDefaultPolicyD016D023": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteBotLambdaServiceRoleDefaultPolicyD016D023",
    "Roles": [
     {
      "Ref": "DeleteBotLambdaServiceRoleEE3D337F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteBotLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteBotLambda6B24EC61": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ce879d0b0103d2374b2db0d4e72213469d6f2cb78a03190002a60b85f649ab21.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteBotLambdaServiceRoleEE3D337F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-Bots-Delete-Lambda",
    "Handler": "index.DeleteBotHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "DeleteBotLambdaServiceRoleDefaultPolicyD016D023",
    "DeleteBotLambdaServiceRoleEE3D337F"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteBotLambda/Resource",
    "aws:asset:path": "asset.ce879d0b0103d2374b2db0d4e72213469d6f2cb78a03190002a60b85f649ab21",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteBotLambdaLogRetention6418DC4F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeleteBotLambda6B24EC61"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteBotLambda/LogRetention/Resource"
   }
  },
  "ListContentPlanPostsLambdaServiceRole979D40F7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlanPostsLambda/ServiceRole/Resource"
   }
  },
  "ListContentPlanPostsLambdaServiceRoleDefaultPolicyBC01FCAC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListContentPlanPostsLambdaServiceRoleDefaultPolicyBC01FCAC",
    "Roles": [
     {
      "Ref": "ListContentPlanPostsLambdaServiceRole979D40F7"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlanPostsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListContentPlanPostsLambda80CD292F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "1291886874e28358bda43ebd3697bacc3e94fb44c4a190164697dcc6997b9c54.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListContentPlanPostsLambdaServiceRole979D40F7",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlanPosts-List-Lambda",
    "Handler": "index.ListContentPlanPostsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "ListContentPlanPostsLambdaServiceRoleDefaultPolicyBC01FCAC",
    "ListContentPlanPostsLambdaServiceRole979D40F7"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlanPostsLambda/Resource",
    "aws:asset:path": "asset.1291886874e28358bda43ebd3697bacc3e94fb44c4a190164697dcc6997b9c54",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListContentPlanPostsLambdaLogRetentionF19C66EF": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListContentPlanPostsLambda80CD292F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlanPostsLambda/LogRetention/Resource"
   }
  },
  "GetContentPlanPostLambdaServiceRoleC014D555": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanPostLambda/ServiceRole/Resource"
   }
  },
  "GetContentPlanPostLambdaServiceRoleDefaultPolicyE38B6BCA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetContentPlanPostLambdaServiceRoleDefaultPolicyE38B6BCA",
    "Roles": [
     {
      "Ref": "GetContentPlanPostLambdaServiceRoleC014D555"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetContentPlanPostLambdaA8AFC433": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "3743d51a7d23702605a08d501cd3c088cb9f2600cdf49c4463559eddb901c0ec.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetContentPlanPostLambdaServiceRoleC014D555",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlanPosts-Get-Lambda",
    "Handler": "index.GetContentPlanPostHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetContentPlanPostLambdaServiceRoleDefaultPolicyE38B6BCA",
    "GetContentPlanPostLambdaServiceRoleC014D555"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanPostLambda/Resource",
    "aws:asset:path": "asset.3743d51a7d23702605a08d501cd3c088cb9f2600cdf49c4463559eddb901c0ec",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetContentPlanPostLambdaLogRetentionA24915CE": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetContentPlanPostLambdaA8AFC433"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanPostLambda/LogRetention/Resource"
   }
  },
  "AddContentPlanPostLambdaServiceRoleC11A91BA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanPostLambda/ServiceRole/Resource"
   }
  },
  "AddContentPlanPostLambdaServiceRoleDefaultPolicy98C48D3B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddContentPlanPostLambdaServiceRoleDefaultPolicy98C48D3B",
    "Roles": [
     {
      "Ref": "AddContentPlanPostLambdaServiceRoleC11A91BA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddContentPlanPostLambda6114356C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "be74959ac389bd7f306b918f2b5322e15e9f05206db46748cf21a8a0147ef103.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddContentPlanPostLambdaServiceRoleC11A91BA",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlanPosts-Add-Lambda",
    "Handler": "index.AddContentPlanPostHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "AddContentPlanPostLambdaServiceRoleDefaultPolicy98C48D3B",
    "AddContentPlanPostLambdaServiceRoleC11A91BA"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanPostLambda/Resource",
    "aws:asset:path": "asset.be74959ac389bd7f306b918f2b5322e15e9f05206db46748cf21a8a0147ef103",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddContentPlanPostLambdaLogRetentionA8217BEA": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AddContentPlanPostLambda6114356C"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanPostLambda/LogRetention/Resource"
   }
  },
  "EditContentPlanPostLambdaServiceRole9D24083D": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanPostLambda/ServiceRole/Resource"
   }
  },
  "EditContentPlanPostLambdaServiceRoleDefaultPolicyE3B51AAF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditContentPlanPostLambdaServiceRoleDefaultPolicyE3B51AAF",
    "Roles": [
     {
      "Ref": "EditContentPlanPostLambdaServiceRole9D24083D"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditContentPlanPostLambdaB4D253CE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "3f03dee2f1fe9ebba8dbf8e94038baa59642e1eab359645fe68e84c096dbf294.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditContentPlanPostLambdaServiceRole9D24083D",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlanPosts-Edit-Lambda",
    "Handler": "index.EditContentPlanPostHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "EditContentPlanPostLambdaServiceRoleDefaultPolicyE3B51AAF",
    "EditContentPlanPostLambdaServiceRole9D24083D"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanPostLambda/Resource",
    "aws:asset:path": "asset.3f03dee2f1fe9ebba8dbf8e94038baa59642e1eab359645fe68e84c096dbf294",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditContentPlanPostLambdaLogRetentionCCB7D6F4": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditContentPlanPostLambdaB4D253CE"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanPostLambda/LogRetention/Resource"
   }
  },
  "DeleteContentPlanPostLambdaServiceRole889FFD78": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanPostLambda/ServiceRole/Resource"
   }
  },
  "DeleteContentPlanPostLambdaServiceRoleDefaultPolicyE309B8E0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteContentPlanPostLambdaServiceRoleDefaultPolicyE309B8E0",
    "Roles": [
     {
      "Ref": "DeleteContentPlanPostLambdaServiceRole889FFD78"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanPostLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteContentPlanPostLambda9CD840D1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "d7fe73273913fd80ff59c205e9c0a8f169d627ef64a4f1b81a58413089db8190.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteContentPlanPostLambdaServiceRole889FFD78",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlanPosts-Delete-Lambda",
    "Handler": "index.DeleteContentPlanPostHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "DeleteContentPlanPostLambdaServiceRoleDefaultPolicyE309B8E0",
    "DeleteContentPlanPostLambdaServiceRole889FFD78"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanPostLambda/Resource",
    "aws:asset:path": "asset.d7fe73273913fd80ff59c205e9c0a8f169d627ef64a4f1b81a58413089db8190",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteContentPlanPostLambdaLogRetention02ACDCCD": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeleteContentPlanPostLambda9CD840D1"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanPostLambda/LogRetention/Resource"
   }
  },
  "ListContentPlansLambdaServiceRole367A02FD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/ServiceRole/Resource"
   }
  },
  "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248",
    "Roles": [
     {
      "Ref": "ListContentPlansLambdaServiceRole367A02FD"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListContentPlansLambda95AC08D7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "7ad8964535644f90efb1ed705d6f43e8574a72a15ab878452a02945167913be6.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListContentPlansLambdaServiceRole367A02FD",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-List-Lambda",
    "Handler": "index.ListContentPlansHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "ListContentPlansLambdaServiceRoleDefaultPolicy81EF1248",
    "ListContentPlansLambdaServiceRole367A02FD"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/Resource",
    "aws:asset:path": "asset.7ad8964535644f90efb1ed705d6f43e8574a72a15ab878452a02945167913be6",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListContentPlansLambdaLogRetention3FA2F81F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListContentPlansLambda95AC08D7"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListContentPlansLambda/LogRetention/Resource"
   }
  },
  "GetContentPlanLambdaServiceRole2D75CA0E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/ServiceRole/Resource"
   }
  },
  "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A",
    "Roles": [
     {
      "Ref": "GetContentPlanLambdaServiceRole2D75CA0E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetContentPlanLambda45DE78B9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "40c8eb17c987507d36be3298d8e8540c84a9dd5d6532124850321b345874c5a2.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetContentPlanLambdaServiceRole2D75CA0E",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Get-Lambda",
    "Handler": "index.GetContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetContentPlanLambdaServiceRoleDefaultPolicy0F524B7A",
    "GetContentPlanLambdaServiceRole2D75CA0E"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/Resource",
    "aws:asset:path": "asset.40c8eb17c987507d36be3298d8e8540c84a9dd5d6532124850321b345874c5a2",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetContentPlanLambdaLogRetentionFC90F014": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetContentPlanLambda45DE78B9"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetContentPlanLambda/LogRetention/Resource"
   }
  },
  "AddContentPlanLambdaServiceRole69887C26": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/ServiceRole/Resource"
   }
  },
  "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9",
    "Roles": [
     {
      "Ref": "AddContentPlanLambdaServiceRole69887C26"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddContentPlanLambda2A50CDCC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "7485de8ba3fc3aa37e72d6080826c9bdf68b5e699cd312a3408e88b576e18384.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddContentPlanLambdaServiceRole69887C26",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Add-Lambda",
    "Handler": "index.AddContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "AddContentPlanLambdaServiceRoleDefaultPolicy516C47E9",
    "AddContentPlanLambdaServiceRole69887C26"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/Resource",
    "aws:asset:path": "asset.7485de8ba3fc3aa37e72d6080826c9bdf68b5e699cd312a3408e88b576e18384",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddContentPlanLambdaLogRetention5D7B6F3D": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AddContentPlanLambda2A50CDCC"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddContentPlanLambda/LogRetention/Resource"
   }
  },
  "EditContentPlanLambdaServiceRole25A19D33": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/ServiceRole/Resource"
   }
  },
  "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3",
    "Roles": [
     {
      "Ref": "EditContentPlanLambdaServiceRole25A19D33"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditContentPlanLambdaA1D9BCED": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "07df8350d1350dde30c0d9b52189d2bbae6d21ddc20df99642979b98bd753c91.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditContentPlanLambdaServiceRole25A19D33",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Edit-Lambda",
    "Handler": "index.EditContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "EditContentPlanLambdaServiceRoleDefaultPolicy1AFD06B3",
    "EditContentPlanLambdaServiceRole25A19D33"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/Resource",
    "aws:asset:path": "asset.07df8350d1350dde30c0d9b52189d2bbae6d21ddc20df99642979b98bd753c91",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditContentPlanLambdaLogRetention6366481E": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditContentPlanLambdaA1D9BCED"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditContentPlanLambda/LogRetention/Resource"
   }
  },
  "DeleteContentPlanLambdaServiceRoleAD676078": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/ServiceRole/Resource"
   }
  },
  "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0",
    "Roles": [
     {
      "Ref": "DeleteContentPlanLambdaServiceRoleAD676078"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteContentPlanLambda37ED3EAE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "9c3d4e474e463947fbb8792c940f881bdfb8d003a46484415f4ecae2c04be8c3.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteContentPlanLambdaServiceRoleAD676078",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-ContentPlans-Delete-Lambda",
    "Handler": "index.DeleteContentPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "DeleteContentPlanLambdaServiceRoleDefaultPolicyFB90CDB0",
    "DeleteContentPlanLambdaServiceRoleAD676078"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/Resource",
    "aws:asset:path": "asset.9c3d4e474e463947fbb8792c940f881bdfb8d003a46484415f4ecae2c04be8c3",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteContentPlanLambdaLogRetentionCFFBC149": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeleteContentPlanLambda37ED3EAE"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteContentPlanLambda/LogRetention/Resource"
   }
  },
  "GetCurrencySettingsLambdaServiceRole33B26775": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/ServiceRole/Resource"
   }
  },
  "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3",
    "Roles": [
     {
      "Ref": "GetCurrencySettingsLambdaServiceRole33B26775"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetCurrencySettingsLambdaCBDD42E1": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "021d12b4d165abc6a11a0aff685c0072b1e0ed8b7fd2a20d6cfc999f960cb95c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetCurrencySettingsLambdaServiceRole33B26775",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-CurrencySettings-Get-Lambda",
    "Handler": "index.GetCurrencySettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetCurrencySettingsLambdaServiceRoleDefaultPolicy476605B3",
    "GetCurrencySettingsLambdaServiceRole33B26775"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/Resource",
    "aws:asset:path": "asset.021d12b4d165abc6a11a0aff685c0072b1e0ed8b7fd2a20d6cfc999f960cb95c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetCurrencySettingsLambdaLogRetentionDC470B72": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetCurrencySettingsLambdaCBDD42E1"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetCurrencySettingsLambda/LogRetention/Resource"
   }
  },
  "EditCurrencySettingsLambdaServiceRole9008F6CB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/ServiceRole/Resource"
   }
  },
  "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478",
    "Roles": [
     {
      "Ref": "EditCurrencySettingsLambdaServiceRole9008F6CB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditCurrencySettingsLambda8DC44B43": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "34b0682b07f5fd01d02f02c10ca15c293ab4f0137aea62ba715c95ac483ea153.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditCurrencySettingsLambdaServiceRole9008F6CB",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-CurrencySettings-Update-Lambda",
    "Handler": "index.EditCurrencySettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "EditCurrencySettingsLambdaServiceRoleDefaultPolicyF1B14478",
    "EditCurrencySettingsLambdaServiceRole9008F6CB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/Resource",
    "aws:asset:path": "asset.34b0682b07f5fd01d02f02c10ca15c293ab4f0137aea62ba715c95ac483ea153",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditCurrencySettingsLambdaLogRetention4AF2B4EE": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditCurrencySettingsLambda8DC44B43"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditCurrencySettingsLambda/LogRetention/Resource"
   }
  },
  "ListPaymentOptionsLambdaServiceRoleD3A97E58": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/ServiceRole/Resource"
   }
  },
  "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
    "Roles": [
     {
      "Ref": "ListPaymentOptionsLambdaServiceRoleD3A97E58"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListPaymentOptionsLambdaACAA5262": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "78dfbb00ba88e46b4fe01fd5d2f4a08ed3c48124c33a2879c10e035f315835cd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListPaymentOptionsLambdaServiceRoleD3A97E58",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-List-Lambda",
    "Handler": "index.ListPaymentOptionsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "ListPaymentOptionsLambdaServiceRoleDefaultPolicy7EDC2048",
    "ListPaymentOptionsLambdaServiceRoleD3A97E58"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/Resource",
    "aws:asset:path": "asset.78dfbb00ba88e46b4fe01fd5d2f4a08ed3c48124c33a2879c10e035f315835cd",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListPaymentOptionsLambdaLogRetention4309571E": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListPaymentOptionsLambdaACAA5262"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListPaymentOptionsLambda/LogRetention/Resource"
   }
  },
  "GetPaymentOptionLambdaServiceRoleDC5B8DC2": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304",
    "Roles": [
     {
      "Ref": "GetPaymentOptionLambdaServiceRoleDC5B8DC2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetPaymentOptionLambdaD6DBF61A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "6017954dcd5f8cd83f018c6d05fcb5b8b8542a0322261991c614ee0c00c4f445.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetPaymentOptionLambdaServiceRoleDC5B8DC2",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Get-Lambda",
    "Handler": "index.GetPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetPaymentOptionLambdaServiceRoleDefaultPolicyBDFF2304",
    "GetPaymentOptionLambdaServiceRoleDC5B8DC2"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.6017954dcd5f8cd83f018c6d05fcb5b8b8542a0322261991c614ee0c00c4f445",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetPaymentOptionLambdaLogRetentionEA3D15EA": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetPaymentOptionLambdaD6DBF61A"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetPaymentOptionLambda/LogRetention/Resource"
   }
  },
  "AddPaymentOptionLambdaServiceRole15897195": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
    "Roles": [
     {
      "Ref": "AddPaymentOptionLambdaServiceRole15897195"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddPaymentOptionLambdaBFF77B7F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "0ea1b47e1794cf615c8f7b9a0890873964e5f7e09053580034e48b4ce848d74c.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddPaymentOptionLambdaServiceRole15897195",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Add-Lambda",
    "Handler": "index.AddPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "AddPaymentOptionLambdaServiceRoleDefaultPolicy2C58588A",
    "AddPaymentOptionLambdaServiceRole15897195"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.0ea1b47e1794cf615c8f7b9a0890873964e5f7e09053580034e48b4ce848d74c",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddPaymentOptionLambdaLogRetention47D7EEEB": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AddPaymentOptionLambdaBFF77B7F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddPaymentOptionLambda/LogRetention/Resource"
   }
  },
  "EditPaymentOptionLambdaServiceRole73BB83E4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
    "Roles": [
     {
      "Ref": "EditPaymentOptionLambdaServiceRole73BB83E4"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditPaymentOptionLambda398037A2": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "6fe961c9bd152cd17a0f057c17a535afe5ce1f487e9c1f98c0d97e8f231a70ff.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditPaymentOptionLambdaServiceRole73BB83E4",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Edit-Lambda",
    "Handler": "index.EditPaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "EditPaymentOptionLambdaServiceRoleDefaultPolicyD994B97C",
    "EditPaymentOptionLambdaServiceRole73BB83E4"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/Resource",
    "aws:asset:path": "asset.6fe961c9bd152cd17a0f057c17a535afe5ce1f487e9c1f98c0d97e8f231a70ff",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditPaymentOptionLambdaLogRetentionCC8461A5": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditPaymentOptionLambda398037A2"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditPaymentOptionLambda/LogRetention/Resource"
   }
  },
  "DeletePaymentOptionLambdaServiceRoleB4EBD3CA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/ServiceRole/Resource"
   }
  },
  "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "secretsmanager:*",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
    "Roles": [
     {
      "Ref": "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeletePaymentOptionLambdaEC66351C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "39e70203223fcb8348613299f4e9c617e784de0cbbca7e31e98ec52877cf0d1e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeletePaymentOptionLambdaServiceRoleB4EBD3CA",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-PaymentOptions-Delete-Lambda",
    "Handler": "index.DeletePaymentOptionHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "DeletePaymentOptionLambdaServiceRoleDefaultPolicy0FE9A027",
    "DeletePaymentOptionLambdaServiceRoleB4EBD3CA"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/Resource",
    "aws:asset:path": "asset.39e70203223fcb8348613299f4e9c617e784de0cbbca7e31e98ec52877cf0d1e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeletePaymentOptionLambdaLogRetentionDA6A51E6": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeletePaymentOptionLambdaEC66351C"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeletePaymentOptionLambda/LogRetention/Resource"
   }
  },
  "GetSubscriptionSettingsLambdaServiceRoleAE4FD69B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionSettingsLambda/ServiceRole/Resource"
   }
  },
  "GetSubscriptionSettingsLambdaServiceRoleDefaultPolicy6E4FF3B3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetSubscriptionSettingsLambdaServiceRoleDefaultPolicy6E4FF3B3",
    "Roles": [
     {
      "Ref": "GetSubscriptionSettingsLambdaServiceRoleAE4FD69B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionSettingsLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetSubscriptionSettingsLambdaD3B798F7": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "814f859c7a22cddb2183535b71a0e3fbc6f87cdacb635fae2981ce6a5112bf18.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetSubscriptionSettingsLambdaServiceRoleAE4FD69B",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionSettings-Get-Lambda",
    "Handler": "index.GetSubscriptionSettingsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetSubscriptionSettingsLambdaServiceRoleDefaultPolicy6E4FF3B3",
    "GetSubscriptionSettingsLambdaServiceRoleAE4FD69B"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionSettingsLambda/Resource",
    "aws:asset:path": "asset.814f859c7a22cddb2183535b71a0e3fbc6f87cdacb635fae2981ce6a5112bf18",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetSubscriptionSettingsLambdaLogRetention77F41B4E": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetSubscriptionSettingsLambdaD3B798F7"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionSettingsLambda/LogRetention/Resource"
   }
  },
  "SendTestMessageLambdaServiceRole14BB4964": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendTestMessageLambda/ServiceRole/Resource"
   }
  },
  "SendTestMessageLambdaServiceRoleDefaultPolicy824468AA": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendTestMessageLambdaServiceRoleDefaultPolicy824468AA",
    "Roles": [
     {
      "Ref": "SendTestMessageLambdaServiceRole14BB4964"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendTestMessageLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendTestMessageLambdaD3B92DD3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "244d0a7b0dc2add77975ebed47d2316103a6f33598d623f997a615b3980bba39.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SendTestMessageLambdaServiceRole14BB4964",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SendMessages-SendTestMessage-Lambda",
    "Handler": "index.SendTestMessageHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 900
   },
   "DependsOn": [
    "SendTestMessageLambdaServiceRoleDefaultPolicy824468AA",
    "SendTestMessageLambdaServiceRole14BB4964"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendTestMessageLambda/Resource",
    "aws:asset:path": "asset.244d0a7b0dc2add77975ebed47d2316103a6f33598d623f997a615b3980bba39",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SendTestMessageLambdaLogRetentionD34980C2": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SendTestMessageLambdaD3B92DD3"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendTestMessageLambda/LogRetention/Resource"
   }
  },
  "ListSubscriptionPlansLambdaServiceRole3C8B5C31": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/ServiceRole/Resource"
   }
  },
  "ListSubscriptionPlansLambdaServiceRoleDefaultPolicyAA0E051A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ListSubscriptionPlansLambdaServiceRoleDefaultPolicyAA0E051A",
    "Roles": [
     {
      "Ref": "ListSubscriptionPlansLambdaServiceRole3C8B5C31"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ListSubscriptionPlansLambdaC114B87D": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "6a685ca6cb61022d6039dcb452b235a6e1dbfd53b6a43b6901bbc1cab5f1a93e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "ListSubscriptionPlansLambdaServiceRole3C8B5C31",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-List-Lambda",
    "Handler": "index.ListSubscriptionPlansHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "ListSubscriptionPlansLambdaServiceRoleDefaultPolicyAA0E051A",
    "ListSubscriptionPlansLambdaServiceRole3C8B5C31"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/Resource",
    "aws:asset:path": "asset.6a685ca6cb61022d6039dcb452b235a6e1dbfd53b6a43b6901bbc1cab5f1a93e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "ListSubscriptionPlansLambdaLogRetentionF4F46B3F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ListSubscriptionPlansLambdaC114B87D"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/ListSubscriptionPlansLambda/LogRetention/Resource"
   }
  },
  "GetSubscriptionPlanLambdaServiceRoleEE9C6B15": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "GetSubscriptionPlanLambdaServiceRoleDefaultPolicy03037E09": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "GetSubscriptionPlanLambdaServiceRoleDefaultPolicy03037E09",
    "Roles": [
     {
      "Ref": "GetSubscriptionPlanLambdaServiceRoleEE9C6B15"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "GetSubscriptionPlanLambda38ECFF18": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "926e7fdad38616b49ee3a34b67a1adc6a6e67fb2fdff771c3ca1c699861d59dd.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "GetSubscriptionPlanLambdaServiceRoleEE9C6B15",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Get-Lambda",
    "Handler": "index.GetSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "GetSubscriptionPlanLambdaServiceRoleDefaultPolicy03037E09",
    "GetSubscriptionPlanLambdaServiceRoleEE9C6B15"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.926e7fdad38616b49ee3a34b67a1adc6a6e67fb2fdff771c3ca1c699861d59dd",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "GetSubscriptionPlanLambdaLogRetention849A0D0E": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "GetSubscriptionPlanLambda38ECFF18"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/GetSubscriptionPlanLambda/LogRetention/Resource"
   }
  },
  "AddSubscriptionPlanLambdaServiceRole8024442A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "AddSubscriptionPlanLambdaServiceRoleDefaultPolicy97E5D84B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "AddSubscriptionPlanLambdaServiceRoleDefaultPolicy97E5D84B",
    "Roles": [
     {
      "Ref": "AddSubscriptionPlanLambdaServiceRole8024442A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "AddSubscriptionPlanLambdaCAFEE16F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "8d97bc119f4d8ae384a5116e5b483b68ffb6f0ef00f425393fd174bf8cc476b2.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "AddSubscriptionPlanLambdaServiceRole8024442A",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Add-Lambda",
    "Handler": "index.AddSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "AddSubscriptionPlanLambdaServiceRoleDefaultPolicy97E5D84B",
    "AddSubscriptionPlanLambdaServiceRole8024442A"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.8d97bc119f4d8ae384a5116e5b483b68ffb6f0ef00f425393fd174bf8cc476b2",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "AddSubscriptionPlanLambdaLogRetentionA51550CC": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "AddSubscriptionPlanLambdaCAFEE16F"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/AddSubscriptionPlanLambda/LogRetention/Resource"
   }
  },
  "EditSubscriptionPlanLambdaServiceRoleEBD8353A": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "EditSubscriptionPlanLambdaServiceRoleDefaultPolicy0E8B20B2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "EditSubscriptionPlanLambdaServiceRoleDefaultPolicy0E8B20B2",
    "Roles": [
     {
      "Ref": "EditSubscriptionPlanLambdaServiceRoleEBD8353A"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "EditSubscriptionPlanLambdaDEE52D77": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ffad28852f461215d6ef898a541c30e994d119b285afc443db5e208416576e5a.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "EditSubscriptionPlanLambdaServiceRoleEBD8353A",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Edit-Lambda",
    "Handler": "index.EditSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "EditSubscriptionPlanLambdaServiceRoleDefaultPolicy0E8B20B2",
    "EditSubscriptionPlanLambdaServiceRoleEBD8353A"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.ffad28852f461215d6ef898a541c30e994d119b285afc443db5e208416576e5a",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "EditSubscriptionPlanLambdaLogRetention2B6A2C02": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "EditSubscriptionPlanLambdaDEE52D77"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/EditSubscriptionPlanLambda/LogRetention/Resource"
   }
  },
  "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/ServiceRole/Resource"
   }
  },
  "DeleteSubscriptionPlanLambdaServiceRoleDefaultPolicy6880D94D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "DeleteSubscriptionPlanLambdaServiceRoleDefaultPolicy6880D94D",
    "Roles": [
     {
      "Ref": "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "DeleteSubscriptionPlanLambda97210FAF": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "8b9ffc25481d8ea33d681779b2d67af9392ebcf15c97476e182c9d13f02bb571.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "react-SubscriptionPlans-Delete-Lambda",
    "Handler": "index.DeleteSubscriptionPlanHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 3
   },
   "DependsOn": [
    "DeleteSubscriptionPlanLambdaServiceRoleDefaultPolicy6880D94D",
    "DeleteSubscriptionPlanLambdaServiceRoleAD4731BB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/Resource",
    "aws:asset:path": "asset.8b9ffc25481d8ea33d681779b2d67af9392ebcf15c97476e182c9d13f02bb571",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "DeleteSubscriptionPlanLambdaLogRetentionA0373E84": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "DeleteSubscriptionPlanLambda97210FAF"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/DeleteSubscriptionPlanLambda/LogRetention/Resource"
   }
  },
  "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "DeduplicationScope": "messageGroup",
    "FifoQueue": true,
    "FifoThroughputLimit": "perMessageGroupId",
    "QueueName": "scheduler-schedulerDDBUpdateQueueDLQ.fifo",
    "VisibilityTimeout": 900
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebRestService/scheduler-schedulerDDBUpdateQueueDLQ.fifo/Resource"
   }
  },
  "schedulerschedulerDDBUpdateQueuefifo91FFC94F": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "DeduplicationScope": "messageGroup",
    "FifoQueue": true,
    "FifoThroughputLimit": "perMessageGroupId",
    "QueueName": "scheduler-schedulerDDBUpdateQueue.fifo",
    "RedrivePolicy": {
     "deadLetterTargetArn": {
      "Fn::GetAtt": [
       "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C",
       "Arn"
      ]
     },
     "maxReceiveCount": 3
    },
    "VisibilityTimeout": 900
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebRestService/scheduler-schedulerDDBUpdateQueue.fifo/Resource"
   }
  },
  "SendMessagePreProcessorServiceRole0AE9DB21": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagePreProcessor/ServiceRole/Resource"
   }
  },
  "SendMessagePreProcessorServiceRoleDefaultPolicyC4D4AA01": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo",
        {
         "Fn::GetAtt": [
          "schedulerschedulerDDBUpdateQueuefifo91FFC94F",
          "Arn"
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendMessagePreProcessorServiceRoleDefaultPolicyC4D4AA01",
    "Roles": [
     {
      "Ref": "SendMessagePreProcessorServiceRole0AE9DB21"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagePreProcessor/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendMessagePreProcessor8295B848": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "ad897bb57bfbbad28f1f0375dc413d8b8fc0ad6dfccda99ff1734562a21f1516.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SendMessagePreProcessorServiceRole0AE9DB21",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "schedulerSendQueue": {
       "Fn::Join": [
        "",
        [
         "https://sqs.us-east-1.",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/993738567487/scheduler-schedulerSendQueue.fifo"
        ]
       ]
      },
      "schedulerDDBUpdateQueue": {
       "Ref": "schedulerschedulerDDBUpdateQueuefifo91FFC94F"
      },
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "scheduler-SendMessagePreProcessor-Lambda",
    "Handler": "index.SendMessagePreProcessorHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "SendMessagePreProcessorServiceRoleDefaultPolicyC4D4AA01",
    "SendMessagePreProcessorServiceRole0AE9DB21"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagePreProcessor/Resource",
    "aws:asset:path": "asset.ad897bb57bfbbad28f1f0375dc413d8b8fc0ad6dfccda99ff1734562a21f1516",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SendMessagePreProcessorLogRetentionAF37044B": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SendMessagePreProcessor8295B848"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagePreProcessor/LogRetention/Resource"
   }
  },
  "SendMessageschedulerServiceRole18DB892C": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagescheduler/ServiceRole/Resource"
   }
  },
  "SendMessageschedulerServiceRoleDefaultPolicy84D10FB6": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "SendMessagePreProcessor8295B848",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "SendMessagePreProcessor8295B848",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendMessageschedulerServiceRoleDefaultPolicy84D10FB6",
    "Roles": [
     {
      "Ref": "SendMessageschedulerServiceRole18DB892C"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagescheduler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendMessagescheduler68E4C964": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "507dbdd41b5a0f5a1177c2e679c820bb2f22004607bf67b3d30db29f247bc29b.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SendMessageschedulerServiceRole18DB892C",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "SendMessagePreProcessor": {
       "Ref": "SendMessagePreProcessor8295B848"
      },
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "scheduler-ScheduleMessages-Lambda",
    "Handler": "index.SendMessagesShedulerHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "ReservedConcurrentExecutions": 1,
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "SendMessageschedulerServiceRoleDefaultPolicy84D10FB6",
    "SendMessageschedulerServiceRole18DB892C"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagescheduler/Resource",
    "aws:asset:path": "asset.507dbdd41b5a0f5a1177c2e679c820bb2f22004607bf67b3d30db29f247bc29b",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SendMessageschedulerLogRetention14C56C40": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SendMessagescheduler68E4C964"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessagescheduler/LogRetention/Resource"
   }
  },
  "SendMessageSenderServiceRole1250F146": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageSender/ServiceRole/Resource"
   }
  },
  "SendMessageSenderServiceRoleDefaultPolicy3CB84014": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo"
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendQueueDLQ.fifo"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendMessageSenderServiceRoleDefaultPolicy3CB84014",
    "Roles": [
     {
      "Ref": "SendMessageSenderServiceRole1250F146"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageSender/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendMessageSender0498CBC5": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "38bdcecff97190923841792dd25434475c9b9930e70d88cd57e8f588fc4b8d0d.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SendMessageSenderServiceRole1250F146",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "scheduler-SendMessageSender-Lambda",
    "Handler": "index.SendMessageSenderHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "ReservedConcurrentExecutions": 1,
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "SendMessageSenderServiceRoleDefaultPolicy3CB84014",
    "SendMessageSenderServiceRole1250F146"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageSender/Resource",
    "aws:asset:path": "asset.38bdcecff97190923841792dd25434475c9b9930e70d88cd57e8f588fc4b8d0d",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SendMessageSenderLogRetention650D1B3F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SendMessageSender0498CBC5"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageSender/LogRetention/Resource"
   }
  },
  "SendMessageSenderSqsEventSourceWebRestServiceimportedschedulerSendQueueSendMessageSchedulerF697F3DC14EBCD53": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "SendMessageSender0498CBC5"
    },
    "BatchSize": 1,
    "Enabled": true,
    "EventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-schedulerSendQueue.fifo",
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageSender/SqsEventSource:WebRestServiceimportedschedulerSendQueueSendMessageSchedulerF697F3DC/Resource"
   }
  },
  "SendMessageSenderSqsEventSourceWebRestServiceimportedschedulerSendQueueDLQSendMessageSchedulerF3F36BE035273717": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "SendMessageSender0498CBC5"
    },
    "BatchSize": 1,
    "Enabled": false,
    "EventSourceArn": "arn:aws:sqs:us-east-1:993738567487:scheduler-SendQueueDLQ.fifo",
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageSender/SqsEventSource:WebRestServiceimportedschedulerSendQueueDLQSendMessageSchedulerF3F36BE0/Resource"
   }
  },
  "SendMessageDDBUpdateInProgressServiceRole7D4D0484": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageDDBUpdateInProgress/ServiceRole/Resource"
   }
  },
  "SendMessageDDBUpdateInProgressServiceRoleDefaultPolicyDE676324": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "schedulerschedulerDDBUpdateQueuefifo91FFC94F",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "SendMessageDDBUpdateInProgressServiceRoleDefaultPolicyDE676324",
    "Roles": [
     {
      "Ref": "SendMessageDDBUpdateInProgressServiceRole7D4D0484"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageDDBUpdateInProgress/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "SendMessageDDBUpdateInProgressB178F9F3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "5e8676e0d9d6fb890289a7d241818267cf42a6a3ab3a44e08178aab70b924f4e.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "SendMessageDDBUpdateInProgressServiceRole7D4D0484",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "scheduler-DDBUpdateInProgress-Lambda",
    "Handler": "index.DDBUpdateInProgressHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "ReservedConcurrentExecutions": 1,
    "Runtime": "nodejs16.x",
    "Timeout": 60
   },
   "DependsOn": [
    "SendMessageDDBUpdateInProgressServiceRoleDefaultPolicyDE676324",
    "SendMessageDDBUpdateInProgressServiceRole7D4D0484"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageDDBUpdateInProgress/Resource",
    "aws:asset:path": "asset.5e8676e0d9d6fb890289a7d241818267cf42a6a3ab3a44e08178aab70b924f4e",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "SendMessageDDBUpdateInProgressLogRetention1ADDE414": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "SendMessageDDBUpdateInProgressB178F9F3"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageDDBUpdateInProgress/LogRetention/Resource"
   }
  },
  "SendMessageDDBUpdateInProgressSqsEventSourceWebRestServiceschedulerschedulerDDBUpdateQueuefifoE8560BDC9E593AE0": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "SendMessageDDBUpdateInProgressB178F9F3"
    },
    "BatchSize": 1,
    "Enabled": true,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "schedulerschedulerDDBUpdateQueuefifo91FFC94F",
      "Arn"
     ]
    },
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageDDBUpdateInProgress/SqsEventSource:WebRestServiceschedulerschedulerDDBUpdateQueuefifoE8560BDC/Resource"
   }
  },
  "SendMessageDDBUpdateInProgressSqsEventSourceWebRestServiceschedulerschedulerDDBUpdateQueueDLQfifo9AB36D47EABA7C22": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "SendMessageDDBUpdateInProgressB178F9F3"
    },
    "BatchSize": 1,
    "Enabled": false,
    "EventSourceArn": {
     "Fn::GetAtt": [
      "schedulerschedulerDDBUpdateQueueDLQfifo50CC9D1C",
      "Arn"
     ]
    },
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/SendMessageDDBUpdateInProgress/SqsEventSource:WebRestServiceschedulerschedulerDDBUpdateQueueDLQfifo9AB36D47/Resource"
   }
  },
  "paymentProcessorIncomingRequestsServiceRole555A208F": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorIncomingRequests/ServiceRole/Resource"
   }
  },
  "paymentProcessorIncomingRequestsServiceRoleDefaultPolicyDDCB4396": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo"
       ]
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo"
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "paymentProcessorIncomingRequestsServiceRoleDefaultPolicyDDCB4396",
    "Roles": [
     {
      "Ref": "paymentProcessorIncomingRequestsServiceRole555A208F"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorIncomingRequests/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "paymentProcessorIncomingRequests676308B6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "4320e354a97bcc172a17750a08d937820971faa11dd5843f5a4921889993d7be.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "paymentProcessorIncomingRequestsServiceRole555A208F",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "schedulerSendQueue": {
       "Fn::Join": [
        "",
        [
         "https://sqs.us-east-1.",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/993738567487/scheduler-schedulerSendQueue.fifo"
        ]
       ]
      },
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "paymentProcessor-incomingRequests",
    "Handler": "index.IncomingPaymentRequestsHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "paymentProcessorIncomingRequestsServiceRoleDefaultPolicyDDCB4396",
    "paymentProcessorIncomingRequestsServiceRole555A208F"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorIncomingRequests/Resource",
    "aws:asset:path": "asset.4320e354a97bcc172a17750a08d937820971faa11dd5843f5a4921889993d7be",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "paymentProcessorIncomingRequestsLogRetentionF0D2F4F5": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "paymentProcessorIncomingRequests676308B6"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorIncomingRequests/LogRetention/Resource"
   }
  },
  "paymentProcessorIncomingRequestsSqsEventSourceWebRestServiceimportedPaymentProcessorQueueDQL9DA25AE9C2223A99": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "paymentProcessorIncomingRequests676308B6"
    },
    "BatchSize": 1,
    "Enabled": true,
    "EventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceimportedPaymentProcessorQueueDQL9DA25AE9/Resource"
   }
  },
  "paymentProcessorIncomingRequestsSqsEventSourceWebRestServiceimportedPaymentProcessorQueue0099ABB5314F6B94": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "paymentProcessorIncomingRequests676308B6"
    },
    "BatchSize": 1,
    "Enabled": false,
    "EventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorIncomingRequests/SqsEventSource:WebRestServiceimportedPaymentProcessorQueue0099ABB5/Resource"
   }
  },
  "paymentProcessorConfirmationRequestsServiceRole2AE57561": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorConfirmationRequests/ServiceRole/Resource"
   }
  },
  "paymentProcessorConfirmationRequestsServiceRoleDefaultPolicyB58C561D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "sqs:SendMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequestsDLQ.fifo",
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-IncomingRequests.fifo",
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
        "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo"
       ]
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo"
      },
      {
       "Action": [
        "sqs:ReceiveMessage",
        "sqs:ChangeMessageVisibility",
        "sqs:GetQueueUrl",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo"
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots",
        "arn:aws:dynamodb:us-east-1:993738567487:table/bots/index/*"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::bots-bucket/*",
        "arn:aws:s3:::bots-bucket"
       ]
      },
      {
       "Action": "s3:*",
       "Effect": "Allow",
       "Resource": [
        "arn:aws:s3:::message-files-temp-uploads-bucket/*",
        "arn:aws:s3:::message-files-temp-uploads-bucket"
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "paymentProcessorConfirmationRequestsServiceRoleDefaultPolicyB58C561D",
    "Roles": [
     {
      "Ref": "paymentProcessorConfirmationRequestsServiceRole2AE57561"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorConfirmationRequests/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "paymentProcessorConfirmationRequestsAD69F76E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "597a861ed192594b8ce020c33de2a4577b9ff7ed1728cd0fd2e1736daab9fe66.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "paymentProcessorConfirmationRequestsServiceRole2AE57561",
      "Arn"
     ]
    },
    "Environment": {
     "Variables": {
      "botsTable": "bots",
      "region": "us-east-1",
      "allowedOrigins": "http://localhost,http://localhost:8080,https://zuzona.com,https://*.zuzona.com,http://127.0.0.1,zuzona.com,*.zuzona.com",
      "cookieDomain": "zuzona.com",
      "schedulerSendQueue": {
       "Fn::Join": [
        "",
        [
         "https://sqs.us-east-1.",
         {
          "Ref": "AWS::URLSuffix"
         },
         "/993738567487/scheduler-schedulerSendQueue.fifo"
        ]
       ]
      },
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5645439521:AAGBFsjZ_HDP3aFaJRlPeWLrGlYcEKcn3V0",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "zuzonaHostedZoneId": "/hostedzone/Z08669732ES7CY5LRF03T",
      "mainDomainName": "zuzona.com",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "paymentProcessor-IncomingPaymentConfirmation",
    "Handler": "index.IncomingPaymentConfirmationHandler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:183",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:91",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:105",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:15"
    ],
    "Runtime": "nodejs16.x",
    "Timeout": 15
   },
   "DependsOn": [
    "paymentProcessorConfirmationRequestsServiceRoleDefaultPolicyB58C561D",
    "paymentProcessorConfirmationRequestsServiceRole2AE57561"
   ],
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorConfirmationRequests/Resource",
    "aws:asset:path": "asset.597a861ed192594b8ce020c33de2a4577b9ff7ed1728cd0fd2e1736daab9fe66",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "paymentProcessorConfirmationRequestsLogRetention3E66CB14": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
       }
      ]
     ]
    },
    "RetentionInDays": 1
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorConfirmationRequests/LogRetention/Resource"
   }
  },
  "paymentProcessorConfirmationRequestsSqsEventSourceWebRestServiceimportedPaymentProcessorConfirmationQueueDQLAC0D7D5BFFC62DA2": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
    },
    "BatchSize": 1,
    "Enabled": true,
    "EventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequest.fifo",
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceimportedPaymentProcessorConfirmationQueueDQLAC0D7D5B/Resource"
   }
  },
  "paymentProcessorConfirmationRequestsSqsEventSourceWebRestServiceimportedPaymentProcessorConfirmationQueue1F28191C8338C487": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "FunctionName": {
     "Ref": "paymentProcessorConfirmationRequestsAD69F76E"
    },
    "BatchSize": 1,
    "Enabled": false,
    "EventSourceArn": "arn:aws:sqs:us-east-1:993738567487:paymentProcessor-ConfirmationRequestDLQ.fifo",
    "FunctionResponseTypes": [
     "ReportBatchItemFailures"
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/paymentProcessorConfirmationRequests/SqsEventSource:WebRestServiceimportedPaymentProcessorConfirmationQueue1F28191C/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RTVPCMBD9LdxDFBgdPRbRk2At45kJ6VoCTVKyCQx2+t/Nh2D9OO17u9nsvrdjentPrwfsiENe7oa1WNN2aRnfkQJQO8OB+NqqrZlcl4y2T05xK7SaMgTy8K5yMFIg+kxg5yp5PICyy9g/Z00jVBXKf7MdYY2omIUjO9G2gL0DtJmzG23EB5jQ1GNFKDYiZHsw41w7ZckMmlqfpB8Rsj3m9VRx2QTOwqKEOfjfy1D8QhfZaUjCb+gb85pFkd9kpiUTasFkfN1j4euc2U1P+69URwSTXrGu06QQc10LfoquRtQRo52FmwltswK4NmVaKqAl2I6ko6yULmGLdBHD5QQ4WTFEsEizEDynU8d3YKPuWldIn3VVgPUWxfd7pO2rA5eMiSjMi6DrAnxxtnHeXYdWy3+N+lnKjT6I0h8ubhDcj8rDvnSLV4fRHR2N6WiwRSGGxt9QSKBFip9BwsxVmQIAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "WebRestService/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "WebRestServiceGWAPIEndpoint497456A8": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "/"
     ]
    ]
   }
  },
  "WebRestServiceAPIGWSecureAPI": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebRestServiceGWAPID1BA5018"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebRestServiceGWAPIDeploymentStageSecureAPI70C67597"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "WebRestService-APIGW-SecureAPI"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}