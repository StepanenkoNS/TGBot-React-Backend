{
 "Resources": {
  "TokenServiceLambdaA04CF86C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "bcab624d36ae9bf53cf19d2665c34443722585ded37206ea41b4301c021a4ff9.zip"
    },
    "Role": "arn:aws:iam::993738567487:role/LambdaBasicRole",
    "Environment": {
     "Variables": {
      "accessTokenExpirationMinutes": "5",
      "refreshTokenExpirationDays": "365",
      "AllowUsers": "",
      "LOG_LEVEL": "info",
      "NODE_ENV": "production",
      "botFatherId": "5645439521",
      "BOT_FATHER_TOKEN": "5944896623:AAEd3ACpkzMgwQyEZjihKiQjlglG9ja9zls",
      "tg_api_serverURI": "https://api.telegram.org",
      "botsBucketName": "bots-bucket",
      "tempUploadsBucketName": "message-files-temp-uploads-bucket",
      "pomponaHostedZoneId": "/hostedzone/Z03470091PWKKIZTYD5L4",
      "mainDomainName": "pompona.net",
      "messagingBotTGWebHookSecretToken": "0RS5tfaLGJJPHu0TFRctiFVQHWYGMbdZcxuMH9cq",
      "managementBotTGWebHookSecretToken": "fQWdSALLubGyPkVUi1QpoYwo6OEDG1puT1OqROFVXSVew3vtec4CfRocBlYd",
      "botsTable": "bots",
      "sessionsTable": "telegramSessions",
      "rawStatsTable": "rawStats",
      "processedStatsTable": "processedStats",
      "region": "us-east-1",
      "s3BotsBucket": "bots-bucket",
      "allowedOrigins": "http://localhost,http://localhost:8080,http://localhost:8081,https://pompona.net,https://admin.pompona.net,https://*.pompona.net,http://127.0.0.1,pompona.net,*.pompona.net",
      "cookieDomain": "pompona.net",
      "messagingBotAPIURL": "https://messagingbot-face.pompona.net",
      "managementBotAPIURL": "https://managementbot-face.pompona.net",
      "botTokenEncryptionSalt": "pxZQ53fqkZ1zlK1PiizXSDAj5jOrfvOpWXotobrN",
      "ClusterCount": "1",
      "coolDownPeriodMinutes": "1",
      "masterUserProfileEncryptionSalt": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
      "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
     }
    },
    "FunctionName": "WebTokenService-Lambda",
    "Handler": "index.handler",
    "Layers": [
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersModel:738",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersUtils:458",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersTypes:395",
     "arn:aws:lambda:us-east-1:993738567487:layer:LayersI18N:72"
    ],
    "Runtime": "nodejs16.x"
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/TokenServiceLambda/Resource",
    "aws:asset:path": "asset.bcab624d36ae9bf53cf19d2665c34443722585ded37206ea41b4301c021a4ff9",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "TokenServiceLambdaLogRetention9B6C5D33": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "TokenServiceLambdaA04CF86C"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/TokenServiceLambda/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:PutRetentionPolicy",
        "logs:DeleteRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": "nodejs16.x",
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "WebTokenService/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.5fa1330271b8967d9254ba2d4a07144f8acefe8b77e6d6bba38261373a50d5f8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WebTokenServiceGWAPIAFE5A254": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "WebTokenService-GWAPI"
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Resource"
   }
  },
  "WebTokenServiceGWAPICloudWatchRole2C04FD27": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/CloudWatchRole/Resource"
   }
  },
  "WebTokenServiceGWAPIAccount852D4E01": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "WebTokenServiceGWAPICloudWatchRole2C04FD27",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "WebTokenServiceGWAPIAFE5A254"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Account"
   }
  },
  "WebTokenServiceGWAPIDeployment69CE11EB132c0b844f318d9a0825e2f954b10e91": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "Description": "Automatically created by the RestApi construct"
   },
   "DependsOn": [
    "WebTokenServiceGWAPIgetTokenOPTIONS544CC085",
    "WebTokenServiceGWAPIgetTokenPOST249FA332",
    "WebTokenServiceGWAPIgetTokenEA421B7E",
    "WebTokenServiceGWAPIlogOutGET6FEB5543",
    "WebTokenServiceGWAPIlogOutOPTIONS39CB2C79",
    "WebTokenServiceGWAPIlogOut3A11217E",
    "WebTokenServiceGWAPImeGET7190DC18",
    "WebTokenServiceGWAPImeOPTIONS8D7EB856",
    "WebTokenServiceGWAPImeEE3FC695",
    "WebTokenServiceGWAPIOPTIONSE6785683"
   ],
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Deployment/Resource"
   }
  },
  "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "DeploymentId": {
     "Ref": "WebTokenServiceGWAPIDeployment69CE11EB132c0b844f318d9a0825e2f954b10e91"
    },
    "MethodSettings": [
     {
      "DataTraceEnabled": false,
      "HttpMethod": "*",
      "LoggingLevel": "ERROR",
      "MetricsEnabled": true,
      "ResourcePath": "/*"
     }
    ],
    "StageName": "GetToken"
   },
   "DependsOn": [
    "WebTokenServiceGWAPIAccount852D4E01"
   ],
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/DeploymentStage.GetToken/Resource"
   }
  },
  "WebTokenServiceGWAPIOPTIONSE6785683": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Fn::GetAtt": [
      "WebTokenServiceGWAPIAFE5A254",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/OPTIONS/Resource"
   }
  },
  "WebTokenServiceGWAPImeEE3FC695": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebTokenServiceGWAPIAFE5A254",
      "RootResourceId"
     ]
    },
    "PathPart": "me",
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/me/Resource"
   }
  },
  "WebTokenServiceGWAPImeOPTIONS8D7EB856": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebTokenServiceGWAPImeEE3FC695"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/me/OPTIONS/Resource"
   }
  },
  "WebTokenServiceGWAPImeGETApiPermissionWebTokenServiceWebTokenServiceGWAPID1F20FE9GETme75CCC3CE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenServiceLambdaA04CF86C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebTokenServiceGWAPIAFE5A254"
       },
       "/",
       {
        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
       },
       "/GET/me"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me"
   }
  },
  "WebTokenServiceGWAPImeGETApiPermissionTestWebTokenServiceWebTokenServiceGWAPID1F20FE9GETmeC79145BB": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenServiceLambdaA04CF86C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebTokenServiceGWAPIAFE5A254"
       },
       "/test-invoke-stage/GET/me"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..me"
   }
  },
  "WebTokenServiceGWAPImeGET7190DC18": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebTokenServiceGWAPImeEE3FC695"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TokenServiceLambdaA04CF86C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/me/GET/Resource"
   }
  },
  "WebTokenServiceGWAPIgetTokenEA421B7E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebTokenServiceGWAPIAFE5A254",
      "RootResourceId"
     ]
    },
    "PathPart": "getToken",
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/Resource"
   }
  },
  "WebTokenServiceGWAPIgetTokenOPTIONS544CC085": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebTokenServiceGWAPIgetTokenEA421B7E"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/OPTIONS/Resource"
   }
  },
  "WebTokenServiceGWAPIgetTokenPOSTApiPermissionWebTokenServiceWebTokenServiceGWAPID1F20FE9POSTgetToken4BC33A65": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenServiceLambdaA04CF86C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebTokenServiceGWAPIAFE5A254"
       },
       "/",
       {
        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
       },
       "/POST/getToken"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken"
   }
  },
  "WebTokenServiceGWAPIgetTokenPOSTApiPermissionTestWebTokenServiceWebTokenServiceGWAPID1F20FE9POSTgetToken637DCF76": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenServiceLambdaA04CF86C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebTokenServiceGWAPIAFE5A254"
       },
       "/test-invoke-stage/POST/getToken"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.POST..getToken"
   }
  },
  "WebTokenServiceGWAPIgetTokenPOST249FA332": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "POST",
    "ResourceId": {
     "Ref": "WebTokenServiceGWAPIgetTokenEA421B7E"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TokenServiceLambdaA04CF86C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/getToken/POST/Resource"
   }
  },
  "WebTokenServiceGWAPIlogOut3A11217E": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "WebTokenServiceGWAPIAFE5A254",
      "RootResourceId"
     ]
    },
    "PathPart": "logOut",
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/Resource"
   }
  },
  "WebTokenServiceGWAPIlogOutOPTIONS39CB2C79": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "OPTIONS",
    "ResourceId": {
     "Ref": "WebTokenServiceGWAPIlogOut3A11217E"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*,Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Requested-With,X-Requested-With, X-HTTP-Method-Override,Access-Control-Allow-Origin,Access-Control-Allow-Method,Access-Control-Allow-Headers,Access-Control-Allow-Credentials,Origin'",
        "method.response.header.Access-Control-Allow-Origin": "'http://localhost'",
        "method.response.header.Vary": "'Origin'",
        "method.response.header.Access-Control-Allow-Methods": "'POST'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'"
       },
       "ResponseTemplates": {
        "application/json": "#set($origin = $input.params().header.get(\"Origin\"))\n#if($origin == \"\") #set($origin = $input.params().header.get(\"origin\")) #end\n#if($origin.matches(\"http://localhost:8080\") || $origin.matches(\"http://localhost:8081\") || $origin.matches(\"https://pompona.net\") || $origin.matches(\"https://admin.pompona.net\") || $origin.matches(\"https://*.pompona.net\") || $origin.matches(\"http://127.0.0.1\") || $origin.matches(\"pompona.net\") || $origin.matches(\"*.pompona.net\"))\n  #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)\n#end"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Vary": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true
      },
      "StatusCode": "204"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/OPTIONS/Resource"
   }
  },
  "WebTokenServiceGWAPIlogOutGETApiPermissionWebTokenServiceWebTokenServiceGWAPID1F20FE9GETlogOut59AF7F53": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenServiceLambdaA04CF86C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebTokenServiceGWAPIAFE5A254"
       },
       "/",
       {
        "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
       },
       "/GET/logOut"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/ApiPermission.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut"
   }
  },
  "WebTokenServiceGWAPIlogOutGETApiPermissionTestWebTokenServiceWebTokenServiceGWAPID1F20FE9GETlogOut3875EB3B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "TokenServiceLambdaA04CF86C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:993738567487:",
       {
        "Ref": "WebTokenServiceGWAPIAFE5A254"
       },
       "/test-invoke-stage/GET/logOut"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/ApiPermission.Test.WebTokenServiceWebTokenServiceGWAPID1F20FE9.GET..logOut"
   }
  },
  "WebTokenServiceGWAPIlogOutGET6FEB5543": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "HttpMethod": "GET",
    "ResourceId": {
     "Ref": "WebTokenServiceGWAPIlogOut3A11217E"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "AuthorizationType": "NONE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "TokenServiceLambdaA04CF86C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/Default/logOut/GET/Resource"
   }
  },
  "WebTokenServiceGWAPIWebTokenServiceGWAPIUsagePlanFFD4474E": {
   "Type": "AWS::ApiGateway::UsagePlan",
   "Properties": {
    "ApiStages": [
     {
      "ApiId": {
       "Ref": "WebTokenServiceGWAPIAFE5A254"
      },
      "Stage": {
       "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
      },
      "Throttle": {}
     }
    ],
    "Quota": {
     "Limit": 10000000,
     "Period": "MONTH"
    },
    "Throttle": {
     "BurstLimit": 2,
     "RateLimit": 100
    },
    "UsagePlanName": "WebTokenService-GWAPI-UsagePlan"
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/WebTokenService-GWAPI-UsagePlan/Resource"
   }
  },
  "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C": {
   "Type": "AWS::ApiGateway::DomainName",
   "Properties": {
    "DomainName": "auth.pompona.net",
    "EndpointConfiguration": {
     "Types": [
      "REGIONAL"
     ]
    },
    "RegionalCertificateArn": "arn:aws:acm:us-east-1:993738567487:certificate/b8223b58-c9cf-43f1-89c4-36ab41b581e7"
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Resource"
   }
  },
  "WebTokenServiceGWAPIWebTokenServiceGWSubDomainMapWebTokenServiceWebTokenServiceGWAPID1F20FE968DF6B8B": {
   "Type": "AWS::ApiGateway::BasePathMapping",
   "Properties": {
    "DomainName": {
     "Ref": "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C"
    },
    "RestApiId": {
     "Ref": "WebTokenServiceGWAPIAFE5A254"
    },
    "Stage": {
     "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
    }
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/WebTokenService-GWAPI/WebTokenServiceGW-SubDomain/Map:--=>WebTokenServiceWebTokenServiceGWAPID1F20FE9/Resource"
   }
  },
  "TokenServiceAPIGWARecordE9A60854": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "Name": "auth.pompona.net.",
    "Type": "A",
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C",
       "RegionalDomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::GetAtt": [
       "WebTokenServiceGWAPIWebTokenServiceGWSubDomain771D640C",
       "RegionalHostedZoneId"
      ]
     }
    },
    "HostedZoneId": "Z03470091PWKKIZTYD5L4"
   },
   "DependsOn": [
    "TokenServiceAPIGWARecordDeleteExistingRecordSetCustomResource3B5F67CF"
   ],
   "Metadata": {
    "aws:cdk:path": "WebTokenService/TokenServiceAPIGWARecord/Resource"
   }
  },
  "TokenServiceAPIGWARecordDeleteExistingRecordSetCustomResource3B5F67CF": {
   "Type": "Custom::DeleteExistingRecordSet",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E",
      "Arn"
     ]
    },
    "HostedZoneId": "Z03470091PWKKIZTYD5L4",
    "RecordName": "auth.pompona.net.",
    "RecordType": "A"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WebTokenService/TokenServiceAPIGWARecord/DeleteExistingRecordSetCustomResource/Default"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": "route53:GetChange",
         "Resource": "*"
        },
        {
         "Effect": "Allow",
         "Action": "route53:ListResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z03470091PWKKIZTYD5L4"
           ]
          ]
         }
        },
        {
         "Effect": "Allow",
         "Action": "route53:ChangeResourceRecordSets",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:",
            {
             "Ref": "AWS::Partition"
            },
            ":route53:::hostedzone/Z03470091PWKKIZTYD5L4"
           ]
          ]
         },
         "Condition": {
          "ForAllValues:StringEquals": {
           "route53:ChangeResourceRecordSetsRecordTypes": [
            "A"
           ],
           "route53:ChangeResourceRecordSetsActions": [
            "DELETE"
           ]
          }
         }
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Role"
   }
  },
  "CustomDeleteExistingRecordSetCustomResourceProviderHandlerAD00231E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-993738567487-us-east-1",
     "S3Key": "34beac7d160965a96ce896871cfbdca28814200989c74fab0e1ef0f4bfcec123.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "CustomDeleteExistingRecordSetCustomResourceProviderRole03A7ED08"
   ],
   "Metadata": {
    "aws:cdk:path": "WebTokenService/Custom::DeleteExistingRecordSetCustomResourceProvider/Handler",
    "aws:asset:path": "asset.34beac7d160965a96ce896871cfbdca28814200989c74fab0e1ef0f4bfcec123",
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/11RwW7CMAz9Fu4h20CTdi1DOwGrinZGJvVKShNXdQJCVf99ScqATTn4vdgvz3Zm8m0uXyZw5qkqj9NG72W/daCOokAm3ykUIbfrGzD7EnaWSqxZblL48FY5TVbwfAfM6FhmMQQuF14d0S2AUYxS2b9/25si4Bw7o5kDG0RDFcsVVQU6tKlAg5F9QQ3G0hRzarS6JGVCg4BWV+DwDBfZr5JJ6NllrU6aO8yUIm+dWGLb0MUEh3j7wMLAVTIawe/kqfs1ugOVMXlFt72MJiP+4iDMG0iT3cmSDGi7AZOqH1h8Ogd3WEPbalvF7L+rQXTkHb7OZZ8VqKgrR8OItuiGQaRdx46vDzw29uld68OYnh2Ze+IPzTs66RK7QcRflTU/nWbPMpxJzVpPu7AybVAWY/wBUMDcECkCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "WebTokenService/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "WebTokenServiceGWAPIEndpoint9329497D": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebTokenServiceGWAPIAFE5A254"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
      },
      "/"
     ]
    ]
   }
  },
  "WebTokenServiceGWAPItokenApi": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "WebTokenServiceGWAPIAFE5A254"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "WebTokenServiceGWAPIDeploymentStageGetToken89C1F5C5"
      },
      "/"
     ]
    ]
   },
   "Export": {
    "Name": "WebTokenService-GWAPI-tokenApi"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}